# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2023, Open Robotics
# This file is distributed under the same license as the ROS 2 Documentation: Humble package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2023.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: ROS 2 Documentation: Humble \n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2023-06-15 19:22+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language: zh\n"
"Language-Team: zh <LL@li.org>\n"
"Plural-Forms: nplurals=1; plural=0\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.8.0\n"


#: ../../source/Installation.rst:5
msgid "Installation"
msgstr "安装"


#: ../../source/Installation.rst:7
msgid "Options for installing ROS 2 Humble Hawksbill:"
msgstr "安装ROS 2 Humble Hawksbill的选项："


#: ../../source/Installation.rst:22
msgid "Binary packages"
msgstr "二进制包"


#: ../../source/Installation.rst:24
msgid "Binaries are only created for the Tier 1 operating systems listed in `REP-2000 <https://www.ros.org/reps/rep-2000.html#rolling-ridley-june-2020-ongoing>`__. Given the nature of Rolling, this list may be updated at any time. If you are not running any of the following operating systems you may need to build from source or use a :doc:`container solution <How-To-Guides/Run-2-nodes-in-single-or-separate-docker-containers>` to run ROS 2 on your platform."
msgstr "仅为列在 `REP-2000 <https://www.ros.org/reps/rep-2000.html#rolling-ridley-june-2020-ongoing>`__ 中的一级操作系统创建二进制文件。鉴于Rolling的性质，该列表可能随时更新。如果您没有运行以下任何操作系统，则可能需要从源代码构建或使用 :doc:`容器解决方案 <How-To-Guides/Run-2-nodes-in-single-or-separate-docker-containers>` 在您的平台上运行ROS 2。"


#: ../../source/Installation.rst:28
msgid "We provide ROS 2 binary packages for the following platforms:"
msgstr "我们为以下平台提供ROS 2二进制软件包："


#: ../../source/Installation.rst:30
msgid "Ubuntu Linux - Jammy Jellyfish (22.04)"
msgstr "Ubuntu Linux - Jammy Jellyfish (22.04)"


#: ../../source/Installation.rst:32
msgid ":doc:`Debian packages <Installation/Ubuntu-Install-Debians>` (recommended)"
msgstr ":doc:`Debian软件包 <Installation/Ubuntu-Install-Debians>`（推荐）"


#: ../../source/Installation.rst:33
msgid ":doc:`\"fat\" archive <Installation/Alternatives/Ubuntu-Install-Binary>`"
msgstr ":doc:`\"fat\"存档文件 <Installation/Alternatives/Ubuntu-Install-Binary>`"


#: ../../source/Installation.rst:35
msgid "RHEL 8"
msgstr "RHEL 8"


#: ../../source/Installation.rst:37
msgid ":doc:`RPM packages <Installation/RHEL-Install-RPMs>` (recommended)"
msgstr ":doc:`RPM软件包 <Installation/RHEL-Install-RPMs>`（推荐）"


#: ../../source/Installation.rst:38
msgid ":doc:`\"fat\" archive <Installation/Alternatives/RHEL-Install-Binary>`"
msgstr ":doc:`\"fat\"归档文件 <Installation/Alternatives/RHEL-Install-Binary>`"


#: ../../source/Installation.rst:40
msgid ":doc:`Windows (VS 2019) <Installation/Windows-Install-Binary>`"
msgstr ":doc:`Windows (VS 2019) <Installation/Windows-Install-Binary>`"


#: ../../source/Installation.rst:46 ../../source/Installation/Alternatives/Latest-Development-Setup.rst:13
msgid "Building from source"
msgstr "从源代码构建"


#: ../../source/Installation.rst:48
msgid "We support building ROS 2 from source on the following platforms:"
msgstr "我们支持在以下平台上从源代码构建ROS 2："


#: ../../source/Installation.rst:51
msgid ":doc:`Ubuntu Linux <Installation/Alternatives/Ubuntu-Development-Setup>`"
msgstr ":doc:`Ubuntu Linux <Installation/Alternatives/Ubuntu-Development-Setup>`"


#: ../../source/Installation.rst:52
msgid ":doc:`Windows <Installation/Alternatives/Windows-Development-Setup>`"
msgstr ":doc:`Windows <Installation/Alternatives/Windows-Development-Setup>`"


#: ../../source/Installation.rst:53
msgid ":doc:`RHEL <Installation/Alternatives/RHEL-Development-Setup>`"
msgstr ":doc:`RHEL <Installation/Alternatives/RHEL-Development-Setup>`"


#: ../../source/Installation.rst:54
msgid ":doc:`macOS <Installation/Alternatives/macOS-Development-Setup>`"
msgstr ":doc:`macOS <Installation/Alternatives/macOS-Development-Setup>`"


#: ../../source/Installation.rst:58
msgid "Which install should you choose?"
msgstr "你应该选择哪种安装方式？"


#: ../../source/Installation.rst:60
msgid "Installing from binary packages or from source will both result in a fully-functional and usable ROS 2 install. Differences between the options depend on what you plan to do with ROS 2."
msgstr "从二进制包或源代码安装都可以获得完全功能和可用的ROS 2安装。选项之间的差异取决于您计划如何使用ROS 2。"


#: ../../source/Installation.rst:63
msgid "**Binary packages** are for general use and provide an already-built install of ROS 2. This is great for people who want to dive in and start using ROS 2 as-is, right away."
msgstr "**二进制包**适用于一般用途，并提供了一个已构建的ROS 2安装。这对于希望立即开始使用ROS 2的人来说非常方便。"


#: ../../source/Installation.rst:66
msgid "Linux users have two options for installing binary packages:"
msgstr "Linux 用户有两个选项来安装二进制软件包："


#: ../../source/Installation.rst:68
msgid "Debian packages"
msgstr "Debian 软件包"


#: ../../source/Installation.rst:69
msgid "\"fat\" archive"
msgstr "\"fat\" 存档"


#: ../../source/Installation.rst:71
msgid "Installing from Debian packages is the recommended method. It's more convenient because it installs its necessary dependencies automatically. It also updates alongside regular system updates."
msgstr "从 Debian 软件包安装是推荐的方法。它更方便，因为它会自动安装所需的依赖项。它还会随着常规系统更新而更新。"


#: ../../source/Installation.rst:75
msgid "However, you need root access in order to install Debian packages. If you don't have root access, the \"fat\" archive is the next best choice."
msgstr "然而，你需要 root 访问权限才能安装 Debian 软件包。如果你没有 root 访问权限，\"fat\" 存档是下一个最佳选择。"


#: ../../source/Installation.rst:78
msgid "macOS and Windows users who choose to install from binary packages only have the \"fat\" archive option (Debian packages are exclusive to Ubuntu/Debian)."
msgstr "选择从二进制软件包安装的 macOS 和 Windows 用户只有 \"fat\" 存档选项（Debian 软件包只适用于 Ubuntu/Debian）。"


#: ../../source/Installation.rst:81
msgid "**Building from source** is meant for developers looking to alter or explicitly omit parts of ROS 2's base. It is also recommended for platforms that don't support binaries. Building from source also gives you the option to install the absolute latest version of ROS 2."
msgstr "**从源代码构建**适用于希望更改或明确省略ROS 2基础部分的开发人员。它也推荐用于不支持二进制文件的平台。从源代码构建还提供了安装ROS 2绝对最新版本的选项。"


#: ../../source/Installation.rst:86
msgid "Contributing to ROS 2 core?"
msgstr "对ROS 2核心的贡献？"


#: ../../source/Installation.rst:87
msgid "If you plan to contribute directly to ROS 2 core packages, you can install the :doc:`latest development from source <Installation/Alternatives/Latest-Development-Setup>` which shares installation instructions with the :ref:`Rolling distribution <rolling_distribution>`."
msgstr "如果您计划直接对ROS 2核心包进行贡献，您可以安装：doc:`来自源代码的最新开发版本<Installation/Alternatives/Latest-Development-Setup>`，该安装说明与：ref:`Rolling发行版<rolling_distribution>`共享。"


#: ../../source/Installation/Alternatives.rst:2
msgid "Alternatives"
msgstr "替代方案"


#: ../../source/Installation/Alternatives.rst:4
msgid "A list of alternative ways to install ROS 2 – whether it's by building from source or installing a binary."
msgstr "列出了安装ROS 2的其他方式的列表 - 无论是通过从源代码构建还是安装二进制文件。"


#: ../../source/Installation/Alternatives/Fedora-Development-Setup.rst:6
msgid "Fedora (source)"
msgstr "Fedora（源代码）"


#: ../../source/Installation/Alternatives/Fedora-Development-Setup.rst:9
msgid "How to setup the development environment?"
msgstr "如何设置开发环境？"


#: ../../source/Installation/Alternatives/Fedora-Development-Setup.rst:11
msgid "The following system dependencies are required to build ROS 2 on Fedora. They can be installed with ``dnf`` as follows:"
msgstr "在 Fedora 上构建 ROS 2 需要以下系统依赖项。您可以使用 ``dnf`` 安装它们，如下所示："


#: ../../source/Installation/Alternatives/Fedora-Development-Setup.rst:50
msgid "With this done, you can follow the rest of the :ref:`instructions <rhel-dev-get-ros2-code>` to fetch and build ROS 2."
msgstr "完成上述步骤后，您可以按照 :ref:`说明 <rhel-dev-get-ros2-code>` 继续获取和构建 ROS 2。"


#: ../../source/Installation/Alternatives/Latest-Development-Setup.rst:2
msgid "Latest development (source)"
msgstr "最新的开发版本（源码）"


#: ../../source/Installation/Alternatives/Latest-Development-Setup.rst:4
msgid "If you plan to contribute directly to the latest ROS 2 development, you can install ROS 2 by building it from source or installing testing binaries. This will give you the latest bug fixes and features."
msgstr "如果您计划直接贡献给最新的 ROS 2 开发，可以通过从源代码构建或安装测试二进制文件来安装 ROS 2。这将为您提供最新的错误修复和功能。"


#: ../../source/Installation/Alternatives/Latest-Development-Setup.rst:8
msgid "Testing binaries"
msgstr "测试二进制文件"


#: ../../source/Installation/Alternatives/Latest-Development-Setup.rst:10
msgid "See :doc:`Testing <../Testing>`."
msgstr "请参阅 :doc:`测试 <../Testing>`。"


#: ../../source/Installation/Alternatives/Latest-Development-Setup.rst:17
msgid "The latest development does not go through the same rigorous testing as releases and is not recommended if you are looking for a stable version of ROS 2. Instead, choose a :doc:`ROS distribution <../../Installation>` that has already been released."
msgstr "最新的开发版本没有经过与发布版本相同的严格测试，如果您想要一个稳定版本的ROS 2，不建议使用该版本。相反，选择一个已经发布的 :doc:`ROS 发行版 <../../Installation>`。"


#: ../../source/Installation/Alternatives/Latest-Development-Setup.rst:20
msgid "Follow the links below for the latest setup instructions for your platform:"
msgstr "请按照以下链接获取适用于您平台的最新设置说明："


#: ../../source/Installation/Alternatives/Latest-Development-Setup.rst:22
msgid ":doc:`Ubuntu Linux <Ubuntu-Development-Setup>`"
msgstr ":doc:`Ubuntu Linux <Ubuntu-Development-Setup>`"


#: ../../source/Installation/Alternatives/Latest-Development-Setup.rst:23
msgid ":doc:`macOS <macOS-Development-Setup>`"
msgstr ":doc:`macOS <macOS-Development-Setup>`"


#: ../../source/Installation/Alternatives/Latest-Development-Setup.rst:24
msgid ":doc:`Windows <Windows-Development-Setup>`"
msgstr ":doc:`Windows <Windows-Development-Setup>`"


#: ../../source/Installation/Alternatives/Latest-Development-Setup.rst:26
msgid "For keeping your source code up-to-date, see :doc:`Maintain a source checkout <../Maintaining-a-Source-Checkout>`."
msgstr "要保持您的源代码最新，请参阅：:doc:`保持源代码检出 <../Maintaining-a-Source-Checkout>`。"


#: ../../source/Installation/Alternatives/RHEL-Development-Setup.rst:8
msgid "RHEL (source)"
msgstr "RHEL（源代码）"


#: ../../source/Installation/Alternatives/RHEL-Development-Setup.rst:13 ../../source/Installation/Alternatives/RHEL-Install-Binary.rst:6 ../../source/Installation/Alternatives/Ubuntu-Development-Setup.rst:14 ../../source/Installation/Alternatives/Ubuntu-Install-Binary.rst:10 ../../source/Installation/Alternatives/Windows-Development-Setup.rst:12 ../../source/Installation/Alternatives/macOS-Development-Setup.rst:8 ../../source/Installation/RHEL-Install-RPMs.rst:6 ../../source/Installation/Ubuntu-Install-Debians.rst:10 ../../source/Installation/Windows-Install-Binary.rst:6
msgid "Table of Contents"
msgstr "目录"


#: ../../source/Installation/Alternatives/RHEL-Development-Setup.rst:16 ../../source/Installation/Alternatives/Ubuntu-Development-Setup.rst:17 ../../source/Installation/Alternatives/Windows-Development-Setup.rst:17 ../../source/Installation/Alternatives/macOS-Development-Setup.rst:11 ../../source/Installation/Windows-Install-Binary.rst:17
msgid "System requirements"
msgstr "系统要求"


#: ../../source/Installation/Alternatives/RHEL-Development-Setup.rst:17
msgid "The current target Red Hat platforms for Humble Hawksbill are:"
msgstr "Humble Hawksbill 的当前目标 Red Hat 平台为："


#: ../../source/Installation/Alternatives/RHEL-Development-Setup.rst:19
msgid "Tier 2: RHEL 8 64-bit"
msgstr "第二级：RHEL 8 64 位"


#: ../../source/Installation/Alternatives/RHEL-Development-Setup.rst:21
msgid "As defined in `REP 2000 <https://www.ros.org/reps/rep-2000.html>`_"
msgstr "如 `REP 2000 <https://www.ros.org/reps/rep-2000.html>`_ 中所定义"


#: ../../source/Installation/Alternatives/RHEL-Development-Setup.rst:24 ../../source/Installation/Alternatives/Ubuntu-Development-Setup.rst:34
msgid "System setup"
msgstr "系统设置"


#: ../../source/Installation/Alternatives/RHEL-Development-Setup.rst:27 ../../source/Installation/Alternatives/Ubuntu-Development-Setup.rst:37 ../../source/Installation/RHEL-Install-RPMs.rst:21 ../../source/Installation/Ubuntu-Install-Debians.rst:25
msgid "Set locale"
msgstr "设置区域设置"


#: ../../source/Installation/_RHEL-Set-Locale.rst:1
msgid "Make sure you have a locale which supports ``UTF-8``. If you are in a minimal environment (such as a docker container), the locale may be something minimal like ``C``. We test with the following settings. However, it should be fine if you're using a different UTF-8 supported locale."
msgstr "确保您拥有支持 ``UTF-8`` 的区域设置。如果您使用的是最小环境（如 Docker 容器），区域设置可能是一些最小化的设置，例如 ``C``。我们使用以下设置进行测试。然而，如果您使用的是不同的 UTF-8 支持的区域设置，也应该没问题。"


#: ../../source/Installation/Alternatives/RHEL-Development-Setup.rst:32 ../../source/Installation/Alternatives/RHEL-Install-Binary.rst:24
msgid "Enable required repositories"
msgstr "启用所需的软件仓库"


#: ../../source/Installation/Alternatives/RHEL-Development-Setup.rst:34 ../../source/Installation/Alternatives/RHEL-Install-Binary.rst:26
msgid "The rosdep database contains packages from the EPEL and PowerTools repositories, which are not enabled by default. They can be enabled by running:"
msgstr "rosdep 数据库包含来自 EPEL 和 PowerTools 软件仓库的软件包，默认情况下这些仓库是禁用的。可以通过运行以下命令来启用它们："


#: ../../source/Installation/Alternatives/RHEL-Development-Setup.rst:42 ../../source/Installation/Alternatives/RHEL-Install-Binary.rst:34 ../../source/Installation/RHEL-Install-RPMs.rst:37
msgid "This step may be slightly different depending on the distribution you are using. Check the EPEL documentation: https://docs.fedoraproject.org/en-US/epel/#_quickstart"
msgstr "这一步根据你使用的发行版可能会有些不同。请查阅EPEL文档：https://docs.fedoraproject.org/en-US/epel/#_quickstart"


#: ../../source/Installation/Alternatives/RHEL-Development-Setup.rst:46 ../../source/Installation/Alternatives/Ubuntu-Development-Setup.rst:47
msgid "Install development tools and ROS tools"
msgstr "安装开发工具和ROS工具"


#: ../../source/Installation/Alternatives/RHEL-Development-Setup.rst:82 ../../source/Installation/Alternatives/Ubuntu-Development-Setup.rst:98
msgid "Get ROS 2 code"
msgstr "获取ROS 2代码"


#: ../../source/Installation/Alternatives/RHEL-Development-Setup.rst:84 ../../source/Installation/Alternatives/Ubuntu-Development-Setup.rst:100 ../../source/Installation/Alternatives/macOS-Development-Setup.rst:114
msgid "Create a workspace and clone all repos:"
msgstr "创建一个工作空间并克隆所有仓库："


#: ../../source/Installation/Alternatives/RHEL-Development-Setup.rst:95 ../../source/Installation/Alternatives/Ubuntu-Development-Setup.rst:111
msgid "Install dependencies using rosdep"
msgstr "使用rosdep安装依赖项"


#: ../../source/Installation/_Dnf-Update-Admonition.rst:1
msgid "ROS 2 packages are built on frequently updated RHEL systems. It is always recommended that you ensure your system is up to date before installing new packages."
msgstr "ROS 2包是在经常更新的RHEL系统上构建的。在安装新包之前，建议确保系统已经更新到最新。"


#: ../../source/Installation/Alternatives/RHEL-Development-Setup.rst:106 ../../source/Installation/Alternatives/RHEL-Install-Binary.rst:84 ../../source/Installation/Alternatives/Ubuntu-Development-Setup.rst:124 ../../source/Installation/Alternatives/Ubuntu-Install-Binary.rst:84 ../../source/Installation/Alternatives/Windows-Development-Setup.rst:87 ../../source/Installation/_Windows-Install-Prerequisites.rst:156
msgid "Install additional DDS implementations (optional)"
msgstr "安装额外的DDS实现（可选）"


#: ../../source/Installation/Alternatives/RHEL-Development-Setup.rst:108 ../../source/Installation/Alternatives/RHEL-Install-Binary.rst:86 ../../source/Installation/Alternatives/Ubuntu-Development-Setup.rst:126 ../../source/Installation/Alternatives/Ubuntu-Install-Binary.rst:86 ../../source/Installation/Alternatives/Windows-Development-Setup.rst:91 ../../source/Installation/Alternatives/macOS-Development-Setup.rst:125
msgid "If you would like to use another DDS or RTPS vendor besides the default, you can find instructions :doc:`here <../DDS-Implementations>`."
msgstr "如果您想使用默认之外的其他DDS或RTPS供应商，您可以在这里找到说明：:doc:`这里 <../DDS-Implementations>`。"


#: ../../source/Installation/Alternatives/RHEL-Development-Setup.rst:111 ../../source/Installation/Alternatives/Ubuntu-Development-Setup.rst:129
msgid "Build the code in the workspace"
msgstr "在工作空间中构建代码"


#: ../../source/Installation/Alternatives/RHEL-Development-Setup.rst:113
msgid "If you have already installed ROS 2 another way (either via RPMs or the binary distribution), make sure that you run the below commands in a fresh environment that does not have those other installations sourced. Also ensure that you do not have ``source /opt/ros/${ROS_DISTRO}/setup.bash`` in your ``.bashrc``. You can make sure that ROS 2 is not sourced with the command ``printenv | grep -i ROS``. The output should be empty."
msgstr "如果您已经以其他方式安装了ROS 2（通过RPM或二进制分发），请确保在一个新环境中运行以下命令，该环境没有其他安装被引用。还要确保您的``.bashrc``中没有``source /opt/ros/${ROS_DISTRO}/setup.bash``。您可以使用命令``printenv | grep -i ROS``确保ROS 2没有被引用。输出应为空。"


#: ../../source/Installation/Alternatives/RHEL-Development-Setup.rst:118 ../../source/Installation/Alternatives/Ubuntu-Development-Setup.rst:136
msgid "More info on working with a ROS workspace can be found in :doc:`this tutorial <../../Tutorials/Beginner-Client-Libraries/Colcon-Tutorial>`."
msgstr "有关在ROS工作空间中的操作的更多信息，请参阅：:doc:`本教程 <../../Tutorials/Beginner-Client-Libraries/Colcon-Tutorial>`。"


#: ../../source/Installation/Alternatives/RHEL-Development-Setup.rst:125 ../../source/Installation/Alternatives/Ubuntu-Development-Setup.rst:143
msgid "Note: if you are having trouble compiling all examples and this is preventing you from completing a successful build, you can use ``COLCON_IGNORE`` in the same manner as `CATKIN_IGNORE <https://github.com/ros-infrastructure/rep/blob/master/rep-0128.rst>`__ to ignore the subtree or remove the folder from the workspace. Take for instance: you would like to avoid installing the large OpenCV library. Well then simply run ``touch COLCON_IGNORE`` in the ``cam2image`` demo directory to leave it out of the build process."
msgstr "注意：如果您在编译所有示例时遇到问题，这导致您无法成功构建，您可以像使用 `CATKIN_IGNORE <https://github.com/ros-infrastructure/rep/blob/master/rep-0128.rst>`__ 中的``COLCON_IGNORE``一样，忽略子树或从工作空间中删除该文件夹。例如，假设您希望避免安装庞大的OpenCV库。那么只需在``cam2image``演示目录中运行``touch COLCON_IGNORE``，即可将其排除在构建过程之外。"


#: ../../source/Installation/Alternatives/RHEL-Development-Setup.rst:130 ../../source/Installation/Alternatives/RHEL-Install-Binary.rst:89 ../../source/Installation/Alternatives/Ubuntu-Development-Setup.rst:148 ../../source/Installation/Alternatives/Ubuntu-Install-Binary.rst:89 ../../source/Installation/Alternatives/Windows-Development-Setup.rst:117 ../../source/Installation/Alternatives/macOS-Development-Setup.rst:141 ../../source/Installation/RHEL-Install-RPMs.rst:74 ../../source/Installation/Ubuntu-Install-Debians.rst:76 ../../source/Installation/Windows-Install-Binary.rst:43 ../../source/Installation/Windows-Install-Binary.rst:147
msgid "Environment setup"
msgstr "环境设置"


#: ../../source/Installation/Alternatives/RHEL-Development-Setup.rst:133 ../../source/Installation/Alternatives/RHEL-Install-Binary.rst:92 ../../source/Installation/Alternatives/Ubuntu-Development-Setup.rst:151 ../../source/Installation/Alternatives/Ubuntu-Install-Binary.rst:92
msgid "Source the setup script"
msgstr "执行设置脚本"


#: ../../source/Installation/Alternatives/RHEL-Development-Setup.rst:135 ../../source/Installation/Alternatives/RHEL-Install-Binary.rst:94 ../../source/Installation/Alternatives/Ubuntu-Development-Setup.rst:153 ../../source/Installation/Alternatives/Ubuntu-Install-Binary.rst:94 ../../source/Installation/RHEL-Install-RPMs.rst:79 ../../source/Installation/Ubuntu-Install-Debians.rst:81
msgid "Set up your environment by sourcing the following file."
msgstr "通过源化以下文件来设置您的环境。"


#: ../../source/Installation/Alternatives/RHEL-Development-Setup.rst:146 ../../source/Installation/Alternatives/RHEL-Install-Binary.rst:103 ../../source/Installation/Alternatives/Ubuntu-Development-Setup.rst:164 ../../source/Installation/Alternatives/Ubuntu-Install-Binary.rst:103 ../../source/Installation/Alternatives/macOS-Development-Setup.rst:152 ../../source/Installation/RHEL-Install-RPMs.rst:88 ../../source/Installation/Ubuntu-Install-Debians.rst:90 ../../source/Installation/Windows-Install-Binary.rst:54
msgid "Try some examples"
msgstr "尝试一些示例"


#: ../../source/Installation/Alternatives/RHEL-Development-Setup.rst:148 ../../source/Installation/Alternatives/Ubuntu-Development-Setup.rst:166 ../../source/Installation/RHEL-Install-RPMs.rst:92 ../../source/Installation/Ubuntu-Install-Debians.rst:97
msgid "In one terminal, source the setup file and then run a C++ ``talker``\\ :"
msgstr "在一个终端中，先源化设置文件，然后运行C++的``talker``\\ ："


#: ../../source/Installation/Alternatives/RHEL-Development-Setup.rst:155 ../../source/Installation/Alternatives/Ubuntu-Development-Setup.rst:173 ../../source/Installation/RHEL-Install-RPMs.rst:99 ../../source/Installation/Ubuntu-Install-Debians.rst:104
msgid "In another terminal source the setup file and then run a Python ``listener``\\ :"
msgstr "在另一个终端中，先源化设置文件，然后运行Python的``listener``\\ ："


#: ../../source/Installation/Alternatives/RHEL-Development-Setup.rst:162 ../../source/Installation/Alternatives/RHEL-Install-Binary.rst:119 ../../source/Installation/Alternatives/Ubuntu-Development-Setup.rst:180 ../../source/Installation/Alternatives/Ubuntu-Install-Binary.rst:119 ../../source/Installation/Alternatives/Windows-Development-Setup.rst:165 ../../source/Installation/Alternatives/macOS-Development-Setup.rst:166 ../../source/Installation/RHEL-Install-RPMs.rst:106 ../../source/Installation/Ubuntu-Install-Debians.rst:111 ../../source/Installation/Windows-Install-Binary.rst:68
msgid "You should see the ``talker`` saying that it's ``Publishing`` messages and the ``listener`` saying ``I heard`` those messages. This verifies both the C++ and Python APIs are working properly. Hooray!"
msgstr "你应该看到“talker”说它正在“发布”消息，而“listener”说“我听到了”这些消息。这验证了C++和Python API都正常工作。太棒了！"


#: ../../source/Installation/Alternatives/RHEL-Development-Setup.rst:167 ../../source/Installation/Alternatives/RHEL-Install-Binary.rst:124 ../../source/Installation/Alternatives/Ubuntu-Development-Setup.rst:185 ../../source/Installation/Alternatives/Ubuntu-Install-Binary.rst:124 ../../source/Installation/Alternatives/Windows-Development-Setup.rst:175 ../../source/Installation/Alternatives/macOS-Development-Setup.rst:171 ../../source/Installation/RHEL-Install-RPMs.rst:111 ../../source/Installation/Ubuntu-Install-Debians.rst:116 ../../source/Installation/Windows-Install-Binary.rst:74
msgid "Next steps after installing"
msgstr "安装后的下一步"


#: ../../source/Installation/Alternatives/RHEL-Development-Setup.rst:168 ../../source/Installation/Alternatives/RHEL-Install-Binary.rst:125 ../../source/Installation/Alternatives/Ubuntu-Development-Setup.rst:186 ../../source/Installation/Alternatives/Ubuntu-Install-Binary.rst:125 ../../source/Installation/Alternatives/Windows-Development-Setup.rst:176 ../../source/Installation/RHEL-Install-RPMs.rst:112 ../../source/Installation/Ubuntu-Install-Debians.rst:117 ../../source/Installation/Windows-Install-Binary.rst:75
msgid "Continue with the :doc:`tutorials and demos <../../Tutorials>` to configure your environment, create your own workspace and packages, and learn ROS 2 core concepts."
msgstr "继续进行:doc:`教程和演示 <../../Tutorials>`，以配置你的环境，创建自己的工作空间和包，并学习ROS 2的核心概念。"


#: ../../source/Installation/Alternatives/RHEL-Development-Setup.rst:171 ../../source/Installation/Alternatives/RHEL-Install-Binary.rst:128 ../../source/Installation/Alternatives/Ubuntu-Development-Setup.rst:193 ../../source/Installation/Alternatives/Ubuntu-Install-Binary.rst:132 ../../source/Installation/Alternatives/Windows-Development-Setup.rst:179 ../../source/Installation/Alternatives/macOS-Development-Setup.rst:179 ../../source/Installation/RHEL-Install-RPMs.rst:115 ../../source/Installation/Ubuntu-Install-Debians.rst:124 ../../source/Installation/Windows-Install-Binary.rst:78
msgid "Additional RMW implementations (optional)"
msgstr "其他RMW实现（可选）"


#: ../../source/Installation/Alternatives/RHEL-Development-Setup.rst:172 ../../source/Installation/Alternatives/RHEL-Install-Binary.rst:129 ../../source/Installation/Alternatives/Ubuntu-Development-Setup.rst:194 ../../source/Installation/Alternatives/Ubuntu-Install-Binary.rst:133 ../../source/Installation/Alternatives/Windows-Development-Setup.rst:180 ../../source/Installation/Alternatives/macOS-Development-Setup.rst:180
msgid "The default middleware that ROS 2 uses is ``Fast DDS``, but the middleware (RMW) can be replaced at runtime. See the :doc:`guide <../../How-To-Guides/Working-with-multiple-RMW-implementations>` on how to work with multiple RMWs."
msgstr "ROS 2使用的默认中间件是“Fast DDS”，但是中间件（RMW）可以在运行时替换。请参阅:doc:`指南 <../../How-To-Guides/Working-with-multiple-RMW-implementations>`以了解如何使用多个RMW。"


#: ../../source/Installation/Alternatives/RHEL-Development-Setup.rst:176 ../../source/Installation/Alternatives/Ubuntu-Development-Setup.rst:198
msgid "Alternate compilers"
msgstr "备选编译器"


#: ../../source/Installation/Alternatives/RHEL-Development-Setup.rst:178 ../../source/Installation/Alternatives/Ubuntu-Development-Setup.rst:200
msgid "Using a different compiler besides gcc to compile ROS 2 is easy. If you set the environment variables ``CC`` and ``CXX`` to executables for a working C and C++ compiler, respectively, and retrigger CMake configuration (by using ``--force-cmake-config`` or by deleting the packages you want to be affected), CMake will reconfigure and use the different compiler."
msgstr "使用除gcc之外的其他编译器编译ROS 2很容易。如果你将环境变量``CC``和``CXX``分别设置为可执行的C和C++编译器，并重新触发CMake配置（通过使用``--force-cmake-config``或删除要受影响的软件包），CMake将重新配置并使用不同的编译器。"


#: ../../source/Installation/Alternatives/RHEL-Development-Setup.rst:181 ../../source/Installation/Alternatives/Ubuntu-Development-Setup.rst:203
msgid "Clang"
msgstr "Clang"


#: ../../source/Installation/Alternatives/RHEL-Development-Setup.rst:183 ../../source/Installation/Alternatives/Ubuntu-Development-Setup.rst:205
msgid "To configure CMake to detect and use Clang:"
msgstr "配置CMake以检测并使用Clang的方法："


#: ../../source/Installation/Alternatives/RHEL-Development-Setup.rst:193 ../../source/Installation/Alternatives/Ubuntu-Development-Setup.rst:215 ../../source/Installation/Alternatives/Windows-Development-Setup.rst:268 ../../source/Installation/Alternatives/macOS-Development-Setup.rst:184
msgid "Stay up to date"
msgstr "保持更新"


#: ../../source/Installation/Alternatives/RHEL-Development-Setup.rst:195 ../../source/Installation/Alternatives/Ubuntu-Development-Setup.rst:217 ../../source/Installation/Alternatives/Windows-Development-Setup.rst:270 ../../source/Installation/Alternatives/macOS-Development-Setup.rst:186
msgid "See :doc:`../Maintaining-a-Source-Checkout` to periodically refresh your source installation."
msgstr "参见:doc:`../Maintaining-a-Source-Checkout`以定期刷新你的源代码安装。"


#: ../../source/Installation/Alternatives/RHEL-Development-Setup.rst:198 ../../source/Installation/Alternatives/RHEL-Install-Binary.rst:133 ../../source/Installation/Alternatives/Ubuntu-Development-Setup.rst:220 ../../source/Installation/Alternatives/Ubuntu-Install-Binary.rst:137 ../../source/Installation/Alternatives/Windows-Development-Setup.rst:273 ../../source/Installation/Alternatives/macOS-Development-Setup.rst:189 ../../source/Installation/RHEL-Install-RPMs.rst:120 ../../source/Installation/Ubuntu-Install-Debians.rst:129 ../../source/Installation/Windows-Install-Binary.rst:83
msgid "Troubleshooting"
msgstr "故障排除"


#: ../../source/Installation/Alternatives/RHEL-Development-Setup.rst:200 ../../source/Installation/Alternatives/Ubuntu-Development-Setup.rst:222
msgid "Troubleshooting techniques can be found :ref:`here <linux-troubleshooting>`."
msgstr "故障排除技术可以在此处找到：:ref:`这里 <linux-troubleshooting>`。"


#: ../../source/Installation/Alternatives/RHEL-Development-Setup.rst:203 ../../source/Installation/Alternatives/RHEL-Install-Binary.rst:138 ../../source/Installation/Alternatives/Ubuntu-Development-Setup.rst:225 ../../source/Installation/Alternatives/Ubuntu-Install-Binary.rst:142 ../../source/Installation/Alternatives/Windows-Development-Setup.rst:278 ../../source/Installation/Alternatives/macOS-Development-Setup.rst:194 ../../source/Installation/RHEL-Install-RPMs.rst:125 ../../source/Installation/Ubuntu-Install-Debians.rst:134 ../../source/Installation/Windows-Install-Binary.rst:88 ../../source/Installation/Windows-Install-Binary.rst:166
msgid "Uninstall"
msgstr "卸载"


#: ../../source/Installation/Alternatives/RHEL-Development-Setup.rst:205 ../../source/Installation/Alternatives/RHEL-Install-Binary.rst:140 ../../source/Installation/Alternatives/Ubuntu-Development-Setup.rst:227 ../../source/Installation/Alternatives/Ubuntu-Install-Binary.rst:144 ../../source/Installation/Alternatives/Windows-Development-Setup.rst:280 ../../source/Installation/Alternatives/macOS-Development-Setup.rst:196 ../../source/Installation/Windows-Install-Binary.rst:90
msgid "If you installed your workspace with colcon as instructed above, \"uninstalling\" could be just a matter of opening a new terminal and not sourcing the workspace's ``setup`` file. This way, your environment will behave as though there is no Humble install on your system."
msgstr "如果按照上述指示使用 colcon 安装了工作空间，则“卸载”可能只是打开新终端而不加载工作空间的“setup”文件。这样，您的环境将表现得好像系统中没有安装 Humble。"


#: ../../source/Installation/Alternatives/RHEL-Development-Setup.rst:208 ../../source/Installation/Alternatives/RHEL-Install-Binary.rst:143 ../../source/Installation/Alternatives/Ubuntu-Development-Setup.rst:230 ../../source/Installation/Alternatives/Ubuntu-Install-Binary.rst:147 ../../source/Installation/Alternatives/Windows-Development-Setup.rst:283 ../../source/Installation/Alternatives/macOS-Development-Setup.rst:199 ../../source/Installation/Windows-Install-Binary.rst:93
msgid "If you're also trying to free up space, you can delete the entire workspace directory with:"
msgstr "如果您还想释放空间，可以使用以下命令删除整个工作空间目录："


#: ../../source/Installation/Alternatives/RHEL-Install-Binary.rst:2
msgid "RHEL (binary)"
msgstr "RHEL（二进制）"


#: ../../source/Installation/Alternatives/RHEL-Install-Binary.rst:8
msgid "This page explains how to install ROS 2 on RHEL from a pre-built binary package."
msgstr "此页面说明如何从预构建的二进制包在 RHEL 上安装 ROS 2。"


#: ../../source/Installation/Alternatives/RHEL-Install-Binary.rst:12 ../../source/Installation/Alternatives/Ubuntu-Install-Binary.rst:16 ../../source/Installation/Windows-Install-Binary.rst:12
msgid "The pre-built binary does not include all ROS 2 packages. All packages in the `ROS base variant <https://ros.org/reps/rep-2001.html#ros-base>`_ are included, and only a subset of packages in the `ROS desktop variant <https://ros.org/reps/rep-2001.html#desktop-variants>`_ are included. The exact list of packages are described by the repositories listed in `this ros2.repos file <https://github.com/ros2/ros2/blob/humble/ros2.repos>`_."
msgstr "预构建的二进制文件不包含所有的ROS 2软件包。所有`ROS基础版本<https://ros.org/reps/rep-2001.html#ros-base>`_中的软件包都被包含在内，只包含了`ROS桌面版本<https://ros.org/reps/rep-2001.html#desktop-variants>`_中的一个子集。软件包的确切列表由`此ros2.repos文件<https://github.com/ros2/ros2/blob/humble/ros2.repos>`_中列出的存储库描述。"


#: ../../source/Installation/Alternatives/RHEL-Install-Binary.rst:16
msgid "There are also :doc:`RPM packages <../RHEL-Install-RPMs>` available."
msgstr "还有可用的：doc:`RPM软件包<../RHEL-Install-RPMs>`。"


#: ../../source/Installation/Alternatives/RHEL-Install-Binary.rst:19 ../../source/Installation/Alternatives/Ubuntu-Install-Binary.rst:23
msgid "System Requirements"
msgstr "系统要求"


#: ../../source/Installation/Alternatives/RHEL-Install-Binary.rst:21
msgid "We currently support RHEL 8 64-bit."
msgstr "我们目前支持RHEL 8 64位。"


#: ../../source/Installation/Alternatives/RHEL-Install-Binary.rst:37 ../../source/Installation/_Windows-Install-Prerequisites.rst:2
msgid "Installing prerequisites"
msgstr "安装先决条件"


#: ../../source/Installation/Alternatives/RHEL-Install-Binary.rst:39
msgid "There are a few packages that must be installed in order to get and unpack the binary release."
msgstr "有一些软件包必须安装，才能获取和解压缩二进制发行版。"


#: ../../source/Installation/Alternatives/RHEL-Install-Binary.rst:46 ../../source/Installation/Alternatives/Ubuntu-Install-Binary.rst:33 ../../source/Installation/Windows-Install-Binary.rst:26
msgid "Downloading ROS 2"
msgstr "正在下载 ROS 2"


#: ../../source/Installation/Alternatives/RHEL-Install-Binary.rst:48 ../../source/Installation/Alternatives/Ubuntu-Install-Binary.rst:35
msgid "Go to the `releases page <https://github.com/ros2/ros2/releases>`_"
msgstr "前往 `发布页面 <https://github.com/ros2/ros2/releases>`_"


#: ../../source/Installation/Alternatives/RHEL-Install-Binary.rst:49
msgid "Download the latest package for RHEL; let's assume that it ends up at ``~/Downloads/ros2-package-linux-x86_64.tar.bz2``."
msgstr "下载适用于 RHEL 的最新软件包；假设它最终保存在 ``~/Downloads/ros2-package-linux-x86_64.tar.bz2``。"


#: ../../source/Installation/Alternatives/RHEL-Install-Binary.rst:51 ../../source/Installation/Alternatives/Ubuntu-Install-Binary.rst:38
msgid "Note: there may be more than one binary download option which might cause the file name to differ."
msgstr "注意：可能有多个二进制下载选项，可能会导致文件名不同。"


#: ../../source/Installation/Alternatives/RHEL-Install-Binary.rst:53 ../../source/Installation/Alternatives/Ubuntu-Install-Binary.rst:41
msgid "Unpack it:"
msgstr "解压缩："


#: ../../source/Installation/Alternatives/RHEL-Install-Binary.rst:62 ../../source/Installation/Alternatives/Ubuntu-Install-Binary.rst:50
msgid "Installing and initializing rosdep"
msgstr "安装和初始化 rosdep"


#: ../../source/Installation/Alternatives/RHEL-Install-Binary.rst:73 ../../source/Installation/Alternatives/Ubuntu-Install-Binary.rst:62
msgid "Installing the missing dependencies"
msgstr "安装缺失的依赖项"


#: ../../source/Installation/Alternatives/RHEL-Install-Binary.rst:77 ../../source/Installation/Alternatives/Ubuntu-Install-Binary.rst:66
msgid "Set your rosdistro according to the release you downloaded."
msgstr "根据您下载的版本设置您的rosdistro。"


#: ../../source/Installation/Alternatives/RHEL-Install-Binary.rst:105 ../../source/Installation/Alternatives/Ubuntu-Install-Binary.rst:105
msgid "In one terminal, source the setup file and then run a C++ ``talker``:"
msgstr "在一个终端中，先源文件设置文件，然后运行一个C++ ``talker``："


#: ../../source/Installation/Alternatives/RHEL-Install-Binary.rst:112 ../../source/Installation/Alternatives/Ubuntu-Install-Binary.rst:112 ../../source/Installation/Alternatives/macOS-Development-Setup.rst:160
msgid "In another terminal source the setup file and then run a Python ``listener``:"
msgstr "在另一个终端中，先源文件设置文件，然后运行一个Python ``listener``："


#: ../../source/Installation/Alternatives/RHEL-Install-Binary.rst:135 ../../source/Installation/Alternatives/Ubuntu-Install-Binary.rst:139
msgid "Troubleshooting techniques can be found :doc:`here <../../How-To-Guides/Installation-Troubleshooting>`."
msgstr "故障排除技巧可以在这里找到：:doc:`这里 <../../How-To-Guides/Installation-Troubleshooting>`。"


#: ../../source/Installation/Alternatives/Ubuntu-Development-Setup.rst:9
msgid "Ubuntu (source)"
msgstr "Ubuntu（源代码）"


#: ../../source/Installation/Alternatives/Ubuntu-Development-Setup.rst:18
msgid "The current Debian-based target platforms for Humble Hawksbill are:"
msgstr "Humble Hawksbill的当前基于Debian的目标平台为:"


#: ../../source/Installation/Alternatives/Ubuntu-Development-Setup.rst:20
msgid "Tier 1: Ubuntu Linux - Jammy (22.04) 64-bit"
msgstr "Tier 1: Ubuntu Linux - Jammy (22.04) 64位"


#: ../../source/Installation/Alternatives/Ubuntu-Development-Setup.rst:21
msgid "Tier 3: Ubuntu Linux - Focal (20.04) 64-bit"
msgstr "Tier 3: Ubuntu Linux - Focal (20.04) 64位"


#: ../../source/Installation/Alternatives/Ubuntu-Development-Setup.rst:22
msgid "Tier 3: Debian Linux - Bullseye (11) 64-bit"
msgstr "Tier 3: Debian Linux - Bullseye (11) 64位"


#: ../../source/Installation/Alternatives/Ubuntu-Development-Setup.rst:25
msgid "Other Linux platforms with varying support levels include:"
msgstr "其他具有不同支持级别的Linux平台包括:"


#: ../../source/Installation/Alternatives/Ubuntu-Development-Setup.rst:27
msgid "Arch Linux, see `alternate instructions <https://wiki.archlinux.org/index.php/ROS#ROS_2>`__"
msgstr "Arch Linux，请参阅`其他说明 <https://wiki.archlinux.org/index.php/ROS#ROS_2>`__"


#: ../../source/Installation/Alternatives/Ubuntu-Development-Setup.rst:28
msgid "Fedora Linux, see :doc:`alternate instructions <Fedora-Development-Setup>`"
msgstr "Fedora Linux，请参阅 :doc:`替代说明 <Fedora-Development-Setup>`"


#: ../../source/Installation/Alternatives/Ubuntu-Development-Setup.rst:29
msgid "OpenEmbedded / webOS OSE, see `alternate instructions <https://github.com/ros/meta-ros/wiki/OpenEmbedded-Build-Instructions>`__"
msgstr "OpenEmbedded / webOS OSE，请参阅 `替代说明 <https://github.com/ros/meta-ros/wiki/OpenEmbedded-Build-Instructions>`__"


#: ../../source/Installation/Alternatives/Ubuntu-Development-Setup.rst:31
msgid "As defined in `REP 2000 <https://www.ros.org/reps/rep-2000.html>`_."
msgstr "如 `REP 2000 <https://www.ros.org/reps/rep-2000.html>`_ 中所定义。"


#: ../../source/Installation/_Ubuntu-Set-Locale.rst:1
msgid "Make sure you have a locale which supports ``UTF-8``. If you are in a minimal environment (such as a docker container), the locale may be something minimal like ``POSIX``. We test with the following settings. However, it should be fine if you're using a different UTF-8 supported locale."
msgstr "确保您的系统支持 ``UTF-8`` 语言环境。如果您处于最小化环境（例如 Docker 容器），语言环境可能是最小化的，如 ``POSIX``。我们使用以下设置进行测试。不过，如果您使用其他支持 UTF-8 的语言环境，应该也没问题。"


#: ../../source/Installation/Alternatives/Ubuntu-Development-Setup.rst:42 ../../source/Installation/Alternatives/Ubuntu-Install-Binary.rst:28
msgid "Add the ROS 2 apt repository"
msgstr "添加 ROS 2 apt 仓库"


#: ../../source/Installation/_Apt-Repositories.rst:1
msgid "You will need to add the ROS 2 apt repository to your system."
msgstr "您需要将 ROS 2 apt 仓库添加到您的系统中。"


#: ../../source/Installation/_Apt-Repositories.rst:3
msgid "First ensure that the `Ubuntu Universe repository <https://help.ubuntu.com/community/Repositories/Ubuntu>`_ is enabled."
msgstr "首先确保已启用 `Ubuntu Universe 软件源 <https://help.ubuntu.com/community/Repositories/Ubuntu>`_。"


#: ../../source/Installation/_Apt-Repositories.rst:10
msgid "Now add the ROS 2 GPG key with apt."
msgstr "然后使用 apt 添加 ROS 2 GPG 密钥。"


#: ../../source/Installation/_Apt-Repositories.rst:17
msgid "Then add the repository to your sources list."
msgstr "接下来将软件源添加到您的源列表中。"


#: ../../source/Installation/Alternatives/Ubuntu-Development-Setup.rst:49
msgid "Install common packages."
msgstr "安装常用软件包。"


#: ../../source/Installation/Alternatives/Ubuntu-Development-Setup.rst:59
msgid "Install packages according to your Ubuntu version."
msgstr "根据您的 Ubuntu 版本安装软件包。"


#: ../../source/Installation/Alternatives/Ubuntu-Development-Setup.rst:63
msgid "Ubuntu 22.04 LTS and later"
msgstr "Ubuntu 22.04 LTS 及更高版本"


#: ../../source/Installation/Alternatives/Ubuntu-Development-Setup.rst:78
msgid "Ubuntu 20.04 LTS"
msgstr "Ubuntu 20.04 LTS"


#: ../../source/Installation/_Apt-Upgrade-Admonition.rst:1
msgid "ROS 2 packages are built on frequently updated Ubuntu systems. It is always recommended that you ensure your system is up to date before installing new packages."
msgstr "ROS 2 包是建立在频繁更新的 Ubuntu 系统上的。在安装新的包之前，始终建议确保您的系统是最新的。"


#: ../../source/Installation/_rosdep_Linux_Mint.rst:1
msgid "**Note**: If you're using a distribution that is based on Ubuntu (like Linux Mint) but does not identify itself as such, you'll get an error message like ``Unsupported OS [mint]``. In this case append ``--os=ubuntu:jammy`` to the above command."
msgstr "**注意**：如果您使用的是基于 Ubuntu 的发行版（如 Linux Mint），但它没有将自己标识为 Ubuntu，您将收到类似 ``Unsupported OS [mint]`` 的错误消息。在这种情况下，请在上述命令后面添加 ``--os=ubuntu:jammy``。"


#: ../../source/Installation/Alternatives/Ubuntu-Development-Setup.rst:131
msgid "If you have already installed ROS 2 another way (either via Debians or the binary distribution), make sure that you run the below commands in a fresh environment that does not have those other installations sourced. Also ensure that you do not have ``source /opt/ros/${ROS_DISTRO}/setup.bash`` in your ``.bashrc``. You can make sure that ROS 2 is not sourced with the command ``printenv | grep -i ROS``. The output should be empty."
msgstr "如果您已经以其他方式安装了 ROS 2（无论是通过 Debian 还是二进制发行版），请确保在没有这些其他安装源的新环境中运行以下命令。还要确保您的 ``.bashrc`` 文件中没有 ``source /opt/ros/${ROS_DISTRO}/setup.bash``。您可以使用命令 ``printenv | grep -i ROS`` 确认未加载 ROS 2。输出应为空。"


#: ../../source/Installation/Alternatives/Ubuntu-Development-Setup.rst:189 ../../source/Installation/Alternatives/Ubuntu-Install-Binary.rst:128 ../../source/Installation/Alternatives/macOS-Development-Setup.rst:175 ../../source/Installation/Ubuntu-Install-Debians.rst:120
msgid "Using the ROS 1 bridge"
msgstr "使用 ROS 1 桥接器"


#: ../../source/Installation/Alternatives/Ubuntu-Development-Setup.rst:190 ../../source/Installation/Alternatives/Ubuntu-Install-Binary.rst:129 ../../source/Installation/Alternatives/macOS-Development-Setup.rst:176 ../../source/Installation/Ubuntu-Install-Debians.rst:121
msgid "The ROS 1 bridge can connect topics from ROS 1 to ROS 2 and vice-versa. See the dedicated `documentation <https://github.com/ros2/ros1_bridge/blob/master/README.md>`__ on how to build and use the ROS 1 bridge."
msgstr "ROS 1 桥接器可以连接 ROS 1 和 ROS 2 的主题。请参阅专门的 `文档 <https://github.com/ros2/ros1_bridge/blob/master/README.md>`__ 以了解如何构建和使用 ROS 1 桥接器。"


#: ../../source/Installation/Alternatives/Ubuntu-Install-Binary.rst:6
msgid "Ubuntu (binary)"
msgstr "Ubuntu（二进制）"


#: ../../source/Installation/Alternatives/Ubuntu-Install-Binary.rst:12
msgid "This page explains how to install ROS 2 on Ubuntu Linux from a pre-built binary package."
msgstr "本页面说明如何从预构建的二进制软件包在Ubuntu Linux上安装ROS 2。"


#: ../../source/Installation/Alternatives/Ubuntu-Install-Binary.rst:20
msgid "There are also :doc:`Debian packages <../Ubuntu-Install-Debians>` available."
msgstr "还有可用的：doc:`Debian软件包 <../Ubuntu-Install-Debians>`。"


#: ../../source/Installation/Alternatives/Ubuntu-Install-Binary.rst:25
msgid "We currently support Ubuntu Linux Jammy (22.04) 64-bit x86 and 64-bit ARM."
msgstr "我们目前支持Ubuntu Linux Jammy（22.04）64位x86和64位ARM。"


#: ../../source/Installation/Alternatives/Ubuntu-Install-Binary.rst:36
msgid "Download the latest package for Ubuntu; let's assume that it ends up at ``~/Downloads/ros2-package-linux-x86_64.tar.bz2``."
msgstr "下载适用于Ubuntu的最新软件包；假设它最终保存在``~/Downloads/ros2-package-linux-x86_64.tar.bz2``。"


#: ../../source/Installation/Alternatives/Ubuntu-Install-Binary.rst:75
msgid "Install development tools (optional)"
msgstr "安装开发工具（可选）"


#: ../../source/Installation/Alternatives/Ubuntu-Install-Binary.rst:77
msgid "If you are going to build ROS packages or otherwise do development, you can also install the development tools:"
msgstr "如果您要构建ROS软件包或进行其他开发工作，还可以安装开发工具："


#: ../../source/Installation/Alternatives/Windows-Development-Setup.rst:8
msgid "Windows (source)"
msgstr "Windows（源代码）"


#: ../../source/Installation/Alternatives/Windows-Development-Setup.rst:14
msgid "This guide is about how to setup a development environment for ROS 2 on Windows."
msgstr "本指南介绍了如何在Windows上设置ROS 2的开发环境。"


#: ../../source/Installation/Alternatives/Windows-Development-Setup.rst:19 ../../source/Installation/Windows-Install-Binary.rst:19
msgid "Only Windows 10 is supported."
msgstr "仅支持Windows 10。"


#: ../../source/Installation/Alternatives/Windows-Development-Setup.rst:22
msgid "Language support"
msgstr "语言支持"


#: ../../source/Installation/Alternatives/Windows-Development-Setup.rst:24
msgid "Make sure you have a locale which supports ``UTF-8``. For example, for a Chinese-language Windows 10 installation, you may need to install an `English language pack <https://support.microsoft.com/en-us/windows/language-packs-for-windows-a5094319-a92d-18de-5b53-1cfc697cfca8>`_."
msgstr "请确保您有一个支持``UTF-8``的语言环境。例如，对于中文语言的Windows 10安装，您可能需要安装一个`英语语言包<https://support.microsoft.com/en-us/windows/language-packs-for-windows-a5094319-a92d-18de-5b53-1cfc697cfca8>`_。"


#: ../../source/Installation/_Windows-Install-Prerequisites.rst:5
msgid "Install Chocolatey"
msgstr "安装 Chocolatey"


#: ../../source/Installation/_Windows-Install-Prerequisites.rst:7
msgid "Chocolatey is a package manager for Windows, install it by following their installation instructions:"
msgstr "Chocolatey 是 Windows 的软件包管理器，请按照他们的安装说明进行安装:"


#: ../../source/Installation/_Windows-Install-Prerequisites.rst:9
msgid "https://chocolatey.org/install"
msgstr "https://chocolatey.org/install"


#: ../../source/Installation/_Windows-Install-Prerequisites.rst:11
msgid "You'll use Chocolatey to install some other developer tools."
msgstr "您将使用 Chocolatey 安装其他一些开发工具。"


#: ../../source/Installation/_Windows-Install-Prerequisites.rst:14
msgid "Install Python"
msgstr "安装 Python"


#: ../../source/Installation/_Windows-Install-Prerequisites.rst:16
msgid "Open a Command Prompt and type the following to install Python via Chocolatey:"
msgstr "打开命令提示符并输入以下命令通过 Chocolatey 安装 Python："


#: ../../source/Installation/_Windows-Install-Prerequisites.rst:23
msgid "Install Visual C++ Redistributables"
msgstr "安装 Visual C++ Redistributables"


#: ../../source/Installation/_Windows-Install-Prerequisites.rst:25
msgid "Open a Command Prompt and type the following to install them via Chocolatey:"
msgstr "打开命令提示符并输入以下命令通过 Chocolatey 安装它们:"


#: ../../source/Installation/_Windows-Install-Prerequisites.rst:32
msgid "Install OpenSSL"
msgstr "安装 OpenSSL"


#: ../../source/Installation/_Windows-Install-Prerequisites.rst:34
msgid "Download the *Win64 OpenSSL v1.1.1n* OpenSSL installer from `this page <https://slproweb.com/products/Win32OpenSSL.html>`__. Scroll to the bottom of the page and download *Win64 OpenSSL v1.1.1t*. Don't download the Win32 or Light versions, or the v3.X.Y installers."
msgstr "从 `此页面 <https://slproweb.com/products/Win32OpenSSL.html>`__ 下载 *Win64 OpenSSL v1.1.1n* OpenSSL 安装程序。滚动到页面底部下载 *Win64 OpenSSL v1.1.1t*。不要下载 Win32 或 Light 版本，也不要下载 v3.X.Y 安装程序。"


#: ../../source/Installation/_Windows-Install-Prerequisites.rst:38
msgid "Run the installer with default parameters, as the following commands assume you used the default installation directory."
msgstr "使用默认参数运行安装程序，因为下面的命令假设你使用了默认安装目录。"


#: ../../source/Installation/_Windows-Install-Prerequisites.rst:40
msgid "This command sets an environment variable that persists over sessions:"
msgstr "此命令设置一个在会话间持久存在的环境变量："


#: ../../source/Installation/_Windows-Install-Prerequisites.rst:46
msgid "You will need to append the OpenSSL-Win64 bin folder to your PATH. You can do this by clicking the Windows icon, typing \"Environment Variables\", then clicking on \"Edit the system environment variables\". In the resulting dialog, click \"Environment Variables\", then click \"Path\" on the bottom pane, finally click \"Edit\" and add the path below."
msgstr "您需要将OpenSSL-Win64 bin文件夹添加到您的PATH中。您可以通过点击Windows图标，输入\"环境变量\"，然后点击\"编辑系统环境变量\"来实现这一点。在弹出的对话框中，点击\"环境变量\"，然后点击底部窗格上的\"Path\"，最后点击\"编辑\"并添加下面的路径。"


#: ../../source/Installation/_Windows-Install-Prerequisites.rst:50
msgid "``C:\\Program Files\\OpenSSL-Win64\\bin\\``"
msgstr "``C:\\Program Files\\OpenSSL-Win64\\bin\\``"


#: ../../source/Installation/_Windows-Install-Prerequisites.rst:53
msgid "Install Visual Studio"
msgstr "安装Visual Studio"


#: ../../source/Installation/_Windows-Install-Prerequisites.rst:55
msgid "Install Visual Studio 2019."
msgstr "安装Visual Studio 2019。"


#: ../../source/Installation/_Windows-Install-Prerequisites.rst:57
msgid "If you already have a paid version of Visual Studio 2019 (Professional, Enterprise), skip this step."
msgstr "如果您已经拥有付费版本的Visual Studio 2019（专业版、企业版），请跳过此步骤。"


#: ../../source/Installation/_Windows-Install-Prerequisites.rst:59
msgid "Microsoft provides a free of charge version of Visual Studio 2019, named Community, which can be used to build applications that use ROS 2. `You can download the installer directly through this link. <https://visualstudio.microsoft.com/thank-you-downloading-visual-studio/?sku=Community&rel=16&src=myvs&utm_medium=microsoft&utm_source=my.visualstudio.com&utm_campaign=download&utm_content=vs+community+2019>`_"
msgstr "微软提供了一个免费的Visual Studio 2019版本，名为Community，可以用于构建使用ROS 2的应用程序。您可以通过以下链接直接下载安装程序。 <https://visualstudio.microsoft.com/thank-you-downloading-visual-studio/?sku=Community&rel=16&src=myvs&utm_medium=microsoft&utm_source=my.visualstudio.com&utm_campaign=download&utm_content=vs+community+2019>`_"


#: ../../source/Installation/_Windows-Install-Prerequisites.rst:62
msgid "Make sure that the Visual C++ features are installed."
msgstr "确保已安装 Visual C++ 功能。"


#: ../../source/Installation/_Windows-Install-Prerequisites.rst:64
msgid "An easy way to make sure they're installed is to select the ``Desktop development with C++`` workflow during the install."
msgstr "一种确保其已安装的简单方法是在安装过程中选择``使用 C++ 的桌面开发``工作流程。"


#: ../../source/Installation/_Windows-Install-Prerequisites.rst:68
msgid "Make sure that no C++ CMake tools are installed by unselecting them in the list of components to be installed."
msgstr "确保未安装任何 C++ CMake 工具，取消选择安装组件列表中的相应选项。"


#: ../../source/Installation/_Windows-Install-Prerequisites.rst:71
msgid "Install OpenCV"
msgstr "安装 OpenCV。"


#: ../../source/Installation/_Windows-Install-Prerequisites.rst:73
msgid "Some of the examples require OpenCV to be installed."
msgstr "某些示例需要安装 OpenCV。"


#: ../../source/Installation/_Windows-Install-Prerequisites.rst:75
msgid "You can download a precompiled version of OpenCV 3.4.6 from https://github.com/ros2/ros2/releases/download/opencv-archives/opencv-3.4.6-vc16.VS2019.zip ."
msgstr "您可以从https://github.com/ros2/ros2/releases/download/opencv-archives/opencv-3.4.6-vc16.VS2019.zip 下载预编译的 OpenCV 3.4.6 版本。"


#: ../../source/Installation/_Windows-Install-Prerequisites.rst:77
msgid "Assuming you unpacked it to ``C:\\opencv``, type the following on a Command Prompt (requires Admin privileges):"
msgstr "假设您将其解压到 ``C:\\opencv``，请在命令提示符上键入以下内容（需要管理员权限）："


#: ../../source/Installation/_Windows-Install-Prerequisites.rst:83
msgid "Since you are using a precompiled ROS version, we have to tell it where to find the OpenCV libraries. You have to extend the ``PATH`` variable to ``C:\\opencv\\x64\\vc16\\bin``."
msgstr "由于您使用的是预编译的ROS版本，我们必须告诉它在哪里找到OpenCV库。您需要将``PATH``变量扩展到``C:\\opencv\\x64\\vc16\\bin``。"


#: ../../source/Installation/_Windows-Install-Prerequisites.rst:87
msgid "Install dependencies"
msgstr "安装依赖项"


#: ../../source/Installation/_Windows-Install-Prerequisites.rst:89
msgid "There are a few dependencies not available in the Chocolatey package database. In order to ease the manual installation process, we provide the necessary Chocolatey packages."
msgstr "在Chocolatey软件包数据库中没有一些依赖项。为了简化手动安装过程，我们提供了必要的Chocolatey软件包。"


#: ../../source/Installation/_Windows-Install-Prerequisites.rst:92
msgid "As some chocolatey packages rely on it, we start by installing CMake"
msgstr "由于一些Chocolatey软件包依赖它，我们首先安装CMake"


#: ../../source/Installation/_Windows-Install-Prerequisites.rst:98
msgid "You will need to append the CMake bin folder ``C:\\Program Files\\CMake\\bin`` to your PATH."
msgstr "您需要将CMake的bin文件夹``C:\\Program Files\\CMake\\bin``添加到您的PATH中。"


#: ../../source/Installation/_Windows-Install-Prerequisites.rst:100
msgid "Please download these packages from `this <https://github.com/ros2/choco-packages/releases/latest>`__ GitHub repository."
msgstr "请从 `这个 <https://github.com/ros2/choco-packages/releases/latest>`__ GitHub 仓库下载这些软件包。"


#: ../../source/Installation/_Windows-Install-Prerequisites.rst:102
msgid "asio.1.12.1.nupkg"
msgstr "asio.1.12.1.nupkg"


#: ../../source/Installation/_Windows-Install-Prerequisites.rst:103
msgid "bullet.3.17.nupkg"
msgstr "bullet.3.17.nupkg"


#: ../../source/Installation/_Windows-Install-Prerequisites.rst:104
msgid "cunit.2.1.3.nupkg"
msgstr "cunit.2.1.3.nupkg"


#: ../../source/Installation/_Windows-Install-Prerequisites.rst:105
msgid "eigen-3.3.4.nupkg"
msgstr "eigen-3.3.4.nupkg"


#: ../../source/Installation/_Windows-Install-Prerequisites.rst:106
msgid "tinyxml-usestl.2.6.2.nupkg"
msgstr "tinyxml-usestl.2.6.2.nupkg"


#: ../../source/Installation/_Windows-Install-Prerequisites.rst:107
msgid "tinyxml2.6.0.0.nupkg"
msgstr "tinyxml2.6.0.0.nupkg"


#: ../../source/Installation/_Windows-Install-Prerequisites.rst:109
msgid "Once these packages are downloaded, open an administrative shell and execute the following command:"
msgstr "下载完这些包后，打开管理员权限的命令行窗口并执行以下命令："


#: ../../source/Installation/_Windows-Install-Prerequisites.rst:115
msgid "Please replace ``<PATH\\TO\\DOWNLOADS>`` with the folder you downloaded the packages to."
msgstr "请将 ``<PATH\\TO\\DOWNLOADS>`` 替换为您下载包的文件夹路径。"


#: ../../source/Installation/_Windows-Install-Prerequisites.rst:117
msgid "First upgrade pip and setuptools:"
msgstr "首先升级 pip 和 setuptools："


#: ../../source/Installation/_Windows-Install-Prerequisites.rst:123
msgid "Now install some additional python dependencies:"
msgstr "现在安装一些额外的 Python 依赖库："


#: ../../source/Installation/_Windows-Install-Prerequisites.rst:130
msgid "Install Qt5"
msgstr "安装 Qt5"


#: ../../source/Installation/_Windows-Install-Prerequisites.rst:132
msgid "Download the `5.12.X offline installer <https://www.qt.io/offline-installers>`_ from Qt's website. Run the installer. Make sure to select the ``MSVC 2017 64-bit`` component under the ``Qt`` -> ``Qt 5.12.12`` tree."
msgstr "从Qt的网站上下载`5.12.X离线安装程序<https://www.qt.io/offline-installers>`_。运行安装程序。确保在``Qt`` -> ``Qt 5.12.12``树下选择``MSVC 2017 64位``组件。"


#: ../../source/Installation/_Windows-Install-Prerequisites.rst:136
msgid "Finally, in an administrator ``cmd.exe`` window set these environment variables. The commands below assume you installed it to the default location of ``C:\\Qt``."
msgstr "最后，在管理员``cmd.exe``窗口中设置以下环境变量。下面的命令假设您将其安装到默认位置``C:\\Qt``。"


#: ../../source/Installation/_Windows-Install-Prerequisites.rst:147
msgid "This path might change based on the installed MSVC version, the directory Qt was installed to, and the version of Qt installed."
msgstr "该路径可能根据已安装的MSVC版本、安装Qt的目录和安装的Qt版本而有所变化。"


#: ../../source/Installation/_Windows-Install-Prerequisites.rst:150
msgid "RQt dependencies"
msgstr "RQt依赖项"


#: ../../source/Installation/_Windows-Install-Prerequisites.rst:152
msgid "To run rqt_graph you need to `download <https://graphviz.gitlab.io/_pages/Download/Download_windows.html>`__ and install `Graphviz <https://graphviz.gitlab.io/>`__. The installer will ask if to add graphviz to PATH, choose to either add it to the current user or all users."
msgstr "要运行rqt_graph，您需要从`此处<https://graphviz.gitlab.io/_pages/Download/Download_windows.html>`__下载并安装`Graphviz<https://graphviz.gitlab.io/>`__。安装程序会询问是否将graphviz添加到PATH，请选择添加到当前用户或所有用户。"


#: ../../source/Installation/_Windows-Install-Prerequisites.rst:158
msgid "If you would like to use another DDS or RTPS vendor besides the default, Fast DDS, you can find instructions `here </Installation/DDS-Implementations>`_."
msgstr "如果您想使用除默认的Fast DDS之外的其他DDS或RTPS供应商，请在`此处</Installation/DDS-Implementations>`_找到说明。"


#: ../../source/Installation/Alternatives/Windows-Development-Setup.rst:30
msgid "Additional prerequisites"
msgstr "额外先决条件"


#: ../../source/Installation/Alternatives/Windows-Development-Setup.rst:32
msgid "When building from source you'll need a few additional prerequisites installed."
msgstr "在从源代码构建时，您需要安装一些额外的先决条件。"


#: ../../source/Installation/Alternatives/Windows-Development-Setup.rst:35
msgid "Install additional prerequisites from Chocolatey"
msgstr "从Chocolatey安装额外的先决条件"


#: ../../source/Installation/Alternatives/Windows-Development-Setup.rst:41
msgid "You will need to append the Git cmd folder ``C:\\Program Files\\Git\\cmd`` to the PATH (you can do this by clicking the Windows icon, typing \"Environment Variables\", then clicking on \"Edit the system environment variables\". In the resulting dialog, click \"Environment Variables\", the click \"Path\" on the bottom pane, then click \"Edit\" and add the path)."
msgstr "您需要将Git cmd文件夹 ``C:\\Program Files\\Git\\cmd`` 添加到路径中（您可以通过点击Windows图标，键入\"环境变量\"，然后点击\"编辑系统环境变量\"来完成此操作。在弹出的对话框中，点击\"环境变量\"，然后点击底部窗格上的\"路径\"，然后点击\"编辑\"并添加路径）。"


#: ../../source/Installation/Alternatives/Windows-Development-Setup.rst:46
msgid "Install Python prerequisites"
msgstr "安装Python先决条件"


#: ../../source/Installation/Alternatives/Windows-Development-Setup.rst:48
msgid "Installing additional Python dependencies:"
msgstr "安装额外的Python依赖项："


#: ../../source/Installation/Alternatives/Windows-Development-Setup.rst:55
msgid "Install miscellaneous prerequisites"
msgstr "安装其他先决条件"


#: ../../source/Installation/Alternatives/Windows-Development-Setup.rst:57
msgid "Next install xmllint:"
msgstr "接下来安装xmllint："


#: ../../source/Installation/Alternatives/Windows-Development-Setup.rst:59
msgid "Download the `64 bit binary archives <https://www.zlatkovic.com/pub/libxml/64bit/>`__ of ``libxml2`` (and its dependencies ``iconv`` and ``zlib``) from https://www.zlatkovic.com/projects/libxml/"
msgstr "从https://www.zlatkovic.com/projects/libxml/下载`libxml2`的`64位二进制归档文件 <https://www.zlatkovic.com/pub/libxml/64bit/>`__（以及其依赖的`iconv`和`zlib`）"


#: ../../source/Installation/Alternatives/Windows-Development-Setup.rst:60
msgid "Unpack all archives into e.g. ``C:\\xmllint``"
msgstr "将所有归档文件解压到例如``C:\\xmllint``"


#: ../../source/Installation/Alternatives/Windows-Development-Setup.rst:61
msgid "Add ``C:\\xmllint\\bin`` to the ``PATH``."
msgstr "将``C:\\xmllint\\bin``添加到``PATH``中。"


#: ../../source/Installation/Alternatives/Windows-Development-Setup.rst:64 ../../source/Installation/Alternatives/macOS-Development-Setup.rst:112
msgid "Get the ROS 2 code"
msgstr "获取ROS 2代码"


#: ../../source/Installation/Alternatives/Windows-Development-Setup.rst:66
msgid "Now that we have the development tools we can get the ROS 2 source code."
msgstr "现在我们已经有了开发工具，可以获取ROS 2源代码。"


#: ../../source/Installation/Alternatives/Windows-Development-Setup.rst:68
msgid "First setup a development folder, for example ``C:\\humble``:"
msgstr "首先设置一个开发文件夹，例如 ``C:\\humble`` ："


#: ../../source/Installation/Alternatives/Windows-Development-Setup.rst:72
msgid "It is very important that the chosen path is short, due to the short default Windows path limits (260 characters). To allow longer paths, see https://learn.microsoft.com/en-us/windows/win32/fileio/maximum-file-path-limitation?tabs=registry."
msgstr "选择的路径非常重要，由于默认的Windows路径限制很短（260个字符）。如果要允许更长的路径，请参考https://learn.microsoft.com/en-us/windows/win32/fileio/maximum-file-path-limitation?tabs=registry。"


#: ../../source/Installation/Alternatives/Windows-Development-Setup.rst:80
msgid "Get the ``ros2.repos`` file which defines the repositories to clone from:"
msgstr "获取定义要克隆的存储库的``ros2.repos``文件："


#: ../../source/Installation/Alternatives/Windows-Development-Setup.rst:89
msgid "Fast DDS is bundled with the ROS 2 source and will always be built unless you put an ``COLCON_IGNORE`` file in the ``src\\eProsima`` folder."
msgstr "Fast DDS与ROS 2源代码捆绑在一起，并且除非在``src\\eProsima``文件夹中放置一个``COLCON_IGNORE``文件，否则将始终构建它。"


#: ../../source/Installation/Alternatives/Windows-Development-Setup.rst:94 ../../source/Installation/Alternatives/macOS-Development-Setup.rst:128
msgid "Build the ROS 2 code"
msgstr "构建ROS 2代码。"


#: ../../source/Installation/Alternatives/Windows-Development-Setup.rst:98
msgid "To build ROS 2 you will need a Visual Studio Command Prompt (\"x64 Native Tools Command Prompt for VS 2019\") running as Administrator."
msgstr "要构建ROS 2，您需要以管理员身份运行Visual Studio命令提示符（\"x64 Native Tools Command Prompt for VS 2019\"）。"


#: ../../source/Installation/Alternatives/Windows-Development-Setup.rst:100
msgid "To build the ``\\humble`` folder tree:"
msgstr "要构建``\\humble``文件夹树："


#: ../../source/Installation/Alternatives/Windows-Development-Setup.rst:108
msgid "We're using ``--merge-install`` here to avoid a ``PATH`` variable that is too long at the end of the build. If you're adapting these instructions to build a smaller workspace then you might be able to use the default behavior which is isolated install, i.e. where each package is installed to a different folder."
msgstr "我们在这里使用``--merge-install``，以避免构建结束时``PATH``变量过长。如果您将这些指令用于构建较小的工作空间，则可能可以使用默认行为，即隔离安装（isolated install），即将每个软件包安装到不同的文件夹。"


#: ../../source/Installation/Alternatives/Windows-Development-Setup.rst:113
msgid "If you are doing a debug build use ``python_d path\\to\\colcon_executable`` ``colcon``. See `Extra stuff for debug mode`_ for more info on running Python code in debug builds on Windows."
msgstr "如果您正在进行调试构建，请使用``python_d path\\to\\colcon_executable`` ``colcon``。有关在Windows上运行调试构建中的Python代码的更多信息，请参见`调试模式的额外信息`_。"


#: ../../source/Installation/Alternatives/Windows-Development-Setup.rst:119 ../../source/Installation/Windows-Install-Binary.rst:45
msgid "Start a command shell and source the ROS 2 setup file to set up the workspace:"
msgstr "启动一个命令行窗口，并源化ROS 2设置文件以设置工作空间："


#: ../../source/Installation/Alternatives/Windows-Development-Setup.rst:125 ../../source/Installation/Alternatives/macOS-Development-Setup.rst:149
msgid "This will automatically set up the environment for any DDS vendors that support was built for."
msgstr "这将自动为支持构建的任何DDS供应商设置环境。"


#: ../../source/Installation/Alternatives/Windows-Development-Setup.rst:127 ../../source/Installation/Windows-Install-Binary.rst:51
msgid "It is normal that the previous command, if nothing else went wrong, outputs \"The system cannot find the path specified.\" exactly once."
msgstr "如果没有其他问题，之前的命令输出\"系统找不到指定的路径.\"，这是正常的，只会出现一次。"


#: ../../source/Installation/Alternatives/Windows-Development-Setup.rst:130
msgid "Test and run"
msgstr "测试和运行"


#: ../../source/Installation/Alternatives/Windows-Development-Setup.rst:132
msgid "Note that the first time you run any executable you will have to allow access to the network through a Windows Firewall popup."
msgstr "请注意，第一次运行任何可执行文件时，您需要允许通过Windows防火墙弹出窗口访问网络。"


#: ../../source/Installation/Alternatives/Windows-Development-Setup.rst:134
msgid "You can run the tests using this command:"
msgstr "您可以使用以下命令运行测试："


#: ../../source/Installation/Alternatives/Windows-Development-Setup.rst:142
msgid "``--merge-install`` should only be used if it was also used in the build step."
msgstr "仅当在构建步骤中也使用了``--merge-install``时才应使用该选项。"


#: ../../source/Installation/Alternatives/Windows-Development-Setup.rst:144
msgid "Afterwards you can get a summary of the tests using this command:"
msgstr "之后，您可以使用以下命令获取测试的摘要："


#: ../../source/Installation/Alternatives/Windows-Development-Setup.rst:150
msgid "To run the examples, first open a clean new ``cmd.exe`` and set up the workspace by sourcing the ``local_setup.bat`` file. Then, run a C++ ``talker``\\ :"
msgstr "要运行示例，请首先打开一个干净的新``cmd.exe``并通过源文件``local_setup.bat``设置工作区。然后，运行一个C++``talker``\\ ："


#: ../../source/Installation/Alternatives/Windows-Development-Setup.rst:158
msgid "In a separate shell you can do the same, but instead run a Python ``listener``\\ :"
msgstr "在另一个窗口中，您可以执行相同的操作，但是运行一个Python``listener``\\ ："


#: ../../source/Installation/Alternatives/Windows-Development-Setup.rst:172
msgid "It is not recommended to build in the same cmd prompt that you've sourced the ``local_setup.bat``."
msgstr "不建议在与已经加载``local_setup.bat``的cmd提示符中构建。"


#: ../../source/Installation/Alternatives/Windows-Development-Setup.rst:185
msgid "Extra stuff for Debug mode"
msgstr "调试模式的额外内容"


#: ../../source/Installation/Alternatives/Windows-Development-Setup.rst:187
msgid "If you want to be able to run all the tests in Debug mode, you'll need to install a few more things:"
msgstr "如果您想要能够在调试模式下运行所有测试，您需要安装一些其他内容："


#: ../../source/Installation/Alternatives/Windows-Development-Setup.rst:190
msgid "To be able to extract the Python source tarball, you can use PeaZip:"
msgstr "要能够提取Python源代码压缩包，您可以使用PeaZip："


#: ../../source/Installation/Alternatives/Windows-Development-Setup.rst:197
msgid "You'll also need SVN, since some of the Python source-build dependencies are checked out via SVN:"
msgstr "你还需要SVN，因为一些Python源码构建的依赖项是通过SVN检出的："


#: ../../source/Installation/Alternatives/Windows-Development-Setup.rst:204
msgid "You'll need to quit and restart the command prompt after installing the above."
msgstr "安装以上内容后，您需要退出并重新启动命令提示符。"


#: ../../source/Installation/Alternatives/Windows-Development-Setup.rst:205
msgid "Get and extract the Python 3.8.3 source from the ``tgz``:"
msgstr "从``tgz``中获取并提取Python 3.8.3的源代码："


#: ../../source/Installation/Alternatives/Windows-Development-Setup.rst:207
msgid "https://www.python.org/ftp/python/3.8.3/Python-3.8.3.tgz"
msgstr "https://www.python.org/ftp/python/3.8.3/Python-3.8.3.tgz"


#: ../../source/Installation/Alternatives/Windows-Development-Setup.rst:208
msgid "To keep these instructions concise, please extract it to ``C:\\dev\\Python-3.8.3``"
msgstr "为了使这些说明简洁，请将其提取到``C:\\dev\\Python-3.8.3``"


#: ../../source/Installation/Alternatives/Windows-Development-Setup.rst:210
msgid "Now, build the Python source in debug mode from a Visual Studio command prompt:"
msgstr "现在，在Visual Studio命令提示符中以调试模式构建Python源代码："


#: ../../source/Installation/Alternatives/Windows-Development-Setup.rst:219
msgid "Finally, copy the build products into the Python38 installation directories, next to the Release-mode Python executable and DLL's:"
msgstr "最后，将构建产品复制到Python38安装目录中，放在Release模式的Python可执行文件和DLL文件旁边："


#: ../../source/Installation/Alternatives/Windows-Development-Setup.rst:233
msgid "Now, from a fresh command prompt, make sure that ``python_d`` works:"
msgstr "现在，在一个全新的命令提示符下，确保``python_d``可以工作："


#: ../../source/Installation/Alternatives/Windows-Development-Setup.rst:239
msgid "Once you have verified the operation of ``python_d``, it is necessary to reinstall a few dependencies with the debug-enabled libraries:"
msgstr "一旦验证了``python_d``的操作，就需要重新安装一些带有启用调试库的依赖项："


#: ../../source/Installation/Alternatives/Windows-Development-Setup.rst:246
msgid "To verify the installation of these dependencies:"
msgstr "要验证这些依赖项的安装情况："


#: ../../source/Installation/Alternatives/Windows-Development-Setup.rst:252
msgid "When you wish to return to building release binaries, it is necessary to uninstall the debug variants and use the release variants:"
msgstr "当您希望返回构建发布二进制文件时，需要卸载调试版本并使用发布版本："


#: ../../source/Installation/Alternatives/Windows-Development-Setup.rst:259
msgid "To create executables python scripts(.exe), python_d should be used to invoke colcon"
msgstr "要创建可执行的Python脚本（.exe），应使用python_d来调用colcon"


#: ../../source/Installation/Alternatives/Windows-Development-Setup.rst:265
msgid "Hooray, you're done!"
msgstr "太好了，你完成了！"


#: ../../source/Installation/Alternatives/Windows-Development-Setup.rst:275 ../../source/Installation/Windows-Install-Binary.rst:85
msgid "Troubleshooting techniques can be found :ref:`here <windows-troubleshooting>`."
msgstr "故障排除技巧可以在此处找到：:ref:`这里 <windows-troubleshooting>`。"


#: ../../source/Installation/Alternatives/macOS-Development-Setup.rst:4
msgid "macOS (source)"
msgstr "macOS（源码）"


#: ../../source/Installation/Alternatives/macOS-Development-Setup.rst:13
msgid "We currently support macOS Mojave (10.14)."
msgstr "我们目前支持macOS Mojave（10.14）。"


#: ../../source/Installation/Alternatives/macOS-Development-Setup.rst:16
msgid "Install prerequisites"
msgstr "安装先决条件"


#: ../../source/Installation/Alternatives/macOS-Development-Setup.rst:18
msgid "You need the following things installed to build ROS 2:"
msgstr "构建ROS 2需要安装以下内容："


#: ../../source/Installation/Alternatives/macOS-Development-Setup.rst:22
msgid "**Xcode**"
msgstr "**Xcode**"


#: ../../source/Installation/Alternatives/macOS-Development-Setup.rst:24
msgid "If you don't already have it installed, install Xcode."
msgstr "如果您尚未安装Xcode，请安装它。"


#: ../../source/Installation/Alternatives/macOS-Development-Setup.rst:25
msgid "Note: Versions of Xcode later than 11.3.1 can no longer be installed on macOS Mojave, so you will need to install an older version manually, see: https://stackoverflow.com/a/61046761"
msgstr "注意：Xcode 11.3.1 之后的版本无法在 macOS Mojave 上安装，因此您需要手动安装旧版本，参见：https://stackoverflow.com/a/61046761"


#: ../../source/Installation/Alternatives/macOS-Development-Setup.rst:26
msgid "Also, if you don't already have it installed, install the Command Line Tools:"
msgstr "此外，如果您尚未安装命令行工具，请安装："


#: ../../source/Installation/Alternatives/macOS-Development-Setup.rst:38
msgid "**brew** *(needed to install more stuff; you probably already have this)*:"
msgstr "**brew**（需要安装其他工具；您可能已经安装了此工具）："


#: ../../source/Installation/Alternatives/macOS-Development-Setup.rst:41
msgid "Follow installation instructions at http://brew.sh/"
msgstr "按照 http://brew.sh/ 上的安装说明进行安装。"


#: ../../source/Installation/Alternatives/macOS-Development-Setup.rst:43
msgid "*Optional*: Check that ``brew`` is happy with your system configuration by running:"
msgstr "*可选*: 运行以下命令检查 ``brew`` 是否满意您的系统配置:"


#: ../../source/Installation/Alternatives/macOS-Development-Setup.rst:49
msgid "Fix any problems that it identifies."
msgstr "解决任何它识别出的问题。"


#: ../../source/Installation/Alternatives/macOS-Development-Setup.rst:52
msgid "Use ``brew`` to install more stuff:"
msgstr "使用 ``brew`` 安装更多内容:"


#: ../../source/Installation/Alternatives/macOS-Development-Setup.rst:61
msgid "Setup some environment variables:"
msgstr "设置一些环境变量:"


#: ../../source/Installation/Alternatives/macOS-Development-Setup.rst:74
msgid "Use ``python3 -m pip`` (just ``pip`` may install Python3 or Python2) to install more stuff:"
msgstr "使用 ``python3 -m pip``（只安装 ``pip`` 可能会安装Python3或Python2）安装更多内容:"


#: ../../source/Installation/Alternatives/macOS-Development-Setup.rst:87
msgid "Please ensure that the ``$PATH`` environment variable contains the install location of the binaries (default: ``$HOME/Library/Python/<version>/bin``)"
msgstr "请确保 ``$PATH`` 环境变量中包含二进制文件的安装位置（默认为 ``$HOME/Library/Python/<version>/bin``）"


#: ../../source/Installation/Alternatives/macOS-Development-Setup.rst:90
msgid "*Optional*: if you want to build the ROS 1<->2 bridge, then you must also install ROS 1:"
msgstr "*可选*: 如果您想构建ROS 1<->2桥接器，那么您还必须安装ROS 1:"


#: ../../source/Installation/Alternatives/macOS-Development-Setup.rst:93
msgid "Start with the normal install instructions: http://wiki.ros.org/kinetic/Installation/OSX/Homebrew/Source"
msgstr "按照正常的安装说明开始: http://wiki.ros.org/kinetic/Installation/OSX/Homebrew/Source"


#: ../../source/Installation/Alternatives/macOS-Development-Setup.rst:95
msgid "When you get to the step where you call ``rosinstall_generator`` to get the source code, here's an alternate invocation that brings in just the minimum required to produce a useful bridge:"
msgstr "当您到达调用``rosinstall_generator``以获取源代码的步骤时，下面是一个替代的调用方式，只引入生成有用桥接器所需的最小代码:"


#: ../../source/Installation/Alternatives/macOS-Development-Setup.rst:103
msgid "Otherwise, just follow the normal instructions, then source the resulting ``install_isolated/setup.bash`` before proceeding here to build ROS 2."
msgstr "否则，请按照正常的说明进行，然后在此处构建ROS 2之前，使用生成的``install_isolated/setup.bash``进行源码配置。"


#: ../../source/Installation/Alternatives/macOS-Development-Setup.rst:106
msgid "Disable System Integrity Protection (SIP)"
msgstr "禁用系统完整性保护 (SIP)"


#: ../../source/Installation/Alternatives/macOS-Development-Setup.rst:108
msgid "macOS/OS X versions >=10.11 have System Integrity Protection enabled by default. So that SIP doesn't prevent processes from inheriting dynamic linker environment variables, such as ``DYLD_LIBRARY_PATH``, you'll need to disable it `following these instructions <https://developer.apple.com/library/content/documentation/Security/Conceptual/System_Integrity_Protection_Guide/ConfiguringSystemIntegrityProtection/ConfiguringSystemIntegrityProtection.html>`__."
msgstr "macOS/OS X版本>=10.11默认启用系统完整性保护 (SIP)。为了防止SIP阻止进程继承动态链接器环境变量，如``DYLD_LIBRARY_PATH``，您需要按照`此处的说明 <https://developer.apple.com/library/content/documentation/Security/Conceptual/System_Integrity_Protection_Guide/ConfiguringSystemIntegrityProtection/ConfiguringSystemIntegrityProtection.html>`__来禁用它。"


#: ../../source/Installation/Alternatives/macOS-Development-Setup.rst:123
msgid "Install additional DDS vendors (optional)"
msgstr "安装额外的DDS供应商（可选）"


#: ../../source/Installation/Alternatives/macOS-Development-Setup.rst:130
msgid "Run the ``colcon`` tool to build everything (more on using ``colcon`` in :doc:`this tutorial <../../Tutorials/Beginner-Client-Libraries/Colcon-Tutorial>`):"
msgstr "使用``colcon``工具构建所有内容（有关使用``colcon``的更多信息，请参阅：:doc:`此教程 <../../Tutorials/Beginner-Client-Libraries/Colcon-Tutorial>`）："


#: ../../source/Installation/Alternatives/macOS-Development-Setup.rst:137
msgid "Note: due to an unresolved issue with SIP, Qt@5, and PyQt5, we need to disable ``python_qt_binding`` to have the build succeed. This will be removed when the issue is resolved, see: https://github.com/ros-visualization/python_qt_binding/issues/103"
msgstr "注意：由于SIP、Qt@5和PyQt5存在未解决的问题，我们需要禁用``python_qt_binding``才能成功构建。此问题解决后将会移除，详情请参阅：https://github.com/ros-visualization/python_qt_binding/issues/103"


#: ../../source/Installation/Alternatives/macOS-Development-Setup.rst:143
msgid "Source the ROS 2 setup file:"
msgstr "将ROS 2的设置文件设置为源文件："


#: ../../source/Installation/Alternatives/macOS-Development-Setup.rst:154
msgid "In one terminal, set up the ROS 2 environment as described above and then run a C++ ``talker``:"
msgstr "在一个终端中，按照上述说明设置ROS 2环境，然后运行一个C++``talker``："


#: ../../source/Installation/Alternatives/macOS-Development-Setup.rst:172
msgid "Continue with the `tutorials and demos <../../Tutorials>` to configure your environment, create your own workspace and packages, and learn ROS 2 core concepts."
msgstr "继续进行`教程和演示 <../../Tutorials>`，以配置您的环境、创建自己的工作空间和软件包，并学习ROS 2核心概念。"


#: ../../source/Installation/Alternatives/macOS-Development-Setup.rst:191
msgid "Troubleshooting techniques can be found :ref:`here <macOS-troubleshooting>`."
msgstr "故障排除技术可在 :ref:`此处 <macOS-troubleshooting>` 找到。"


#: ../../source/Installation/DDS-Implementations.rst:2
msgid "DDS implementations"
msgstr "DDS 实现"


#: ../../source/Installation/DDS-Implementations.rst:4
msgid "By default, ROS 2 uses DDS as its `middleware <https://design.ros2.org/articles/ros_on_dds.html>`__. It is compatible with multiple DDS or RTPS (the DDS wire protocol) vendors. There is currently support for eProsima's Fast DDS, RTI's Connext DDS, Eclipse Cyclone DDS, and GurumNetworks GurumDDS. See https://ros.org/reps/rep-2000.html for supported DDS vendors by distribution."
msgstr "默认情况下，ROS 2 使用 DDS 作为其 `中间件 <https://design.ros2.org/articles/ros_on_dds.html>`__。它与多个 DDS 或 RTPS（DDS 的传输协议）供应商兼容。当前支持 eProsima 的 Fast DDS、RTI 的 Connext DDS、Eclipse Cyclone DDS 和 GurumNetworks 的 GurumDDS。有关支持的 DDS 供应商，请参阅 https://ros.org/reps/rep-2000.html。"


#: ../../source/Installation/DDS-Implementations.rst:9
msgid "The default DDS vendor is eProsima's Fast DDS."
msgstr "默认的 DDS 供应商是 eProsima 的 Fast DDS。"


#: ../../source/Installation/DDS-Implementations.rst:11
msgid ":doc:`Working with Eclipse Cyclone DDS <DDS-Implementations/Working-with-Eclipse-CycloneDDS>` explains how to utilize Cyclone DDS."
msgstr ":doc:`使用 Eclipse Cyclone DDS <DDS-Implementations/Working-with-Eclipse-CycloneDDS>` 解释了如何使用 Cyclone DDS。"


#: ../../source/Installation/DDS-Implementations.rst:12
msgid ":doc:`Working with eProsima Fast DDS <DDS-Implementations/Working-with-eProsima-Fast-DDS>` explains how to utilize Fast DDS."
msgstr ":doc:`使用 eProsima Fast DDS <DDS-Implementations/Working-with-eProsima-Fast-DDS>` 解释了如何使用 Fast DDS。"


#: ../../source/Installation/DDS-Implementations.rst:13
msgid ":doc:`Working with GurumNetworks GurumDDS <DDS-Implementations/Working-with-GurumNetworks-GurumDDS>` explains how to utilize GurumDDS."
msgstr ":doc:`使用 GurumNetworks GurumDDS 进行开发 <DDS-实现/使用-GurumNetworks-GurumDDS>` 详细说明了如何使用 GurumDDS。"


#: ../../source/Installation/DDS-Implementations.rst:21
msgid "If you would like to use one of the other vendors you will need to install their software separately before building. The ROS 2 build will automatically build support for vendors that have been installed and sourced correctly."
msgstr "如果您想使用其他供应商的产品，您需要在构建之前单独安装他们的软件。ROS 2 构建将自动为已正确安装和配置的供应商构建支持。"


#: ../../source/Installation/DDS-Implementations.rst:24
msgid "Once you've installed a new DDS vendor, you can change the vendor used at runtime: :doc:`Working with Multiple RMW Implementations <../How-To-Guides/Working-with-multiple-RMW-implementations>`."
msgstr "一旦您安装了新的 DDS 供应商，您可以在运行时更改所使用的供应商：:doc:`使用多个 RMW 实现 <../如何指南/使用多个-RMW-实现>`。"


#: ../../source/Installation/DDS-Implementations.rst:26
msgid "Detailed instructions for installing other DDS vendors are provided below."
msgstr "下面提供了安装其他 DDS 供应商的详细说明。"


#: ../../source/Installation/DDS-Implementations.rst:30
msgid "Platforms / Installation types"
msgstr "平台 / 安装类型"


#: ../../source/Installation/DDS-Implementations.rst:33
msgid "Ubuntu Linux source install"
msgstr "Ubuntu Linux 源码安装"


#: ../../source/Installation/DDS-Implementations.rst:36 ../../source/Installation/DDS-Implementations.rst:88
msgid "RTI Connext (version 6.0.1, amd64 only)"
msgstr "RTI Connext（版本6.0.1，仅支持amd64）"


#: ../../source/Installation/DDS-Implementations.rst:39
msgid "Debian packages provided in the ROS 2 apt repositories"
msgstr "Debian软件包可在ROS 2 apt软件库中找到"


#: ../../source/Installation/DDS-Implementations.rst:41
msgid "You can install a Debian package of RTI Connext available on the ROS 2 apt repositories. You will need to accept a license from RTI."
msgstr "您可以安装在ROS 2 apt软件库中提供的RTI Connext的Debian软件包。您需要接受RTI的许可证。"


#: ../../source/Installation/DDS-Implementations.rst:48 ../../source/Installation/DDS-Implementations.rst:76
msgid "Source the setup file to set the ``NDDSHOME`` environment variable."
msgstr "运行设置文件以设置``NDDSHOME``环境变量。"


#: ../../source/Installation/DDS-Implementations.rst:54
msgid "Note: when using ``zsh`` you need to be in the directory of the script when sourcing it to have it work properly"
msgstr "注意：如果使用``zsh``，在运行设置文件时需要位于脚本所在的目录，以确保其正常工作。"


#: ../../source/Installation/DDS-Implementations.rst:56 ../../source/Installation/DDS-Implementations.rst:82
msgid "Now you can build as normal and support for RTI will be built as well."
msgstr "现在您可以按照正常流程进行构建，并同时构建RTI支持。"


#: ../../source/Installation/DDS-Implementations.rst:59
msgid "Official binary packages from RTI"
msgstr "RTI 提供官方的二进制软件包"


#: ../../source/Installation/DDS-Implementations.rst:61
msgid "You can install the Connext 6.0.1 package for Linux provided by RTI, via options available for :doc:`university, purchase or evaluation <DDS-Implementations/Install-Connext-University-Eval>`"
msgstr "您可以通过 :doc:`DDS-Implementations/Install-Connext-University-Eval` 中提供的选项，安装由 RTI 提供的 Linux 版本的 Connext 6.0.1 软件包，其中包括学术、购买或评估。"


#: ../../source/Installation/DDS-Implementations.rst:63
msgid "After downloading, use ``chmod +x`` on the ``.run`` executable and then execute it. Note that if you're installing to a system directory use ``sudo`` as well."
msgstr "下载后，在 ``.run`` 可执行文件上使用 ``chmod +x`` 命令，并执行它。请注意，如果您要安装到系统目录，请同时使用 ``sudo`` 命令。"


#: ../../source/Installation/DDS-Implementations.rst:66
msgid "The default location is ``~/rti_connext_dds-6.0.1``"
msgstr "默认安装位置是 ``~/rti_connext_dds-6.0.1``"


#: ../../source/Installation/DDS-Implementations.rst:68
msgid "After installation, run RTI launcher and point it to your license file (obtained from RTI)."
msgstr "安装后，运行 RTI 启动器，并指向您的许可文件（从 RTI 获取）。"


#: ../../source/Installation/DDS-Implementations.rst:70
msgid "Add the following line to your ``.bashrc`` file pointing to your copy of the license."
msgstr "将以下行添加到您的 ``.bashrc`` 文件中，指向您的许可文件副本。"


#: ../../source/Installation/DDS-Implementations.rst:85
msgid "Ubuntu Linux binary install"
msgstr "Ubuntu Linux 二进制安装"


#: ../../source/Installation/DDS-Implementations.rst:90
msgid "To use RTI Connext DDS there are full-suite install options available for :doc:`university, purchase or evaluation <DDS-Implementations/Install-Connext-University-Eval>` or you can install a libraries-only Debian package of RTI Connext 6.0.1, available from the OSRF Apt repository under a `non-commercial license <https://www.rti.com/ncl>`__."
msgstr "要使用RTI Connext DDS，有完整套件安装选项可供选择：参考文档 :doc:`大学、购买或评估<DDS-Implementations/Install-Connext-University-Eval>`，或者您可以安装 RTI Connext 6.0.1 的仅库 Debian 包，该包可在 OSRF Apt 软件源库中以 `非商业许可证<https://www.rti.com/ncl>`__ 形式获取。"


#: ../../source/Installation/DDS-Implementations.rst:94
msgid "To install the libs-only Debian package:"
msgstr "要安装仅库 Debian 包："


#: ../../source/Installation/DDS-Implementations.rst:100
msgid "You will need to accept a license agreement from RTI, and will find an 'rti_license.dat file in the installation."
msgstr "您需要接受 RTI 的许可协议，并在安装过程中找到一个 'rti_license.dat' 文件。"


#: ../../source/Installation/DDS-Implementations.rst:102
msgid "Add the following line to your ``.bashrc`` file pointing to your copy of the license (and source it)."
msgstr "将以下行添加到您的 ``.bashrc`` 文件中，指向您的许可证副本（并对其进行源码引用）。"


#: ../../source/Installation/DDS-Implementations.rst:108
msgid "All options need you to source the setup file to set the ``NDDSHOME`` environment variable:"
msgstr "所有选项都需要您源码引用设置文件以设置 ``NDDSHOME`` 环境变量："


#: ../../source/Installation/DDS-Implementations.rst:114
msgid "Note: the above may need modification to match your RTI installation location"
msgstr "注意：上述内容可能需要修改以匹配您的RTI安装位置"


#: ../../source/Installation/DDS-Implementations.rst:116 ../../source/Installation/DDS-Implementations.rst:138 ../../source/Installation/DDS-Implementations.rst:159 ../../source/Installation/DDS-Implementations.rst:180 ../../source/Installation/DDS-Implementations.rst:199
msgid "If you want to install the Connext DDS-Security plugins please refer to :doc:`this page <DDS-Implementations/Install-Connext-Security-Plugins>`."
msgstr "如果您想安装Connext DDS-Security插件，请参考：:doc:`此页面 <DDS-Implementations/Install-Connext-Security-Plugins>`。"


#: ../../source/Installation/DDS-Implementations.rst:119
msgid "OSX source install"
msgstr "OSX源码安装"


#: ../../source/Installation/DDS-Implementations.rst:122
msgid "RTI Connext (6.0.1)"
msgstr "RTI Connext（6.0.1）"


#: ../../source/Installation/DDS-Implementations.rst:124 ../../source/Installation/DDS-Implementations.rst:167
msgid "If you would like to also build against RTI Connext DDS there are options available for :doc:`university, purchase or evaluation <DDS-Implementations/Install-Connext-University-Eval>`"
msgstr "如果您还想构建针对RTI Connext DDS的内容，可以使用以下选项：:doc:`大学、购买或评估 <DDS-Implementations/Install-Connext-University-Eval>`"


#: ../../source/Installation/DDS-Implementations.rst:126
msgid "You also need a Java runtime installed to run the RTI code generator, which you can get `here <https://support.apple.com/kb/DL1572?locale=en_US>`__."
msgstr "您还需要安装Java运行时环境才能运行RTI代码生成器，可以在`此处 <https://support.apple.com/kb/DL1572?locale=en_US>`__ 获取。"


#: ../../source/Installation/DDS-Implementations.rst:128 ../../source/Installation/DDS-Implementations.rst:149 ../../source/Installation/DDS-Implementations.rst:191
msgid "After installing, run RTI launcher and point it to your license file."
msgstr "安装后，运行RTI启动器并将其指向您的许可证文件。"


#: ../../source/Installation/DDS-Implementations.rst:130 ../../source/Installation/DDS-Implementations.rst:151
msgid "Source the setup file to set the ``NDDSHOME`` environment variable before building your workspace."
msgstr "在构建工作空间之前，使用设置文件设置``NDDSHOME``环境变量。"


#: ../../source/Installation/DDS-Implementations.rst:136
msgid "You may need to increase shared memory resources following https://community.rti.com/kb/osx510"
msgstr "您可能需要根据https://community.rti.com/kb/osx510增加共享内存资源。"


#: ../../source/Installation/DDS-Implementations.rst:141
msgid "OSX binary install"
msgstr "OSX二进制安装"


#: ../../source/Installation/DDS-Implementations.rst:145
msgid "Enable Connext support"
msgstr "启用Connext支持"


#: ../../source/Installation/DDS-Implementations.rst:147 ../../source/Installation/DDS-Implementations.rst:189
msgid "To use RTI Connext DDS there are options available for :doc:`university, purchase or evaluation <DDS-Implementations/Install-Connext-University-Eval>`"
msgstr "要使用RTI Connext DDS，有以下选项可供选择：:doc:`大学版、购买版或评估版 <DDS-Implementations/Install-Connext-University-Eval>`"


#: ../../source/Installation/DDS-Implementations.rst:157
msgid "You may need to increase shared memory resources following https://community.rti.com/kb/osx510."
msgstr "您可能需要根据 https://community.rti.com/kb/osx510 增加共享内存资源。"


#: ../../source/Installation/DDS-Implementations.rst:162
msgid "Windows source install"
msgstr "Windows源代码安装"


#: ../../source/Installation/DDS-Implementations.rst:165
msgid "RTI Connext 6.0.1"
msgstr "RTI Connext 6.0.1"


#: ../../source/Installation/DDS-Implementations.rst:169
msgid "After installing, use the RTI Launcher to load your license file."
msgstr "安装完成后，请使用RTI启动器加载您的许可证文件。"


#: ../../source/Installation/DDS-Implementations.rst:171
msgid "Then before building ROS 2, set up the Connext environment:"
msgstr "然后在构建ROS 2之前，设置Connext环境："


#: ../../source/Installation/DDS-Implementations.rst:177
msgid "Note that this path might need to be slightly altered depending on where you selected to install RTI Connext DDS, and which version of Visual Studio was selected. The path above is the current default path as of version 6.0.1, but will change as the version numbers increment in the future."
msgstr "请注意，根据您选择安装RTI Connext DDS的位置和所选的Visual Studio版本，此路径可能需要稍作更改。上述路径是6.0.1版本的当前默认路径，但随着未来版本号的增加，该路径将发生变化。"


#: ../../source/Installation/DDS-Implementations.rst:183
msgid "Windows binary install"
msgstr "Windows二进制安装"


#: ../../source/Installation/DDS-Implementations.rst:187
msgid "RTI Connext"
msgstr "RTI Connext"


#: ../../source/Installation/DDS-Implementations.rst:193
msgid "Then before using ROS 2, set up the Connext environment:"
msgstr "在使用ROS 2之前，请先设置Connext环境："


#: ../../source/Installation/DDS-Implementations/Install-Connext-Security-Plugins.rst:2
msgid "Connext security plugins"
msgstr "Connext安全插件"


#: ../../source/Installation/DDS-Implementations/Install-Connext-Security-Plugins.rst:4
msgid "The Connext DDS Libraries are included with ROS 2 under a `non-commercial license <https://www.rti.com/ncl>`__ and do not include the security plug-in libraries. These libraries are available in the commercial, university and research license versions of RTI Connext DDS Pro, which is bundled with tools for system debugging, monitoring, record/replay, etc."
msgstr "Connext DDS库以`非商业许可证 <https://www.rti.com/ncl>`__的形式与ROS 2捆绑在一起，并不包含安全插件库。这些库可在RTI Connext DDS Pro的商业、大学和研究许可版本中获得，该版本附带用于系统调试、监控、记录/回放等的工具。"


#: ../../source/Installation/DDS-Implementations/Install-Connext-Security-Plugins.rst:11
msgid "The Connext DDS Evaluation Version (6.0.1) includes the security plugins, and can be downloaded via options available for :doc:`university, purchase or evaluation <Install-Connext-University-Eval>`."
msgstr "Connext DDS评估版本（6.0.1）包含安全插件，可以通过:doc:`购买、大学或评估 <Install-Connext-University-Eval>`的选项进行下载。"


#: ../../source/Installation/DDS-Implementations/Install-Connext-Security-Plugins.rst:13
msgid "A video walk-thru of this installation (tools and security plug-ins) is available `here <https://www.rti.com/gettingstarted/installwindows_secure>`__ at the RTI website. The steps are:"
msgstr "这个安装过程的视频演示（工具和安全插件）可以在RTI网站的`这里 <https://www.rti.com/gettingstarted/installwindows_secure>`__ 查看。具体步骤如下："


#: ../../source/Installation/DDS-Implementations/Install-Connext-Security-Plugins.rst:18
msgid "**Install Connext DDS Pro (Host)** This is a host-specific installer application (for Windows, Linux, MacOS) to install a 'Host' bundle which includes the Launcher, tools, and other software services. At the end of the installation, the RTI 'Launcher' program will be started. The Launcher is used to install target libraries, security plugins, and other layered services."
msgstr "**安装Connext DDS Pro（主机）** 这是一个针对主机的安装程序（适用于Windows、Linux、MacOS），用于安装一个'主机'捆绑包，其中包括启动器、工具和其他软件服务。在安装结束时，RTI '启动器'程序将被启动。启动器用于安装目标库、安全插件和其他分层服务。"


#: ../../source/Installation/DDS-Implementations/Install-Connext-Security-Plugins.rst:23
msgid "**Use the Package Installer in Launcher**"
msgstr "**使用启动器中的软件包安装程序**"


#: ../../source/Installation/DDS-Implementations/Install-Connext-Security-Plugins.rst:28
msgid "Launcher Image"
msgstr "启动器图像"


#: ../../source/Installation/DDS-Implementations/Install-Connext-Security-Plugins.rst:30
msgid "The 'RTI Package Installer' is used to install '.rtipkg' files -- target libraries, security plug-ins, etc. Open the Package Installer and select all of the .rtipkg files that were included in the Connext DDS Secure bundle for installation:"
msgstr "‘RTI软件包安装程序’用于安装'.rtipkg'文件，如目标库、安全插件等。打开软件包安装程序，并选择Connext DDS Secure捆绑包中包含的所有.rtipkg文件进行安装："


#: ../../source/Installation/DDS-Implementations/Install-Connext-Security-Plugins.rst:35
msgid "Target Libraries - such as: rti\\_connext\\_dds-[version]-pro-target-[toolchain].rtipkg"
msgstr "目标库 - 例如：rti\\_connext\\_dds-[版本]-pro-target-[工具链].rtipkg"


#: ../../source/Installation/DDS-Implementations/Install-Connext-Security-Plugins.rst:36
msgid "Security Plugin Host - such as: rti\\_security\\_plugins-[version]-host-[toolchain].rtipkg"
msgstr "安全插件主机 - 例如：rti\\_security\\_plugins-[版本]-主机-[工具链].rtipkg"


#: ../../source/Installation/DDS-Implementations/Install-Connext-Security-Plugins.rst:37
msgid "Security Plugin Target - such as: rti\\_security\\_plugins-[version]-target-[toolchain].rtipkg"
msgstr "安全插件目标 - 例如：rti\\_security\\_plugins-[版本]-目标-[工具链].rtipkg"


#: ../../source/Installation/DDS-Implementations/Install-Connext-Security-Plugins.rst:38
msgid "OpenSSL Host - such as: openssl-1.0.2x-[version]-host-[toolchain].rtipkg"
msgstr "OpenSSL主机 - 例如：openssl-1.0.2x-[版本]-主机-[工具链].rtipkg"


#: ../../source/Installation/DDS-Implementations/Install-Connext-Security-Plugins.rst:40
msgid "**Extract and Install OpenSSL** This is included as an archive (.zip or otherwise) and can be simply extracted and copied to a convenient location on your host computer. As a suggestion, this could also be installed into the 'rti\\_connext\\_dds-[version]' directory in your home directory space (this was created during installation of the RTI host tools). Note: this directory location may need to be placed in your PATH environment variable. See the `RTI Security Plugins Getting Started Guide <https://community.rti.com/static/documentation/connext-dds/6.0.1/doc/manuals/connext_dds/dds_security/RTI_SecurityPlugins_GettingStarted.pdf>`__ for more information."
msgstr "**提取并安装OpenSSL** 这是作为一个存档文件（.zip或其他格式）提供的，只需解压并复制到主机计算机上的方便位置。作为建议，您还可以将其安装到主目录空间中的 'rti\\_connext\\_dds-[版本]' 目录中（在安装RTI主机工具时创建）。注意：该目录位置可能需要放置在您的PATH环境变量中。有关更多信息，请参阅 `RTI Security Plugins入门指南 <https://community.rti.com/static/documentation/connext-dds/6.0.1/doc/manuals/connext_dds/dds_security/RTI_SecurityPlugins_GettingStarted.pdf>`__。"


#: ../../source/Installation/DDS-Implementations/Install-Connext-Security-Plugins.rst:50
msgid "Installation complete."
msgstr "安装完成。"


#: ../../source/Installation/DDS-Implementations/Install-Connext-University-Eval.rst:2
msgid "RTI Connext DDS"
msgstr "RTI Connext DDS"


#: ../../source/Installation/DDS-Implementations/Install-Connext-University-Eval.rst:4
msgid "A libraries-only version of RTI Connext DDS 6.0.1 may be installed per the :doc:`installation instructions <../../Installation>` for Debian/Ubuntu Linux (amd64) platforms only, under a `non-commercial license <https://www.rti.com/ncl>`__."
msgstr "A libraries-only version of RTI Connext DDS 6.0.1 may be installed per the :doc:`installation instructions <../../Installation>` for Debian/Ubuntu Linux (amd64) platforms only, under a `non-commercial license <https://www.rti.com/ncl>`__."


#: ../../source/Installation/DDS-Implementations/Install-Connext-University-Eval.rst:7
msgid "A full-suite installation of RTI Connext DDS is available for many additional platforms, for universities, evaluation, or purchase. This installation includes diagnostic tools, layered services, and security.  See below for installation details."
msgstr "A full-suite installation of RTI Connext DDS is available for many additional platforms, for universities, evaluation, or purchase. This installation includes diagnostic tools, layered services, and security.  See below for installation details."


#: ../../source/Installation/DDS-Implementations/Install-Connext-University-Eval.rst:11
msgid "RTI University Program"
msgstr "RTI University Program"


#: ../../source/Installation/DDS-Implementations/Install-Connext-University-Eval.rst:13
msgid "University researchers and classroom users may be eligible for a free academic license through the `RTI University Program <https://www.rti.com/free-trial/university-program>`__. This includes a one-year (renewable) license to the unabridged version of Connext DDS Secure, which includes diagnostic tools and layered services. The university license application can be found `here <https://www.rti.com/free-trial/university-program>`__."
msgstr "University researchers and classroom users may be eligible for a free academic license through the `RTI University Program <https://www.rti.com/free-trial/university-program>`__. This includes a one-year (renewable) license to the unabridged version of Connext DDS Secure, which includes diagnostic tools and layered services. The university license application can be found `here <https://www.rti.com/free-trial/university-program>`__."


#: ../../source/Installation/DDS-Implementations/Install-Connext-University-Eval.rst:19
msgid "RTI Connext DDS Evaluation"
msgstr "RTI Connext DDS Evaluation"


#: ../../source/Installation/DDS-Implementations/Install-Connext-University-Eval.rst:25
msgid "To install RTI Connext DDS **version 6.0.1** Evalution:"
msgstr "To install RTI Connext DDS **version 6.0.1** Evalution:"


#: ../../source/Installation/DDS-Implementations/Install-Connext-University-Eval.rst:22
msgid "Visit the `RTI Free Trial (6.0.1) site <https://www.rti.com/free-trial>`__."
msgstr "Visit the `RTI Free Trial (6.0.1) site <https://www.rti.com/free-trial>`__."


#: ../../source/Installation/DDS-Implementations/Install-Connext-University-Eval.rst:23
msgid "Download the version(s) to match your environment."
msgstr "Download the version(s) to match your environment."


#: ../../source/Installation/DDS-Implementations/Install-Connext-University-Eval.rst:24
msgid "Contact license@rti.com for an evaluation license."
msgstr "Contact license@rti.com for an evaluation license."


#: ../../source/Installation/DDS-Implementations/Install-Connext-University-Eval.rst:25
msgid "Install RTI Connext 6.0.1 by running the installation program.  When finished, it will run the RTI Launcher."
msgstr "Install RTI Connext 6.0.1 by running the installation program.  When finished, it will run the RTI Launcher."


#: ../../source/Installation/DDS-Implementations/Install-Connext-University-Eval.rst:26
msgid "Use the RTI Launcher to install the license file (rti_license.dat) if needed.  The launcher may also be used to launch the diagnostic tools and services."
msgstr "Use the RTI Launcher to install the license file (rti_license.dat) if needed.  The launcher may also be used to launch the diagnostic tools and services."


#: ../../source/Installation/DDS-Implementations/Working-with-Eclipse-CycloneDDS.rst:6
msgid "Eclipse Cyclone DDS"
msgstr "Eclipse Cyclone DDS"


#: ../../source/Installation/DDS-Implementations/Working-with-Eclipse-CycloneDDS.rst:8
msgid "Eclipse Cyclone DDS is a very performant and robust open-source DDS implementation. Cyclone DDS is developed completely in the open as an Eclipse IoT project. See also: https://projects.eclipse.org/projects/iot.cyclonedds"
msgstr "Eclipse Cyclone DDS is a very performant and robust open-source DDS implementation. Cyclone DDS is developed completely in the open as an Eclipse IoT project. See also: https://projects.eclipse.org/projects/iot.cyclonedds"


#: ../../source/Installation/DDS-Implementations/Working-with-Eclipse-CycloneDDS.rst:14 ../../source/Installation/DDS-Implementations/Working-with-GurumNetworks-GurumDDS.rst:13 ../../source/Installation/DDS-Implementations/Working-with-eProsima-Fast-DDS.rst:9
msgid "Prerequisites"
msgstr "先决条件"


#: ../../source/Installation/DDS-Implementations/Working-with-Eclipse-CycloneDDS.rst:16 ../../source/Installation/DDS-Implementations/Working-with-eProsima-Fast-DDS.rst:11
msgid "Have `rosdep installed  <https://wiki.ros.org/rosdep#Installing_rosdep>`__"
msgstr "Have `rosdep installed  <https://wiki.ros.org/rosdep#Installing_rosdep>`__"


#: ../../source/Installation/DDS-Implementations/Working-with-Eclipse-CycloneDDS.rst:19 ../../source/Installation/DDS-Implementations/Working-with-GurumNetworks-GurumDDS.rst:38 ../../source/Installation/DDS-Implementations/Working-with-eProsima-Fast-DDS.rst:14
msgid "Install packages"
msgstr "Install packages"


#: ../../source/Installation/DDS-Implementations/Working-with-Eclipse-CycloneDDS.rst:21 ../../source/Installation/DDS-Implementations/Working-with-eProsima-Fast-DDS.rst:16
msgid "The easiest way is to install from ROS 2 apt repository."
msgstr "The easiest way is to install from ROS 2 apt repository."


#: ../../source/Installation/DDS-Implementations/Working-with-Eclipse-CycloneDDS.rst:28 ../../source/Installation/DDS-Implementations/Working-with-GurumNetworks-GurumDDS.rst:48 ../../source/Installation/DDS-Implementations/Working-with-eProsima-Fast-DDS.rst:23
msgid "Build from source code"
msgstr "Build from source code"


#: ../../source/Installation/DDS-Implementations/Working-with-Eclipse-CycloneDDS.rst:30 ../../source/Installation/DDS-Implementations/Working-with-GurumNetworks-GurumDDS.rst:50 ../../source/Installation/DDS-Implementations/Working-with-eProsima-Fast-DDS.rst:25
msgid "Building from source code is also another way to install."
msgstr "Building from source code is also another way to install."


#: ../../source/Installation/DDS-Implementations/Working-with-Eclipse-CycloneDDS.rst:32
msgid "First, clone Cyclone DDS and rmw_cyclonedds in the ROS 2 workspace source directory."
msgstr "First, clone Cyclone DDS and rmw_cyclonedds in the ROS 2 workspace source directory."


#: ../../source/Installation/DDS-Implementations/Working-with-Eclipse-CycloneDDS.rst:40
msgid "Then, install necessary packages for Cyclone DDS."
msgstr "Then, install necessary packages for Cyclone DDS."


#: ../../source/Installation/DDS-Implementations/Working-with-Eclipse-CycloneDDS.rst:47 ../../source/Installation/DDS-Implementations/Working-with-GurumNetworks-GurumDDS.rst:66 ../../source/Installation/DDS-Implementations/Working-with-eProsima-Fast-DDS.rst:42
msgid "Finally, run colcon build."
msgstr "Finally, run colcon build."


#: ../../source/Installation/DDS-Implementations/Working-with-Eclipse-CycloneDDS.rst:54
msgid "Switch to rmw_cyclonedds"
msgstr "Switch to rmw_cyclonedds"


#: ../../source/Installation/DDS-Implementations/Working-with-Eclipse-CycloneDDS.rst:56
msgid "Switch from other rmw to rmw_cyclonedds by specifying the environment variable."
msgstr "Switch from other rmw to rmw_cyclonedds by specifying the environment variable."


#: ../../source/Installation/DDS-Implementations/Working-with-Eclipse-CycloneDDS.rst:62 ../../source/Installation/DDS-Implementations/Working-with-GurumNetworks-GurumDDS.rst:81 ../../source/Installation/DDS-Implementations/Working-with-eProsima-Fast-DDS.rst:57
msgid "See also: :doc:`Working with multiple RMW implementations <../../How-To-Guides/Working-with-multiple-RMW-implementations>`"
msgstr "See also: :doc:`Working with multiple RMW implementations <../../How-To-Guides/Working-with-multiple-RMW-implementations>`"


#: ../../source/Installation/DDS-Implementations/Working-with-Eclipse-CycloneDDS.rst:65 ../../source/Installation/DDS-Implementations/Working-with-GurumNetworks-GurumDDS.rst:84 ../../source/Installation/DDS-Implementations/Working-with-eProsima-Fast-DDS.rst:60
msgid "Run the talker and listener"
msgstr "Run the talker and listener"


#: ../../source/Installation/DDS-Implementations/Working-with-Eclipse-CycloneDDS.rst:67
msgid "Now run ``talker`` and ``listener`` to test Cyclone DDS."
msgstr "Now run ``talker`` and ``listener`` to test Cyclone DDS."


#: ../../source/Installation/DDS-Implementations/Working-with-GurumNetworks-GurumDDS.rst:6
msgid "GurumNetworks GurumDDS"
msgstr "GurumNetworks GurumDDS"


#: ../../source/Installation/DDS-Implementations/Working-with-GurumNetworks-GurumDDS.rst:8
msgid "rmw_gurumdds is a implementation of the ROS middleware interface using GurumNetworks GurumDDS. More information about GurumDDS is available on our website: https://gurum.cc/index_eng"
msgstr "rmw_gurumdds is a implementation of the ROS middleware interface using GurumNetworks GurumDDS. More information about GurumDDS is available on our website: https://gurum.cc/index_eng"


#: ../../source/Installation/DDS-Implementations/Working-with-GurumNetworks-GurumDDS.rst:15
msgid "The following description assumes that you have completed the 'Environment setup' process from the :doc:`Installing ROS 2 via Debian Packages <../Ubuntu-Install-Debians>` or from the :doc:`Building ROS 2 on Ubuntu Linux <../Alternatives/Ubuntu-Development-Setup>`."
msgstr "The following description assumes that you have completed the 'Environment setup' process from the :doc:`Installing ROS 2 via Debian Packages <../Ubuntu-Install-Debians>` or from the :doc:`Building ROS 2 on Ubuntu Linux <../Alternatives/Ubuntu-Development-Setup>`."


#: ../../source/Installation/DDS-Implementations/Working-with-GurumNetworks-GurumDDS.rst:19
msgid "rmw_gurumdds requires version of GurumDDS-2.8.x. Debian packages of GurumDDS are provided in the ROS 2 apt repositories on ubuntu. Windows binary installer of GurumDDS will be supported soon."
msgstr "rmw_gurumdds requires version of GurumDDS-2.8.x. Debian packages of GurumDDS are provided in the ROS 2 apt repositories on ubuntu. Windows binary installer of GurumDDS will be supported soon."


#: ../../source/Installation/DDS-Implementations/Working-with-GurumNetworks-GurumDDS.rst:23
msgid "GurumDDS requires a license. See the next page: https://gurum.cc/free_trial_eng.html"
msgstr "GurumDDS requires a license. See the next page: https://gurum.cc/free_trial_eng.html"


#: ../../source/Installation/DDS-Implementations/Working-with-GurumNetworks-GurumDDS.rst:25
msgid "After requesting a trial license, please download the license from the license homepage. After getting a license, move it to the following location."
msgstr "After requesting a trial license, please download the license from the license homepage. After getting a license, move it to the following location."


#: ../../source/Installation/DDS-Implementations/Working-with-GurumNetworks-GurumDDS.rst:29
msgid "DDS Version"
msgstr "DDS Version"


#: ../../source/Installation/DDS-Implementations/Working-with-GurumNetworks-GurumDDS.rst:29
msgid "License Location"
msgstr "License Location"


#: ../../source/Installation/DDS-Implementations/Working-with-GurumNetworks-GurumDDS.rst:31
msgid "<= 2.7.2860"
msgstr "<= 2.7.2860"


#: ../../source/Installation/DDS-Implementations/Working-with-GurumNetworks-GurumDDS.rst:31
msgid "/etc/flame"
msgstr "/etc/flame"


#: ../../source/Installation/DDS-Implementations/Working-with-GurumNetworks-GurumDDS.rst:32
msgid ">= 2.7.2861"
msgstr ">= 2.7.2861"


#: ../../source/Installation/DDS-Implementations/Working-with-GurumNetworks-GurumDDS.rst:32 ../../source/Installation/DDS-Implementations/Working-with-GurumNetworks-GurumDDS.rst:33
msgid "/etc/gurumnet"
msgstr "/etc/gurumnet"


#: ../../source/Installation/DDS-Implementations/Working-with-GurumNetworks-GurumDDS.rst:33
msgid "2.8.x"
msgstr "2.8.x"


#: ../../source/Installation/DDS-Implementations/Working-with-GurumNetworks-GurumDDS.rst:40
msgid "The easiest way is to install from ROS 2 apt repository. When ros-humble-rmw-gurumdds-cpp is installed, gurumdds-2.8 is also installed."
msgstr "The easiest way is to install from ROS 2 apt repository. When ros-humble-rmw-gurumdds-cpp is installed, gurumdds-2.8 is also installed."


#: ../../source/Installation/DDS-Implementations/Working-with-GurumNetworks-GurumDDS.rst:52
msgid "First, clone rmw_gurumdds in the ROS 2 workspace source directory."
msgstr "First, clone rmw_gurumdds in the ROS 2 workspace source directory."


#: ../../source/Installation/DDS-Implementations/Working-with-GurumNetworks-GurumDDS.rst:59
msgid "Then, install necessary packages for GurumDDS."
msgstr "Then, install necessary packages for GurumDDS."


#: ../../source/Installation/DDS-Implementations/Working-with-GurumNetworks-GurumDDS.rst:73
msgid "Switch to rmw_gurumdds"
msgstr "Switch to rmw_gurumdds"


#: ../../source/Installation/DDS-Implementations/Working-with-GurumNetworks-GurumDDS.rst:75
msgid "Switch from other rmw to rmw_gurumdds by specifying the environment variable."
msgstr "Switch from other rmw to rmw_gurumdds by specifying the environment variable."


#: ../../source/Installation/DDS-Implementations/Working-with-GurumNetworks-GurumDDS.rst:86
msgid "Now run ``talker`` and ``listener`` to test GurumDDS. Don't forget to set up environment by setup script."
msgstr "Now run ``talker`` and ``listener`` to test GurumDDS. Don't forget to set up environment by setup script."


#: ../../source/Installation/DDS-Implementations/Working-with-eProsima-Fast-DDS.rst:2
msgid "eProsima Fast DDS"
msgstr "eProsima Fast DDS"


#: ../../source/Installation/DDS-Implementations/Working-with-eProsima-Fast-DDS.rst:4
msgid "eProsima Fast DDS is a complete open-source DDS implementation for real time embedded architectures and operating systems. See also: https://www.eprosima.com/index.php/products-all/eprosima-fast-dds"
msgstr "eProsima Fast DDS is a complete open-source DDS implementation for real time embedded architectures and operating systems. See also: https://www.eprosima.com/index.php/products-all/eprosima-fast-dds"


#: ../../source/Installation/DDS-Implementations/Working-with-eProsima-Fast-DDS.rst:27
msgid "First, clone Fast DDS and rmw_fastrtps in the ROS 2 workspace source directory."
msgstr "First, clone Fast DDS and rmw_fastrtps in the ROS 2 workspace source directory."


#: ../../source/Installation/DDS-Implementations/Working-with-eProsima-Fast-DDS.rst:35
msgid "Then, install necessary packages for Fast DDS."
msgstr "Then, install necessary packages for Fast DDS."


#: ../../source/Installation/DDS-Implementations/Working-with-eProsima-Fast-DDS.rst:49
msgid "Switch to rmw_fastrtps"
msgstr "Switch to rmw_fastrtps"


#: ../../source/Installation/DDS-Implementations/Working-with-eProsima-Fast-DDS.rst:51
msgid "The eProsima Fast DDS RMW can be selected by specifying the environment variable:"
msgstr "The eProsima Fast DDS RMW can be selected by specifying the environment variable:"


#: ../../source/Installation/DDS-Implementations/Working-with-eProsima-Fast-DDS.rst:62
msgid "Now run ``talker`` and ``listener`` to test Fast DDS."
msgstr "Now run ``talker`` and ``listener`` to test Fast DDS."


#: ../../source/Installation/Maintaining-a-Source-Checkout.rst:4
msgid "Maintain source checkout"
msgstr "Maintain source checkout"


#: ../../source/Installation/Maintaining-a-Source-Checkout.rst:10
msgid "For instructions on maintaining a source checkout of the **latest development version** of ROS 2, refer to `Maintaining a source checkout of ROS 2 Rolling <../../rolling/Installation/Maintaining-a-Source-Checkout.html>`__"
msgstr "For instructions on maintaining a source checkout of the **latest development version** of ROS 2, refer to `Maintaining a source checkout of ROS 2 Rolling <../../rolling/Installation/Maintaining-a-Source-Checkout.html>`__"


#: ../../source/Installation/Maintaining-a-Source-Checkout.rst:17
msgid "If you have installed ROS 2 from source, there may have been changes made to the source code since the time that you checked it out. To keep your source checkout up to date, you will have to periodically update your ``ros2.repos`` file, download the latest sources, and rebuild your workspace."
msgstr "If you have installed ROS 2 from source, there may have been changes made to the source code since the time that you checked it out. To keep your source checkout up to date, you will have to periodically update your ``ros2.repos`` file, download the latest sources, and rebuild your workspace."


#: ../../source/Installation/Maintaining-a-Source-Checkout.rst:21
msgid "Update your repository list"
msgstr "Update your repository list"


#: ../../source/Installation/Maintaining-a-Source-Checkout.rst:23
msgid "Each ROS 2 release includes a ``ros2.repos`` file that contains the list of repositories and their version for that release."
msgstr "Each ROS 2 release includes a ``ros2.repos`` file that contains the list of repositories and their version for that release."


#: ../../source/Installation/Maintaining-a-Source-Checkout.rst:27
msgid "Latest ROS 2 Humble branches"
msgstr "Latest ROS 2 Humble branches"


#: ../../source/Installation/Maintaining-a-Source-Checkout.rst:29
msgid "If you wish to checkout the latest code for ROS 2 Humble, you can get the relevant repository list by running:"
msgstr "If you wish to checkout the latest code for ROS 2 Humble, you can get the relevant repository list by running:"


#: ../../source/Installation/Maintaining-a-Source-Checkout.rst:33 ../../source/Installation/Maintaining-a-Source-Checkout.rst:80 ../../source/Installation/Maintaining-a-Source-Checkout.rst:123
msgid "Linux"
msgstr "Linux"


#: ../../source/Installation/Maintaining-a-Source-Checkout.rst:41 ../../source/Installation/Maintaining-a-Source-Checkout.rst:87 ../../source/Installation/Maintaining-a-Source-Checkout.rst:130
msgid "macOS"
msgstr "macOS"


#: ../../source/Installation/Maintaining-a-Source-Checkout.rst:49 ../../source/Installation/Maintaining-a-Source-Checkout.rst:94 ../../source/Installation/Maintaining-a-Source-Checkout.rst:137 ../../source/Installation/Testing.rst:92
msgid "Windows"
msgstr "Windows"


#: ../../source/Installation/Maintaining-a-Source-Checkout.rst:63
msgid "Update your repositories"
msgstr "Update your repositories"


#: ../../source/Installation/Maintaining-a-Source-Checkout.rst:65
msgid "You will notice that in the `ros2.repos <https://raw.githubusercontent.com/ros2/ros2/humble/ros2.repos>`__ file, each repository has a ``version`` associated with it that points to a particular commit hash, tag, or branch name. It is possible that these versions refer to new tags/branches that your local copy of the repositories will not recognize as they are out-of-date. Because of this, you should update the repositories that you have already checked out with the following command:"
msgstr "You will notice that in the `ros2.repos <https://raw.githubusercontent.com/ros2/ros2/humble/ros2.repos>`__ file, each repository has a ``version`` associated with it that points to a particular commit hash, tag, or branch name. It is possible that these versions refer to new tags/branches that your local copy of the repositories will not recognize as they are out-of-date. Because of this, you should update the repositories that you have already checked out with the following command:"


#: ../../source/Installation/Maintaining-a-Source-Checkout.rst:74
msgid "Download the new source code"
msgstr "Download the new source code"


#: ../../source/Installation/Maintaining-a-Source-Checkout.rst:76
msgid "You should now be able to download the sources associated with the new repository list with:"
msgstr "You should now be able to download the sources associated with the new repository list with:"


#: ../../source/Installation/Maintaining-a-Source-Checkout.rst:107
msgid "Rebuild your workspace"
msgstr "Rebuild your workspace"


#: ../../source/Installation/Maintaining-a-Source-Checkout.rst:109
msgid "Now that the workspace is up to date with the latest sources, remove your previous install and rebuild your workspace with, for example:"
msgstr "Now that the workspace is up to date with the latest sources, remove your previous install and rebuild your workspace with, for example:"


#: ../../source/Installation/Maintaining-a-Source-Checkout.rst:116
msgid "Inspect your source checkout"
msgstr "Inspect your source checkout"


#: ../../source/Installation/Maintaining-a-Source-Checkout.rst:118
msgid "During your development you may have deviated from the original state of your workspace from when you imported the repository list. If you wish to know the versions of the set of repositories in your workspace, you can export the information using the following command:"
msgstr "During your development you may have deviated from the original state of your workspace from when you imported the repository list. If you wish to know the versions of the set of repositories in your workspace, you can export the information using the following command:"


#: ../../source/Installation/Maintaining-a-Source-Checkout.rst:144
msgid "This ``my_ros2.repos`` file can then be shared with others so that they can reproduce the state of the repositories in your workspace."
msgstr "This ``my_ros2.repos`` file can then be shared with others so that they can reproduce the state of the repositories in your workspace."


#: ../../source/Installation/RHEL-Install-RPMs.rst:2
msgid "RHEL (RPM)"
msgstr "RHEL (RPM)"


#: ../../source/Installation/RHEL-Install-RPMs.rst:8
msgid "RPM packages for ROS 2 Humble Hawksbill are currently available for RHEL 8."
msgstr "RPM packages for ROS 2 Humble Hawksbill are currently available for RHEL 8."


#: ../../source/Installation/RHEL-Install-RPMs.rst:11 ../../source/Installation/Ubuntu-Install-Debians.rst:15
msgid "Resources"
msgstr "Resources"


#: ../../source/Installation/RHEL-Install-RPMs.rst:13 ../../source/Installation/Ubuntu-Install-Debians.rst:17
msgid "Status Page:"
msgstr "Status Page:"


#: ../../source/Installation/RHEL-Install-RPMs.rst:15
msgid "ROS 2 Humble (RHEL 8): `amd64 <http://repo.ros2.org/status_page/ros_humble_rhel.html>`__"
msgstr "ROS 2 Humble (RHEL 8): `amd64 <http://repo.ros2.org/status_page/ros_humble_rhel.html>`__"


#: ../../source/Installation/RHEL-Install-RPMs.rst:16 ../../source/Installation/Ubuntu-Install-Debians.rst:20
msgid "`Jenkins Instance <http://build.ros2.org/>`__"
msgstr "`Jenkins Instance <http://build.ros2.org/>`__"


#: ../../source/Installation/RHEL-Install-RPMs.rst:17 ../../source/Installation/Ubuntu-Install-Debians.rst:21
msgid "`Repositories <http://repo.ros2.org>`__"
msgstr "`Repositories <http://repo.ros2.org>`__"


#: ../../source/Installation/RHEL-Install-RPMs.rst:28 ../../source/Installation/Ubuntu-Install-Debians.rst:32
msgid "Setup Sources"
msgstr "Setup Sources"


#: ../../source/Installation/RHEL-Install-RPMs.rst:30
msgid "You will need to enable the EPEL repositories and the PowerTools repository:"
msgstr "You will need to enable the EPEL repositories and the PowerTools repository:"


#: ../../source/Installation/RHEL-Install-RPMs.rst:39
msgid "Next, download the ROS 2 .repo file:"
msgstr "Next, download the ROS 2 .repo file:"


#: ../../source/Installation/RHEL-Install-RPMs.rst:46
msgid "Then, update your metadata cache. DNF may prompt you to verify the GPG key, which should match the location ``https://raw.githubusercontent.com/ros/rosdistro/master/ros.asc``."
msgstr "Then, update your metadata cache. DNF may prompt you to verify the GPG key, which should match the location ``https://raw.githubusercontent.com/ros/rosdistro/master/ros.asc``."


#: ../../source/Installation/RHEL-Install-RPMs.rst:56 ../../source/Installation/Ubuntu-Install-Debians.rst:39
msgid "Install ROS 2 packages"
msgstr "Install ROS 2 packages"


#: ../../source/Installation/RHEL-Install-RPMs.rst:60 ../../source/Installation/Ubuntu-Install-Debians.rst:56
msgid "Desktop Install (Recommended): ROS, RViz, demos, tutorials."
msgstr "Desktop Install (Recommended): ROS, RViz, demos, tutorials."


#: ../../source/Installation/RHEL-Install-RPMs.rst:66 ../../source/Installation/Ubuntu-Install-Debians.rst:62
msgid "ROS-Base Install (Bare Bones): Communication libraries, message packages, command line tools. No GUI tools."
msgstr "ROS-Base Install (Bare Bones): Communication libraries, message packages, command line tools. No GUI tools."


#: ../../source/Installation/RHEL-Install-RPMs.rst:77 ../../source/Installation/Ubuntu-Install-Debians.rst:79
msgid "Sourcing the setup script"
msgstr "Sourcing the setup script"


#: ../../source/Installation/RHEL-Install-RPMs.rst:90 ../../source/Installation/Ubuntu-Install-Debians.rst:95
msgid "If you installed ``ros-humble-desktop`` above you can try some examples."
msgstr "If you installed ``ros-humble-desktop`` above you can try some examples."


#: ../../source/Installation/RHEL-Install-RPMs.rst:116 ../../source/Installation/Ubuntu-Install-Debians.rst:125 ../../source/Installation/Windows-Install-Binary.rst:79
msgid "The default middleware that ROS 2 uses is ``Fast DDS``, but the middleware (RMW) can be replaced at runtime. See the :doc:`guide <../How-To-Guides/Working-with-multiple-RMW-implementations>` on how to work with multiple RMWs."
msgstr "The default middleware that ROS 2 uses is ``Fast DDS``, but the middleware (RMW) can be replaced at runtime. See the :doc:`guide <../How-To-Guides/Working-with-multiple-RMW-implementations>` on how to work with multiple RMWs."


#: ../../source/Installation/RHEL-Install-RPMs.rst:122 ../../source/Installation/Ubuntu-Install-Debians.rst:131
msgid "Troubleshooting techniques can be found :doc:`here <../How-To-Guides/Installation-Troubleshooting>`."
msgstr "Troubleshooting techniques can be found :doc:`here <../How-To-Guides/Installation-Troubleshooting>`."


#: ../../source/Installation/RHEL-Install-RPMs.rst:127 ../../source/Installation/Ubuntu-Install-Debians.rst:136
msgid "If you need to uninstall ROS 2 or switch to a source-based install once you have already installed from binaries, run the following command:"
msgstr "If you need to uninstall ROS 2 or switch to a source-based install once you have already installed from binaries, run the following command:"


#: ../../source/Installation/Testing.rst:6
msgid "Testing with pre-release binaries"
msgstr "Testing with pre-release binaries"


#: ../../source/Installation/Testing.rst:8
msgid "Many ROS packages are provided as pre-built binaries. Usually, you will get the released version of binaries when following :doc:`../Installation`. There are also pre-released versions of binaries that are useful for testing before making an official release. This article describes several options if you would like to try out pre-released versions of ROS binaries."
msgstr "Many ROS packages are provided as pre-built binaries. Usually, you will get the released version of binaries when following :doc:`../Installation`. There are also pre-released versions of binaries that are useful for testing before making an official release. This article describes several options if you would like to try out pre-released versions of ROS binaries."


#: ../../source/Installation/Testing.rst:14
msgid "Debian testing repository"
msgstr "Debian testing repository"


#: ../../source/Installation/Testing.rst:16
msgid "When packages are released into a ROS distribution (using bloom), the buildfarm builds them into debian packages which are stored temporarily in the **building** apt repository. As dependent packages are rebuilt, an automatic process periodically synchronizes the packages in **building** to a secondary repository called **ros-testing**. **ros-testing** is intended as a soaking area where developers and bleeding-edge users may give the packages extra testing, before they are manually synced into the public ros repository from which users typically install packages."
msgstr "When packages are released into a ROS distribution (using bloom), the buildfarm builds them into debian packages which are stored temporarily in the **building** apt repository. As dependent packages are rebuilt, an automatic process periodically synchronizes the packages in **building** to a secondary repository called **ros-testing**. **ros-testing** is intended as a soaking area where developers and bleeding-edge users may give the packages extra testing, before they are manually synced into the public ros repository from which users typically install packages."


#: ../../source/Installation/Testing.rst:20
msgid "Approximately every two weeks, the rosdistro's release manager manually synchronizes the contents of **ros-testing** into the **main** ROS repository."
msgstr "Approximately every two weeks, the rosdistro's release manager manually synchronizes the contents of **ros-testing** into the **main** ROS repository."


#: ../../source/Installation/Testing.rst:22
msgid "For Debian-based operating systems, you can install binary packages from the **ros-testing** repository."
msgstr "For Debian-based operating systems, you can install binary packages from the **ros-testing** repository."


#: ../../source/Installation/Testing.rst:24
msgid "Make sure you have a working ROS 2 installation from Debian packages (see :doc:`../Installation`)."
msgstr "Make sure you have a working ROS 2 installation from Debian packages (see :doc:`../Installation`)."


#: ../../source/Installation/Testing.rst:26
msgid "Edit (with sudo) the file ``/etc/apt/sources.list.d/ros2.list`` and change ``ros2`` with ``ros2-testing``. For example, on Ubuntu Jammy the contents should look like the following:"
msgstr "Edit (with sudo) the file ``/etc/apt/sources.list.d/ros2.list`` and change ``ros2`` with ``ros2-testing``. For example, on Ubuntu Jammy the contents should look like the following:"


#: ../../source/Installation/Testing.rst:34
msgid "Update the ``apt`` index:"
msgstr "Update the ``apt`` index:"


#: ../../source/Installation/Testing.rst:40
msgid "You can now install individual packages from the testing repository, for example:"
msgstr "You can now install individual packages from the testing repository, for example:"


#: ../../source/Installation/Testing.rst:46
msgid "Alternatively, you can move your entire ROS 2 installation to the testing repository:"
msgstr "Alternatively, you can move your entire ROS 2 installation to the testing repository:"


#: ../../source/Installation/Testing.rst:52
msgid "Once you are finished testing, you can switch back to the normal repository by changing back the contents of ``/etc/apt/sources.list.d/ros2.list``:"
msgstr "Once you are finished testing, you can switch back to the normal repository by changing back the contents of ``/etc/apt/sources.list.d/ros2.list``:"


#: ../../source/Installation/Testing.rst:59
msgid "and doing an update and upgrade:"
msgstr "and doing an update and upgrade:"


#: ../../source/Installation/Testing.rst:69
msgid "Fat binaries"
msgstr "Fat binaries"


#: ../../source/Installation/Testing.rst:71
msgid "For core packages, we run nightly packaging jobs for Ubuntu Linux, RHEL, and Windows. These packaging jobs produce archives with pre-built binaries that can be downloaded and extracted to your filesystem."
msgstr "For core packages, we run nightly packaging jobs for Ubuntu Linux, RHEL, and Windows. These packaging jobs produce archives with pre-built binaries that can be downloaded and extracted to your filesystem."


#: ../../source/Installation/Testing.rst:74
msgid "Make sure you have all dependencies installed according to the :doc:`latest development setup <Alternatives/Latest-Development-Setup>` for your platform."
msgstr "Make sure you have all dependencies installed according to the :doc:`latest development setup <Alternatives/Latest-Development-Setup>` for your platform."


#: ../../source/Installation/Testing.rst:76
msgid "Go to https://ci.ros2.org/view/packaging/ and select a packaging job from the list corresponding to your platform."
msgstr "Go to https://ci.ros2.org/view/packaging/ and select a packaging job from the list corresponding to your platform."


#: ../../source/Installation/Testing.rst:78
msgid "Under the heading \"Last Successful Artifacts\" you should see a download link (e.g. for Windows, ``ros2-package-windows-AMD64.zip``)."
msgstr "Under the heading \"Last Successful Artifacts\" you should see a download link (e.g. for Windows, ``ros2-package-windows-AMD64.zip``)."


#: ../../source/Installation/Testing.rst:80
msgid "Download and extract the archive to your file system."
msgstr "Download and extract the archive to your file system."


#: ../../source/Installation/Testing.rst:82
msgid "To use the fat binary installation, source the ``setup.*`` file that can be found in the root of the archive."
msgstr "To use the fat binary installation, source the ``setup.*`` file that can be found in the root of the archive."


#: ../../source/Installation/Testing.rst:86
msgid "Ubuntu Linux and RHEL"
msgstr "Ubuntu Linux and RHEL"


#: ../../source/Installation/Testing.rst:99
msgid "Docker"
msgstr "Docker"


#: ../../source/Installation/Testing.rst:101
msgid "For Ubuntu Linux, there is also a nightly Docker image based on the nightly fat archive."
msgstr "For Ubuntu Linux, there is also a nightly Docker image based on the nightly fat archive."


#: ../../source/Installation/Testing.rst:103
msgid "Pull the Docker image:"
msgstr "Pull the Docker image:"


#: ../../source/Installation/Testing.rst:109
msgid "Start an interactive container:"
msgstr "Start an interactive container:"


#: ../../source/Installation/Testing.rst:115
msgid "For support on running GUI applications in Docker, take a look at the tutorial `User GUI's with Docker <https://wiki.ros.org/docker/Tutorials/GUI>`_ or the tool `rocker <https://github.com/osrf/rocker>`_."
msgstr "For support on running GUI applications in Docker, take a look at the tutorial `User GUI's with Docker <https://wiki.ros.org/docker/Tutorials/GUI>`_ or the tool `rocker <https://github.com/osrf/rocker>`_."


#: ../../source/Installation/Ubuntu-Install-Debians.rst:6
msgid "Ubuntu (Debian)"
msgstr "Ubuntu (Debian)"


#: ../../source/Installation/Ubuntu-Install-Debians.rst:12
msgid "Debian packages for ROS 2 Humble Hawksbill are currently available for Ubuntu Jammy."
msgstr "Debian packages for ROS 2 Humble Hawksbill are currently available for Ubuntu Jammy."


#: ../../source/Installation/Ubuntu-Install-Debians.rst:19
msgid "ROS 2 Humble (Ubuntu Jammy): `amd64 <http://repo.ros2.org/status_page/ros_humble_default.html>`__\\ , `arm64 <http://repo.ros2.org/status_page/ros_humble_ujv8.html>`__"
msgstr "ROS 2 Humble (Ubuntu Jammy): `amd64 <http://repo.ros2.org/status_page/ros_humble_default.html>`__\\ , `arm64 <http://repo.ros2.org/status_page/ros_humble_ujv8.html>`__"


#: ../../source/Installation/Ubuntu-Install-Debians.rst:41
msgid "Update your apt repository caches after setting up the repositories."
msgstr "Update your apt repository caches after setting up the repositories."


#: ../../source/Installation/Ubuntu-Install-Debians.rst:51
msgid "Due to early updates in Ubuntu 22.04 it is important that ``systemd`` and ``udev``-related packages are updated before installing ROS 2. The installation of ROS 2's dependencies on a freshly installed system without upgrading can trigger the **removal of critical system packages**."
msgstr "Due to early updates in Ubuntu 22.04 it is important that ``systemd`` and ``udev``-related packages are updated before installing ROS 2. The installation of ROS 2's dependencies on a freshly installed system without upgrading can trigger the **removal of critical system packages**."


#: ../../source/Installation/Ubuntu-Install-Debians.rst:54
msgid "Please refer to `ros2/ros2#1272 <https://github.com/ros2/ros2/issues/1272>`_ and `Launchpad #1974196 <https://bugs.launchpad.net/ubuntu/+source/systemd/+bug/1974196>`_ for more information."
msgstr "Please refer to `ros2/ros2#1272 <https://github.com/ros2/ros2/issues/1272>`_ and `Launchpad #1974196 <https://bugs.launchpad.net/ubuntu/+source/systemd/+bug/1974196>`_ for more information."


#: ../../source/Installation/Ubuntu-Install-Debians.rst:69
msgid "Development tools: Compilers and other tools to build ROS packages"
msgstr "Development tools: Compilers and other tools to build ROS packages"


#: ../../source/Installation/Ubuntu-Install-Debians.rst:93
msgid "Talker-listener"
msgstr "Talker-listener"


#: ../../source/Installation/Ubuntu-Install-Debians.rst:143
msgid "You may also want to remove the repository:"
msgstr "You may also want to remove the repository:"


#: ../../source/Installation/Windows-Install-Binary.rst:2
msgid "Windows (binary)"
msgstr "Windows (binary)"


#: ../../source/Installation/Windows-Install-Binary.rst:8
msgid "This page explains how to install ROS 2 on Windows from a pre-built binary package."
msgstr "This page explains how to install ROS 2 on Windows from a pre-built binary package."


#: ../../source/Installation/Windows-Install-Binary.rst:28
msgid "Go to the releases page: https://github.com/ros2/ros2/releases"
msgstr "Go to the releases page: https://github.com/ros2/ros2/releases"


#: ../../source/Installation/Windows-Install-Binary.rst:29
msgid "Download the latest package for Windows, e.g., ``ros2-humble-*-windows-release-amd64.zip``."
msgstr "Download the latest package for Windows, e.g., ``ros2-humble-*-windows-release-amd64.zip``."


#: ../../source/Installation/Windows-Install-Binary.rst:33
msgid "There may be more than one binary download option which might cause the file name to differ."
msgstr "There may be more than one binary download option which might cause the file name to differ."


#: ../../source/Installation/Windows-Install-Binary.rst:37
msgid "To install debug libraries for ROS 2, see `Extra Stuff for Debug`_. Then continue on with downloading ``ros2-package-windows-debug-AMD64.zip``."
msgstr "To install debug libraries for ROS 2, see `Extra Stuff for Debug`_. Then continue on with downloading ``ros2-package-windows-debug-AMD64.zip``."


#: ../../source/Installation/Windows-Install-Binary.rst:40
msgid "Unpack the zip file somewhere (we'll assume ``C:\\dev\\ros2_humble``\\ )."
msgstr "Unpack the zip file somewhere (we'll assume ``C:\\dev\\ros2_humble``\\ )."


#: ../../source/Installation/Windows-Install-Binary.rst:56
msgid "In a command shell, set up the ROS 2 environment as described above and then run a C++ ``talker``\\ :"
msgstr "In a command shell, set up the ROS 2 environment as described above and then run a C++ ``talker``\\ :"


#: ../../source/Installation/Windows-Install-Binary.rst:62
msgid "Start another command shell and run a Python ``listener``\\ :"
msgstr "Start another command shell and run a Python ``listener``\\ :"


#: ../../source/Installation/Windows-Install-Binary.rst:100
msgid "Extra Stuff for Debug"
msgstr "Extra Stuff for Debug"


#: ../../source/Installation/Windows-Install-Binary.rst:102
msgid "To download the ROS 2 debug libraries you'll need to download ``ros2-humble-*-windows-debug-AMD64.zip``. Please note that debug libraries require some more additional configuration/setup to work as given below."
msgstr "To download the ROS 2 debug libraries you'll need to download ``ros2-humble-*-windows-debug-AMD64.zip``. Please note that debug libraries require some more additional configuration/setup to work as given below."


#: ../../source/Installation/Windows-Install-Binary.rst:105
msgid "Python installation may require modification to enable debugging symbols and debug binaries:"
msgstr "Python installation may require modification to enable debugging symbols and debug binaries:"


#: ../../source/Installation/Windows-Install-Binary.rst:107
msgid "Search in windows **Search Bar** and open **Apps and Features**."
msgstr "Search in windows **Search Bar** and open **Apps and Features**."


#: ../../source/Installation/Windows-Install-Binary.rst:108
msgid "Search for the installed Python version."
msgstr "Search for the installed Python version."


#: ../../source/Installation/Windows-Install-Binary.rst:110
msgid "Click Modify."
msgstr "Click Modify."


#: ../../source/Installation/Windows-Install-Binary.rst:115
msgid "Click Next to go to **Advanced Options**."
msgstr "Click Next to go to **Advanced Options**."


#: ../../source/Installation/Windows-Install-Binary.rst:120
msgid "Make sure **Download debugging symbols** and **Download debug binaries** are checked."
msgstr "Make sure **Download debugging symbols** and **Download debug binaries** are checked."


#: ../../source/Installation/Windows-Install-Binary.rst:125
msgid "Click Install."
msgstr "Click Install."


#: ../../source/Installation/Windows-Install-Binary.rst:128
msgid "(Alternative) ROS 2 Build Installation from aka.ms/ros"
msgstr "(Alternative) ROS 2 Build Installation from aka.ms/ros"


#: ../../source/Installation/Windows-Install-Binary.rst:130
msgid "https://aka.ms/ros project hosts ROS 2 builds against the release snapshots. This section explains how to install ROS 2 from this channel."
msgstr "https://aka.ms/ros project hosts ROS 2 builds against the release snapshots. This section explains how to install ROS 2 from this channel."


#: ../../source/Installation/Windows-Install-Binary.rst:134
msgid "Install ROS 2 builds"
msgstr "Install ROS 2 builds"


#: ../../source/Installation/Windows-Install-Binary.rst:136
msgid "In an administrative command prompt, run the following commands."
msgstr "In an administrative command prompt, run the following commands."


#: ../../source/Installation/Windows-Install-Binary.rst:149
msgid "Start an administrative command prompt and source the ROS 2 setup file to set up the workspace:"
msgstr "Start an administrative command prompt and source the ROS 2 setup file to set up the workspace:"


#: ../../source/Installation/Windows-Install-Binary.rst:156
msgid "Stay up-to-date"
msgstr "Stay up-to-date"


#: ../../source/Installation/Windows-Install-Binary.rst:158
msgid "To keep up-to-date with the latest builds, run:"
msgstr "To keep up-to-date with the latest builds, run:"


#: ../../source/Installation/Windows-Install-Binary.rst:168
msgid "If you want to completely remove the environment downloaded above, run this command:"
msgstr "If you want to completely remove the environment downloaded above, run this command:"

