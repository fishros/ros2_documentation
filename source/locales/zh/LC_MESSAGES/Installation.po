# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2023, Open Robotics
# This file is distributed under the same license as the ROS 2 Documentation: Humble package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2023.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: ROS 2 Documentation: Humble \n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2023-10-04 14:40+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language: zh\n"
"Language-Team: zh <LL@li.org>\n"
"Plural-Forms: nplurals=1; plural=0\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.8.0\n"

#: ../../source/Installation.rst:5
msgid "Installation"
msgstr ""

#: ../../source/Installation.rst:7
msgid "Options for installing ROS 2 Humble Hawksbill:"
msgstr ""

#: ../../source/Installation.rst:22
msgid "Binary packages"
msgstr ""

#: ../../source/Installation.rst:24
msgid "Binaries are only created for the Tier 1 operating systems listed in `REP-2000 <https://www.ros.org/reps/rep-2000.html#rolling-ridley-june-2020-ongoing>`__. Given the nature of Rolling, this list may be updated at any time. If you are not running any of the following operating systems you may need to build from source or use a :doc:`container solution <How-To-Guides/Run-2-nodes-in-single-or-separate-docker-containers>` to run ROS 2 on your platform."
msgstr ""

#: ../../source/Installation.rst:28
msgid "We provide ROS 2 binary packages for the following platforms:"
msgstr ""

#: ../../source/Installation.rst:30
msgid "Ubuntu Linux - Jammy Jellyfish (22.04)"
msgstr ""

#: ../../source/Installation.rst:32
msgid ":doc:`Debian packages <Installation/Ubuntu-Install-Debians>` (recommended)"
msgstr ""

#: ../../source/Installation.rst:33
msgid ":doc:`\"fat\" archive <Installation/Alternatives/Ubuntu-Install-Binary>`"
msgstr ""

#: ../../source/Installation.rst:35
msgid "RHEL 8"
msgstr ""

#: ../../source/Installation.rst:37
msgid ":doc:`RPM packages <Installation/RHEL-Install-RPMs>` (recommended)"
msgstr ""

#: ../../source/Installation.rst:38
msgid ":doc:`\"fat\" archive <Installation/Alternatives/RHEL-Install-Binary>`"
msgstr ""

#: ../../source/Installation.rst:40
msgid ":doc:`Windows (VS 2019) <Installation/Windows-Install-Binary>`"
msgstr ""

#: ../../source/Installation.rst:46 ../../source/Installation/Alternatives/Latest-Development-Setup.rst:13
msgid "Building from source"
msgstr ""

#: ../../source/Installation.rst:48
msgid "We support building ROS 2 from source on the following platforms:"
msgstr ""

#: ../../source/Installation.rst:51
msgid ":doc:`Ubuntu Linux <Installation/Alternatives/Ubuntu-Development-Setup>`"
msgstr ""

#: ../../source/Installation.rst:52
msgid ":doc:`Windows <Installation/Alternatives/Windows-Development-Setup>`"
msgstr ""

#: ../../source/Installation.rst:53
msgid ":doc:`RHEL <Installation/Alternatives/RHEL-Development-Setup>`"
msgstr ""

#: ../../source/Installation.rst:54
msgid ":doc:`macOS <Installation/Alternatives/macOS-Development-Setup>`"
msgstr ""

#: ../../source/Installation.rst:58
msgid "Which install should you choose?"
msgstr ""

#: ../../source/Installation.rst:60
msgid "Installing from binary packages or from source will both result in a fully-functional and usable ROS 2 install. Differences between the options depend on what you plan to do with ROS 2."
msgstr ""

#: ../../source/Installation.rst:63
msgid "**Binary packages** are for general use and provide an already-built install of ROS 2. This is great for people who want to dive in and start using ROS 2 as-is, right away."
msgstr ""

#: ../../source/Installation.rst:66
msgid "Linux users have two options for installing binary packages:"
msgstr ""

#: ../../source/Installation.rst:68
msgid "Debian packages"
msgstr ""

#: ../../source/Installation.rst:69
msgid "\"fat\" archive"
msgstr ""

#: ../../source/Installation.rst:71
msgid "Installing from Debian packages is the recommended method. It's more convenient because it installs its necessary dependencies automatically. It also updates alongside regular system updates."
msgstr ""

#: ../../source/Installation.rst:75
msgid "However, you need root access in order to install Debian packages. If you don't have root access, the \"fat\" archive is the next best choice."
msgstr ""

#: ../../source/Installation.rst:78
msgid "macOS and Windows users who choose to install from binary packages only have the \"fat\" archive option (Debian packages are exclusive to Ubuntu/Debian)."
msgstr ""

#: ../../source/Installation.rst:81
msgid "**Building from source** is meant for developers looking to alter or explicitly omit parts of ROS 2's base. It is also recommended for platforms that don't support binaries. Building from source also gives you the option to install the absolute latest version of ROS 2."
msgstr ""

#: ../../source/Installation.rst:86
msgid "Contributing to ROS 2 core?"
msgstr ""

#: ../../source/Installation.rst:87
msgid "If you plan to contribute directly to ROS 2 core packages, you can install the :doc:`latest development from source <Installation/Alternatives/Latest-Development-Setup>` which shares installation instructions with the :ref:`Rolling distribution <rolling_distribution>`."
msgstr ""

#: ../../source/Installation/Alternatives.rst:2
msgid "Alternatives"
msgstr ""

#: ../../source/Installation/Alternatives.rst:4
msgid "A list of alternative ways to install ROS 2 – whether it's by building from source or installing a binary."
msgstr ""

#: ../../source/Installation/Alternatives/Fedora-Development-Setup.rst:6
msgid "Fedora (source)"
msgstr ""

#: ../../source/Installation/Alternatives/Fedora-Development-Setup.rst:9
msgid "How to setup the development environment?"
msgstr ""

#: ../../source/Installation/Alternatives/Fedora-Development-Setup.rst:11
msgid "The following system dependencies are required to build ROS 2 on Fedora. They can be installed with ``dnf`` as follows:"
msgstr ""

#: ../../source/Installation/Alternatives/Fedora-Development-Setup.rst:50
msgid "With this done, you can follow the rest of the :ref:`instructions <rhel-dev-get-ros2-code>` to fetch and build ROS 2."
msgstr ""

#: ../../source/Installation/Alternatives/Latest-Development-Setup.rst:2
msgid "Latest development (source)"
msgstr ""

#: ../../source/Installation/Alternatives/Latest-Development-Setup.rst:4
msgid "If you plan to contribute directly to the latest ROS 2 development, you can install ROS 2 by building it from source or installing testing binaries. This will give you the latest bug fixes and features."
msgstr ""

#: ../../source/Installation/Alternatives/Latest-Development-Setup.rst:8
msgid "Testing binaries"
msgstr ""

#: ../../source/Installation/Alternatives/Latest-Development-Setup.rst:10
msgid "See :doc:`Testing <../Testing>`."
msgstr ""

#: ../../source/Installation/Alternatives/Latest-Development-Setup.rst:17
msgid "The latest development does not go through the same rigorous testing as releases and is not recommended if you are looking for a stable version of ROS 2. Instead, choose a :doc:`ROS distribution <../../Installation>` that has already been released."
msgstr ""

#: ../../source/Installation/Alternatives/Latest-Development-Setup.rst:20
msgid "Follow the links below for the latest setup instructions for your platform:"
msgstr ""

#: ../../source/Installation/Alternatives/Latest-Development-Setup.rst:22
msgid ":doc:`Ubuntu Linux <Ubuntu-Development-Setup>`"
msgstr ""

#: ../../source/Installation/Alternatives/Latest-Development-Setup.rst:23
msgid ":doc:`macOS <macOS-Development-Setup>`"
msgstr ""

#: ../../source/Installation/Alternatives/Latest-Development-Setup.rst:24
msgid ":doc:`Windows <Windows-Development-Setup>`"
msgstr ""

#: ../../source/Installation/Alternatives/Latest-Development-Setup.rst:26
msgid "For keeping your source code up-to-date, see :doc:`Maintain a source checkout <../Maintaining-a-Source-Checkout>`."
msgstr ""

#: ../../source/Installation/Alternatives/RHEL-Development-Setup.rst:8
msgid "RHEL (source)"
msgstr ""

#: ../../source/Installation/Alternatives/RHEL-Development-Setup.rst:13 ../../source/Installation/Alternatives/RHEL-Install-Binary.rst:6 ../../source/Installation/Alternatives/Ubuntu-Development-Setup.rst:14 ../../source/Installation/Alternatives/Ubuntu-Install-Binary.rst:10 ../../source/Installation/Alternatives/Windows-Development-Setup.rst:12 ../../source/Installation/Alternatives/macOS-Development-Setup.rst:8 ../../source/Installation/RHEL-Install-RPMs.rst:6 ../../source/Installation/Ubuntu-Install-Debians.rst:10 ../../source/Installation/Windows-Install-Binary.rst:6
msgid "Table of Contents"
msgstr ""

#: ../../source/Installation/Alternatives/RHEL-Development-Setup.rst:16 ../../source/Installation/Alternatives/Ubuntu-Development-Setup.rst:17 ../../source/Installation/Alternatives/Windows-Development-Setup.rst:17 ../../source/Installation/Alternatives/macOS-Development-Setup.rst:11 ../../source/Installation/Windows-Install-Binary.rst:17
msgid "System requirements"
msgstr ""

#: ../../source/Installation/Alternatives/RHEL-Development-Setup.rst:17
msgid "The current target Red Hat platforms for Humble Hawksbill are:"
msgstr ""

#: ../../source/Installation/Alternatives/RHEL-Development-Setup.rst:19
msgid "Tier 2: RHEL 8 64-bit"
msgstr ""

#: ../../source/Installation/Alternatives/RHEL-Development-Setup.rst:21
msgid "As defined in `REP 2000 <https://www.ros.org/reps/rep-2000.html>`_"
msgstr ""

#: ../../source/Installation/Alternatives/RHEL-Development-Setup.rst:24 ../../source/Installation/Alternatives/Ubuntu-Development-Setup.rst:34
msgid "System setup"
msgstr ""

#: ../../source/Installation/Alternatives/RHEL-Development-Setup.rst:27 ../../source/Installation/Alternatives/Ubuntu-Development-Setup.rst:37 ../../source/Installation/RHEL-Install-RPMs.rst:21 ../../source/Installation/Ubuntu-Install-Debians.rst:25
msgid "Set locale"
msgstr ""

#: ../../source/Installation/_RHEL-Set-Locale.rst:1
msgid "Make sure you have a locale which supports ``UTF-8``. If you are in a minimal environment (such as a docker container), the locale may be something minimal like ``C``. We test with the following settings. However, it should be fine if you're using a different UTF-8 supported locale."
msgstr ""

#: ../../source/Installation/Alternatives/RHEL-Development-Setup.rst:32 ../../source/Installation/Alternatives/RHEL-Install-Binary.rst:24
msgid "Enable required repositories"
msgstr ""

#: ../../source/Installation/Alternatives/RHEL-Development-Setup.rst:34 ../../source/Installation/Alternatives/RHEL-Install-Binary.rst:26
msgid "The rosdep database contains packages from the EPEL and PowerTools repositories, which are not enabled by default. They can be enabled by running:"
msgstr ""

#: ../../source/Installation/Alternatives/RHEL-Development-Setup.rst:42 ../../source/Installation/Alternatives/RHEL-Install-Binary.rst:34 ../../source/Installation/RHEL-Install-RPMs.rst:37
msgid "This step may be slightly different depending on the distribution you are using. Check the EPEL documentation: https://docs.fedoraproject.org/en-US/epel/#_quickstart"
msgstr ""

#: ../../source/Installation/Alternatives/RHEL-Development-Setup.rst:46 ../../source/Installation/Alternatives/Ubuntu-Development-Setup.rst:47
msgid "Install development tools and ROS tools"
msgstr ""

#: ../../source/Installation/Alternatives/RHEL-Development-Setup.rst:82 ../../source/Installation/Alternatives/Ubuntu-Development-Setup.rst:98
msgid "Get ROS 2 code"
msgstr ""

#: ../../source/Installation/Alternatives/RHEL-Development-Setup.rst:84 ../../source/Installation/Alternatives/Ubuntu-Development-Setup.rst:100 ../../source/Installation/Alternatives/macOS-Development-Setup.rst:114
msgid "Create a workspace and clone all repos:"
msgstr ""

#: ../../source/Installation/Alternatives/RHEL-Development-Setup.rst:95 ../../source/Installation/Alternatives/Ubuntu-Development-Setup.rst:111
msgid "Install dependencies using rosdep"
msgstr ""

#: ../../source/Installation/_Dnf-Update-Admonition.rst:1
msgid "ROS 2 packages are built on frequently updated RHEL systems. It is always recommended that you ensure your system is up to date before installing new packages."
msgstr ""

#: ../../source/Installation/Alternatives/RHEL-Development-Setup.rst:106 ../../source/Installation/Alternatives/RHEL-Install-Binary.rst:84 ../../source/Installation/Alternatives/Ubuntu-Development-Setup.rst:124 ../../source/Installation/Alternatives/Ubuntu-Install-Binary.rst:84 ../../source/Installation/Alternatives/Windows-Development-Setup.rst:87 ../../source/Installation/_Windows-Install-Prerequisites.rst:161
msgid "Install additional DDS implementations (optional)"
msgstr ""

#: ../../source/Installation/Alternatives/RHEL-Development-Setup.rst:108 ../../source/Installation/Alternatives/RHEL-Install-Binary.rst:86 ../../source/Installation/Alternatives/Ubuntu-Development-Setup.rst:126 ../../source/Installation/Alternatives/Ubuntu-Install-Binary.rst:86 ../../source/Installation/Alternatives/Windows-Development-Setup.rst:91 ../../source/Installation/Alternatives/macOS-Development-Setup.rst:125
msgid "If you would like to use another DDS or RTPS vendor besides the default, you can find instructions :doc:`here <../DDS-Implementations>`."
msgstr ""

#: ../../source/Installation/Alternatives/RHEL-Development-Setup.rst:111 ../../source/Installation/Alternatives/Ubuntu-Development-Setup.rst:129
msgid "Build the code in the workspace"
msgstr ""

#: ../../source/Installation/Alternatives/RHEL-Development-Setup.rst:113
msgid "If you have already installed ROS 2 another way (either via RPMs or the binary distribution), make sure that you run the below commands in a fresh environment that does not have those other installations sourced. Also ensure that you do not have ``source /opt/ros/${ROS_DISTRO}/setup.bash`` in your ``.bashrc``. You can make sure that ROS 2 is not sourced with the command ``printenv | grep -i ROS``. The output should be empty."
msgstr ""

#: ../../source/Installation/Alternatives/RHEL-Development-Setup.rst:118 ../../source/Installation/Alternatives/Ubuntu-Development-Setup.rst:136
msgid "More info on working with a ROS workspace can be found in :doc:`this tutorial <../../Tutorials/Beginner-Client-Libraries/Colcon-Tutorial>`."
msgstr ""

#: ../../source/Installation/Alternatives/RHEL-Development-Setup.rst:125 ../../source/Installation/Alternatives/Ubuntu-Development-Setup.rst:143
msgid "Note: if you are having trouble compiling all examples and this is preventing you from completing a successful build, you can use ``COLCON_IGNORE`` in the same manner as `CATKIN_IGNORE <https://github.com/ros-infrastructure/rep/blob/master/rep-0128.rst>`__ to ignore the subtree or remove the folder from the workspace. Take for instance: you would like to avoid installing the large OpenCV library. Well then simply run ``touch COLCON_IGNORE`` in the ``cam2image`` demo directory to leave it out of the build process."
msgstr ""

#: ../../source/Installation/Alternatives/RHEL-Development-Setup.rst:130 ../../source/Installation/Alternatives/RHEL-Install-Binary.rst:89 ../../source/Installation/Alternatives/Ubuntu-Development-Setup.rst:148 ../../source/Installation/Alternatives/Ubuntu-Install-Binary.rst:89 ../../source/Installation/Alternatives/Windows-Development-Setup.rst:117 ../../source/Installation/Alternatives/macOS-Development-Setup.rst:141 ../../source/Installation/RHEL-Install-RPMs.rst:74 ../../source/Installation/Ubuntu-Install-Debians.rst:76 ../../source/Installation/Windows-Install-Binary.rst:43 ../../source/Installation/Windows-Install-Binary.rst:147
msgid "Environment setup"
msgstr ""

#: ../../source/Installation/Alternatives/RHEL-Development-Setup.rst:133 ../../source/Installation/Alternatives/RHEL-Install-Binary.rst:92 ../../source/Installation/Alternatives/Ubuntu-Development-Setup.rst:151 ../../source/Installation/Alternatives/Ubuntu-Install-Binary.rst:92
msgid "Source the setup script"
msgstr ""

#: ../../source/Installation/Alternatives/RHEL-Development-Setup.rst:135 ../../source/Installation/Alternatives/RHEL-Install-Binary.rst:94 ../../source/Installation/Alternatives/Ubuntu-Development-Setup.rst:153 ../../source/Installation/Alternatives/Ubuntu-Install-Binary.rst:94 ../../source/Installation/RHEL-Install-RPMs.rst:79 ../../source/Installation/Ubuntu-Install-Debians.rst:81
msgid "Set up your environment by sourcing the following file."
msgstr ""

#: ../../source/Installation/Alternatives/RHEL-Development-Setup.rst:146 ../../source/Installation/Alternatives/RHEL-Install-Binary.rst:103 ../../source/Installation/Alternatives/Ubuntu-Development-Setup.rst:164 ../../source/Installation/Alternatives/Ubuntu-Install-Binary.rst:103 ../../source/Installation/Alternatives/macOS-Development-Setup.rst:152 ../../source/Installation/RHEL-Install-RPMs.rst:88 ../../source/Installation/Ubuntu-Install-Debians.rst:90 ../../source/Installation/Windows-Install-Binary.rst:54
msgid "Try some examples"
msgstr ""

#: ../../source/Installation/Alternatives/RHEL-Development-Setup.rst:148 ../../source/Installation/Alternatives/Ubuntu-Development-Setup.rst:166 ../../source/Installation/RHEL-Install-RPMs.rst:92 ../../source/Installation/Ubuntu-Install-Debians.rst:97
msgid "In one terminal, source the setup file and then run a C++ ``talker``\\ :"
msgstr ""

#: ../../source/Installation/Alternatives/RHEL-Development-Setup.rst:155 ../../source/Installation/Alternatives/Ubuntu-Development-Setup.rst:173 ../../source/Installation/RHEL-Install-RPMs.rst:99 ../../source/Installation/Ubuntu-Install-Debians.rst:104
msgid "In another terminal source the setup file and then run a Python ``listener``\\ :"
msgstr ""

#: ../../source/Installation/Alternatives/RHEL-Development-Setup.rst:162 ../../source/Installation/Alternatives/RHEL-Install-Binary.rst:119 ../../source/Installation/Alternatives/Ubuntu-Development-Setup.rst:180 ../../source/Installation/Alternatives/Ubuntu-Install-Binary.rst:119 ../../source/Installation/Alternatives/Windows-Development-Setup.rst:165 ../../source/Installation/Alternatives/macOS-Development-Setup.rst:166 ../../source/Installation/RHEL-Install-RPMs.rst:106 ../../source/Installation/Ubuntu-Install-Debians.rst:111 ../../source/Installation/Windows-Install-Binary.rst:68
msgid "You should see the ``talker`` saying that it's ``Publishing`` messages and the ``listener`` saying ``I heard`` those messages. This verifies both the C++ and Python APIs are working properly. Hooray!"
msgstr ""

#: ../../source/Installation/Alternatives/RHEL-Development-Setup.rst:167 ../../source/Installation/Alternatives/RHEL-Install-Binary.rst:124 ../../source/Installation/Alternatives/Ubuntu-Development-Setup.rst:185 ../../source/Installation/Alternatives/Ubuntu-Install-Binary.rst:124 ../../source/Installation/Alternatives/Windows-Development-Setup.rst:175 ../../source/Installation/Alternatives/macOS-Development-Setup.rst:171 ../../source/Installation/RHEL-Install-RPMs.rst:111 ../../source/Installation/Ubuntu-Install-Debians.rst:116 ../../source/Installation/Windows-Install-Binary.rst:74
msgid "Next steps after installing"
msgstr ""

#: ../../source/Installation/Alternatives/RHEL-Development-Setup.rst:168 ../../source/Installation/Alternatives/RHEL-Install-Binary.rst:125 ../../source/Installation/Alternatives/Ubuntu-Development-Setup.rst:186 ../../source/Installation/Alternatives/Ubuntu-Install-Binary.rst:125 ../../source/Installation/Alternatives/Windows-Development-Setup.rst:176 ../../source/Installation/RHEL-Install-RPMs.rst:112 ../../source/Installation/Ubuntu-Install-Debians.rst:117 ../../source/Installation/Windows-Install-Binary.rst:75
msgid "Continue with the :doc:`tutorials and demos <../../Tutorials>` to configure your environment, create your own workspace and packages, and learn ROS 2 core concepts."
msgstr ""

#: ../../source/Installation/Alternatives/RHEL-Development-Setup.rst:171 ../../source/Installation/Alternatives/RHEL-Install-Binary.rst:128 ../../source/Installation/Alternatives/Ubuntu-Development-Setup.rst:193 ../../source/Installation/Alternatives/Ubuntu-Install-Binary.rst:132 ../../source/Installation/Alternatives/Windows-Development-Setup.rst:179 ../../source/Installation/Alternatives/macOS-Development-Setup.rst:179 ../../source/Installation/RHEL-Install-RPMs.rst:115 ../../source/Installation/Ubuntu-Install-Debians.rst:124 ../../source/Installation/Windows-Install-Binary.rst:78
msgid "Additional RMW implementations (optional)"
msgstr ""

#: ../../source/Installation/Alternatives/RHEL-Development-Setup.rst:172 ../../source/Installation/Alternatives/RHEL-Install-Binary.rst:129 ../../source/Installation/Alternatives/Ubuntu-Development-Setup.rst:194 ../../source/Installation/Alternatives/Ubuntu-Install-Binary.rst:133 ../../source/Installation/Alternatives/Windows-Development-Setup.rst:180 ../../source/Installation/Alternatives/macOS-Development-Setup.rst:180
msgid "The default middleware that ROS 2 uses is ``Fast DDS``, but the middleware (RMW) can be replaced at runtime. See the :doc:`guide <../../How-To-Guides/Working-with-multiple-RMW-implementations>` on how to work with multiple RMWs."
msgstr ""

#: ../../source/Installation/Alternatives/RHEL-Development-Setup.rst:176 ../../source/Installation/Alternatives/Ubuntu-Development-Setup.rst:198
msgid "Alternate compilers"
msgstr ""

#: ../../source/Installation/Alternatives/RHEL-Development-Setup.rst:178 ../../source/Installation/Alternatives/Ubuntu-Development-Setup.rst:200
msgid "Using a different compiler besides gcc to compile ROS 2 is easy. If you set the environment variables ``CC`` and ``CXX`` to executables for a working C and C++ compiler, respectively, and retrigger CMake configuration (by using ``--force-cmake-config`` or by deleting the packages you want to be affected), CMake will reconfigure and use the different compiler."
msgstr ""

#: ../../source/Installation/Alternatives/RHEL-Development-Setup.rst:181 ../../source/Installation/Alternatives/Ubuntu-Development-Setup.rst:203
msgid "Clang"
msgstr ""

#: ../../source/Installation/Alternatives/RHEL-Development-Setup.rst:183 ../../source/Installation/Alternatives/Ubuntu-Development-Setup.rst:205
msgid "To configure CMake to detect and use Clang:"
msgstr ""

#: ../../source/Installation/Alternatives/RHEL-Development-Setup.rst:193 ../../source/Installation/Alternatives/Ubuntu-Development-Setup.rst:215 ../../source/Installation/Alternatives/Windows-Development-Setup.rst:268 ../../source/Installation/Alternatives/macOS-Development-Setup.rst:184
msgid "Stay up to date"
msgstr ""

#: ../../source/Installation/Alternatives/RHEL-Development-Setup.rst:195 ../../source/Installation/Alternatives/Ubuntu-Development-Setup.rst:217 ../../source/Installation/Alternatives/Windows-Development-Setup.rst:270 ../../source/Installation/Alternatives/macOS-Development-Setup.rst:186
msgid "See :doc:`../Maintaining-a-Source-Checkout` to periodically refresh your source installation."
msgstr ""

#: ../../source/Installation/Alternatives/RHEL-Development-Setup.rst:198 ../../source/Installation/Alternatives/RHEL-Install-Binary.rst:133 ../../source/Installation/Alternatives/Ubuntu-Development-Setup.rst:220 ../../source/Installation/Alternatives/Ubuntu-Install-Binary.rst:137 ../../source/Installation/Alternatives/Windows-Development-Setup.rst:273 ../../source/Installation/Alternatives/macOS-Development-Setup.rst:189 ../../source/Installation/RHEL-Install-RPMs.rst:120 ../../source/Installation/Ubuntu-Install-Debians.rst:129 ../../source/Installation/Windows-Install-Binary.rst:83
msgid "Troubleshooting"
msgstr ""

#: ../../source/Installation/Alternatives/RHEL-Development-Setup.rst:200 ../../source/Installation/Alternatives/Ubuntu-Development-Setup.rst:222
msgid "Troubleshooting techniques can be found :ref:`here <linux-troubleshooting>`."
msgstr ""

#: ../../source/Installation/Alternatives/RHEL-Development-Setup.rst:203 ../../source/Installation/Alternatives/RHEL-Install-Binary.rst:138 ../../source/Installation/Alternatives/Ubuntu-Development-Setup.rst:225 ../../source/Installation/Alternatives/Ubuntu-Install-Binary.rst:142 ../../source/Installation/Alternatives/Windows-Development-Setup.rst:278 ../../source/Installation/Alternatives/macOS-Development-Setup.rst:194 ../../source/Installation/RHEL-Install-RPMs.rst:125 ../../source/Installation/Ubuntu-Install-Debians.rst:134 ../../source/Installation/Windows-Install-Binary.rst:88 ../../source/Installation/Windows-Install-Binary.rst:166
msgid "Uninstall"
msgstr ""

#: ../../source/Installation/Alternatives/RHEL-Development-Setup.rst:205 ../../source/Installation/Alternatives/RHEL-Install-Binary.rst:140 ../../source/Installation/Alternatives/Ubuntu-Development-Setup.rst:227 ../../source/Installation/Alternatives/Ubuntu-Install-Binary.rst:144 ../../source/Installation/Alternatives/Windows-Development-Setup.rst:280 ../../source/Installation/Alternatives/macOS-Development-Setup.rst:196 ../../source/Installation/Windows-Install-Binary.rst:90
msgid "If you installed your workspace with colcon as instructed above, \"uninstalling\" could be just a matter of opening a new terminal and not sourcing the workspace's ``setup`` file. This way, your environment will behave as though there is no Humble install on your system."
msgstr ""

#: ../../source/Installation/Alternatives/RHEL-Development-Setup.rst:208 ../../source/Installation/Alternatives/RHEL-Install-Binary.rst:143 ../../source/Installation/Alternatives/Ubuntu-Development-Setup.rst:230 ../../source/Installation/Alternatives/Ubuntu-Install-Binary.rst:147 ../../source/Installation/Alternatives/Windows-Development-Setup.rst:283 ../../source/Installation/Alternatives/macOS-Development-Setup.rst:199 ../../source/Installation/Windows-Install-Binary.rst:93
msgid "If you're also trying to free up space, you can delete the entire workspace directory with:"
msgstr ""

#: ../../source/Installation/Alternatives/RHEL-Install-Binary.rst:2
msgid "RHEL (binary)"
msgstr ""

#: ../../source/Installation/Alternatives/RHEL-Install-Binary.rst:8
msgid "This page explains how to install ROS 2 on RHEL from a pre-built binary package."
msgstr ""

#: ../../source/Installation/Alternatives/RHEL-Install-Binary.rst:12 ../../source/Installation/Alternatives/Ubuntu-Install-Binary.rst:16 ../../source/Installation/Windows-Install-Binary.rst:12
msgid "The pre-built binary does not include all ROS 2 packages. All packages in the `ROS base variant <https://ros.org/reps/rep-2001.html#ros-base>`_ are included, and only a subset of packages in the `ROS desktop variant <https://ros.org/reps/rep-2001.html#desktop-variants>`_ are included. The exact list of packages are described by the repositories listed in `this ros2.repos file <https://github.com/ros2/ros2/blob/humble/ros2.repos>`_."
msgstr ""

#: ../../source/Installation/Alternatives/RHEL-Install-Binary.rst:16
msgid "There are also :doc:`RPM packages <../RHEL-Install-RPMs>` available."
msgstr ""

#: ../../source/Installation/Alternatives/RHEL-Install-Binary.rst:19 ../../source/Installation/Alternatives/Ubuntu-Install-Binary.rst:23
msgid "System Requirements"
msgstr ""

#: ../../source/Installation/Alternatives/RHEL-Install-Binary.rst:21
msgid "We currently support RHEL 8 64-bit."
msgstr ""

#: ../../source/Installation/Alternatives/RHEL-Install-Binary.rst:37 ../../source/Installation/_Windows-Install-Prerequisites.rst:2
msgid "Installing prerequisites"
msgstr ""

#: ../../source/Installation/Alternatives/RHEL-Install-Binary.rst:39
msgid "There are a few packages that must be installed in order to get and unpack the binary release."
msgstr ""

#: ../../source/Installation/Alternatives/RHEL-Install-Binary.rst:46 ../../source/Installation/Alternatives/Ubuntu-Install-Binary.rst:33 ../../source/Installation/Windows-Install-Binary.rst:26
msgid "Downloading ROS 2"
msgstr ""

#: ../../source/Installation/Alternatives/RHEL-Install-Binary.rst:48 ../../source/Installation/Alternatives/Ubuntu-Install-Binary.rst:35
msgid "Go to the `releases page <https://github.com/ros2/ros2/releases>`_"
msgstr ""

#: ../../source/Installation/Alternatives/RHEL-Install-Binary.rst:49
msgid "Download the latest package for RHEL; let's assume that it ends up at ``~/Downloads/ros2-package-linux-x86_64.tar.bz2``."
msgstr ""

#: ../../source/Installation/Alternatives/RHEL-Install-Binary.rst:51 ../../source/Installation/Alternatives/Ubuntu-Install-Binary.rst:38
msgid "Note: there may be more than one binary download option which might cause the file name to differ."
msgstr ""

#: ../../source/Installation/Alternatives/RHEL-Install-Binary.rst:53 ../../source/Installation/Alternatives/Ubuntu-Install-Binary.rst:41
msgid "Unpack it:"
msgstr ""

#: ../../source/Installation/Alternatives/RHEL-Install-Binary.rst:62 ../../source/Installation/Alternatives/Ubuntu-Install-Binary.rst:50
msgid "Installing and initializing rosdep"
msgstr ""

#: ../../source/Installation/Alternatives/RHEL-Install-Binary.rst:73 ../../source/Installation/Alternatives/Ubuntu-Install-Binary.rst:62
msgid "Installing the missing dependencies"
msgstr ""

#: ../../source/Installation/Alternatives/RHEL-Install-Binary.rst:77 ../../source/Installation/Alternatives/Ubuntu-Install-Binary.rst:66
msgid "Set your rosdistro according to the release you downloaded."
msgstr ""

#: ../../source/Installation/Alternatives/RHEL-Install-Binary.rst:105 ../../source/Installation/Alternatives/Ubuntu-Install-Binary.rst:105
msgid "In one terminal, source the setup file and then run a C++ ``talker``:"
msgstr ""

#: ../../source/Installation/Alternatives/RHEL-Install-Binary.rst:112 ../../source/Installation/Alternatives/Ubuntu-Install-Binary.rst:112 ../../source/Installation/Alternatives/macOS-Development-Setup.rst:160
msgid "In another terminal source the setup file and then run a Python ``listener``:"
msgstr ""

#: ../../source/Installation/Alternatives/RHEL-Install-Binary.rst:135 ../../source/Installation/Alternatives/Ubuntu-Install-Binary.rst:139
msgid "Troubleshooting techniques can be found :doc:`here <../../How-To-Guides/Installation-Troubleshooting>`."
msgstr ""

#: ../../source/Installation/Alternatives/Ubuntu-Development-Setup.rst:9
msgid "Ubuntu (source)"
msgstr ""

#: ../../source/Installation/Alternatives/Ubuntu-Development-Setup.rst:18
msgid "The current Debian-based target platforms for Humble Hawksbill are:"
msgstr ""

#: ../../source/Installation/Alternatives/Ubuntu-Development-Setup.rst:20
msgid "Tier 1: Ubuntu Linux - Jammy (22.04) 64-bit"
msgstr ""

#: ../../source/Installation/Alternatives/Ubuntu-Development-Setup.rst:21
msgid "Tier 3: Ubuntu Linux - Focal (20.04) 64-bit"
msgstr ""

#: ../../source/Installation/Alternatives/Ubuntu-Development-Setup.rst:22
msgid "Tier 3: Debian Linux - Bullseye (11) 64-bit"
msgstr ""

#: ../../source/Installation/Alternatives/Ubuntu-Development-Setup.rst:25
msgid "Other Linux platforms with varying support levels include:"
msgstr ""

#: ../../source/Installation/Alternatives/Ubuntu-Development-Setup.rst:27
msgid "Arch Linux, see `alternate instructions <https://wiki.archlinux.org/index.php/ROS#ROS_2>`__"
msgstr ""

#: ../../source/Installation/Alternatives/Ubuntu-Development-Setup.rst:28
msgid "Fedora Linux, see :doc:`alternate instructions <Fedora-Development-Setup>`"
msgstr ""

#: ../../source/Installation/Alternatives/Ubuntu-Development-Setup.rst:29
msgid "OpenEmbedded / webOS OSE, see `alternate instructions <https://github.com/ros/meta-ros/wiki/OpenEmbedded-Build-Instructions>`__"
msgstr ""

#: ../../source/Installation/Alternatives/Ubuntu-Development-Setup.rst:31
msgid "As defined in `REP 2000 <https://www.ros.org/reps/rep-2000.html>`_."
msgstr ""

#: ../../source/Installation/_Ubuntu-Set-Locale.rst:1
msgid "Make sure you have a locale which supports ``UTF-8``. If you are in a minimal environment (such as a docker container), the locale may be something minimal like ``POSIX``. We test with the following settings. However, it should be fine if you're using a different UTF-8 supported locale."
msgstr ""

#: ../../source/Installation/Alternatives/Ubuntu-Development-Setup.rst:42 ../../source/Installation/Alternatives/Ubuntu-Install-Binary.rst:28
msgid "Add the ROS 2 apt repository"
msgstr ""

#: ../../source/Installation/_Apt-Repositories.rst:1
msgid "You will need to add the ROS 2 apt repository to your system."
msgstr ""

#: ../../source/Installation/_Apt-Repositories.rst:3
msgid "First ensure that the `Ubuntu Universe repository <https://help.ubuntu.com/community/Repositories/Ubuntu>`_ is enabled."
msgstr ""

#: ../../source/Installation/_Apt-Repositories.rst:10
msgid "Now add the ROS 2 GPG key with apt."
msgstr ""

#: ../../source/Installation/_Apt-Repositories.rst:17
msgid "Then add the repository to your sources list."
msgstr ""

#: ../../source/Installation/Alternatives/Ubuntu-Development-Setup.rst:49
msgid "Install common packages."
msgstr ""

#: ../../source/Installation/Alternatives/Ubuntu-Development-Setup.rst:59
msgid "Install packages according to your Ubuntu version."
msgstr ""

#: ../../source/Installation/Alternatives/Ubuntu-Development-Setup.rst:63
msgid "Ubuntu 22.04 LTS and later"
msgstr ""

#: ../../source/Installation/Alternatives/Ubuntu-Development-Setup.rst:78
msgid "Ubuntu 20.04 LTS"
msgstr ""

#: ../../source/Installation/_Apt-Upgrade-Admonition.rst:1
msgid "ROS 2 packages are built on frequently updated Ubuntu systems. It is always recommended that you ensure your system is up to date before installing new packages."
msgstr ""

#: ../../source/Installation/_rosdep_Linux_Mint.rst:1
msgid "**Note**: If you're using a distribution that is based on Ubuntu (like Linux Mint) but does not identify itself as such, you'll get an error message like ``Unsupported OS [mint]``. In this case append ``--os=ubuntu:jammy`` to the above command."
msgstr ""

#: ../../source/Installation/Alternatives/Ubuntu-Development-Setup.rst:131
msgid "If you have already installed ROS 2 another way (either via Debians or the binary distribution), make sure that you run the below commands in a fresh environment that does not have those other installations sourced. Also ensure that you do not have ``source /opt/ros/${ROS_DISTRO}/setup.bash`` in your ``.bashrc``. You can make sure that ROS 2 is not sourced with the command ``printenv | grep -i ROS``. The output should be empty."
msgstr ""

#: ../../source/Installation/Alternatives/Ubuntu-Development-Setup.rst:189 ../../source/Installation/Alternatives/Ubuntu-Install-Binary.rst:128 ../../source/Installation/Alternatives/macOS-Development-Setup.rst:175 ../../source/Installation/Ubuntu-Install-Debians.rst:120
msgid "Using the ROS 1 bridge"
msgstr ""

#: ../../source/Installation/Alternatives/Ubuntu-Development-Setup.rst:190 ../../source/Installation/Alternatives/Ubuntu-Install-Binary.rst:129 ../../source/Installation/Alternatives/macOS-Development-Setup.rst:176 ../../source/Installation/Ubuntu-Install-Debians.rst:121
msgid "The ROS 1 bridge can connect topics from ROS 1 to ROS 2 and vice-versa. See the dedicated `documentation <https://github.com/ros2/ros1_bridge/blob/master/README.md>`__ on how to build and use the ROS 1 bridge."
msgstr ""

#: ../../source/Installation/Alternatives/Ubuntu-Install-Binary.rst:6
msgid "Ubuntu (binary)"
msgstr ""

#: ../../source/Installation/Alternatives/Ubuntu-Install-Binary.rst:12
msgid "This page explains how to install ROS 2 on Ubuntu Linux from a pre-built binary package."
msgstr ""

#: ../../source/Installation/Alternatives/Ubuntu-Install-Binary.rst:20
msgid "There are also :doc:`Debian packages <../Ubuntu-Install-Debians>` available."
msgstr ""

#: ../../source/Installation/Alternatives/Ubuntu-Install-Binary.rst:25
msgid "We currently support Ubuntu Linux Jammy (22.04) 64-bit x86 and 64-bit ARM."
msgstr ""

#: ../../source/Installation/Alternatives/Ubuntu-Install-Binary.rst:36
msgid "Download the latest package for Ubuntu; let's assume that it ends up at ``~/Downloads/ros2-package-linux-x86_64.tar.bz2``."
msgstr ""

#: ../../source/Installation/Alternatives/Ubuntu-Install-Binary.rst:75
msgid "Install development tools (optional)"
msgstr ""

#: ../../source/Installation/Alternatives/Ubuntu-Install-Binary.rst:77
msgid "If you are going to build ROS packages or otherwise do development, you can also install the development tools:"
msgstr ""

#: ../../source/Installation/Alternatives/Windows-Development-Setup.rst:8
msgid "Windows (source)"
msgstr ""

#: ../../source/Installation/Alternatives/Windows-Development-Setup.rst:14
msgid "This guide is about how to setup a development environment for ROS 2 on Windows."
msgstr ""

#: ../../source/Installation/Alternatives/Windows-Development-Setup.rst:19 ../../source/Installation/Windows-Install-Binary.rst:19
msgid "Only Windows 10 is supported."
msgstr ""

#: ../../source/Installation/Alternatives/Windows-Development-Setup.rst:22
msgid "Language support"
msgstr ""

#: ../../source/Installation/Alternatives/Windows-Development-Setup.rst:24
msgid "Make sure you have a locale which supports ``UTF-8``. For example, for a Chinese-language Windows 10 installation, you may need to install an `English language pack <https://support.microsoft.com/en-us/windows/language-packs-for-windows-a5094319-a92d-18de-5b53-1cfc697cfca8>`_."
msgstr ""

#: ../../source/Installation/_Windows-Install-Prerequisites.rst:5
msgid "Install Chocolatey"
msgstr ""

#: ../../source/Installation/_Windows-Install-Prerequisites.rst:7
msgid "Chocolatey is a package manager for Windows, install it by following their installation instructions:"
msgstr ""

#: ../../source/Installation/_Windows-Install-Prerequisites.rst:9
msgid "https://chocolatey.org/install"
msgstr ""

#: ../../source/Installation/_Windows-Install-Prerequisites.rst:11
msgid "You'll use Chocolatey to install some other developer tools."
msgstr ""

#: ../../source/Installation/_Windows-Install-Prerequisites.rst:14
msgid "Install Python"
msgstr ""

#: ../../source/Installation/_Windows-Install-Prerequisites.rst:16
msgid "Open a Command Prompt and type the following to install Python via Chocolatey:"
msgstr ""

#: ../../source/Installation/_Windows-Install-Prerequisites.rst:24
msgid "Chocolatey will install Python in ``C:\\Python38``, and the rest of the installation expects it to be there. If you've installed Python somewhere else, you must copy or link it to that location."
msgstr ""

#: ../../source/Installation/_Windows-Install-Prerequisites.rst:28
msgid "Install Visual C++ Redistributables"
msgstr ""

#: ../../source/Installation/_Windows-Install-Prerequisites.rst:30
msgid "Open a Command Prompt and type the following to install them via Chocolatey:"
msgstr ""

#: ../../source/Installation/_Windows-Install-Prerequisites.rst:37
msgid "Install OpenSSL"
msgstr ""

#: ../../source/Installation/_Windows-Install-Prerequisites.rst:39
msgid "Download the *Win64 OpenSSL v1.1.1n* OpenSSL installer from `this page <https://slproweb.com/products/Win32OpenSSL.html>`__. Scroll to the bottom of the page and download *Win64 OpenSSL v1.1.1t*. Don't download the Win32 or Light versions, or the v3.X.Y installers."
msgstr ""

#: ../../source/Installation/_Windows-Install-Prerequisites.rst:43
msgid "Run the installer with default parameters, as the following commands assume you used the default installation directory."
msgstr ""

#: ../../source/Installation/_Windows-Install-Prerequisites.rst:45
msgid "This command sets an environment variable that persists over sessions:"
msgstr ""

#: ../../source/Installation/_Windows-Install-Prerequisites.rst:51
msgid "You will need to append the OpenSSL-Win64 bin folder to your PATH. You can do this by clicking the Windows icon, typing \"Environment Variables\", then clicking on \"Edit the system environment variables\". In the resulting dialog, click \"Environment Variables\", then click \"Path\" on the bottom pane, finally click \"Edit\" and add the path below."
msgstr ""

#: ../../source/Installation/_Windows-Install-Prerequisites.rst:55
msgid "``C:\\Program Files\\OpenSSL-Win64\\bin\\``"
msgstr ""

#: ../../source/Installation/_Windows-Install-Prerequisites.rst:58
msgid "Install Visual Studio"
msgstr ""

#: ../../source/Installation/_Windows-Install-Prerequisites.rst:60
msgid "Install Visual Studio 2019."
msgstr ""

#: ../../source/Installation/_Windows-Install-Prerequisites.rst:62
msgid "If you already have a paid version of Visual Studio 2019 (Professional, Enterprise), skip this step."
msgstr ""

#: ../../source/Installation/_Windows-Install-Prerequisites.rst:64
msgid "Microsoft provides a free of charge version of Visual Studio 2019, named Community, which can be used to build applications that use ROS 2. `You can download the installer directly through this link. <https://visualstudio.microsoft.com/thank-you-downloading-visual-studio/?sku=Community&rel=16&src=myvs&utm_medium=microsoft&utm_source=my.visualstudio.com&utm_campaign=download&utm_content=vs+community+2019>`_"
msgstr ""

#: ../../source/Installation/_Windows-Install-Prerequisites.rst:67
msgid "Make sure that the Visual C++ features are installed."
msgstr ""

#: ../../source/Installation/_Windows-Install-Prerequisites.rst:69
msgid "An easy way to make sure they're installed is to select the ``Desktop development with C++`` workflow during the install."
msgstr ""

#: ../../source/Installation/_Windows-Install-Prerequisites.rst:73
msgid "Make sure that no C++ CMake tools are installed by unselecting them in the list of components to be installed."
msgstr ""

#: ../../source/Installation/_Windows-Install-Prerequisites.rst:76
msgid "Install OpenCV"
msgstr ""

#: ../../source/Installation/_Windows-Install-Prerequisites.rst:78
msgid "Some of the examples require OpenCV to be installed."
msgstr ""

#: ../../source/Installation/_Windows-Install-Prerequisites.rst:80
msgid "You can download a precompiled version of OpenCV 3.4.6 from https://github.com/ros2/ros2/releases/download/opencv-archives/opencv-3.4.6-vc16.VS2019.zip ."
msgstr ""

#: ../../source/Installation/_Windows-Install-Prerequisites.rst:82
msgid "Assuming you unpacked it to ``C:\\opencv``, type the following on a Command Prompt (requires Admin privileges):"
msgstr ""

#: ../../source/Installation/_Windows-Install-Prerequisites.rst:88
msgid "Since you are using a precompiled ROS version, we have to tell it where to find the OpenCV libraries. You have to extend the ``PATH`` variable to ``C:\\opencv\\x64\\vc16\\bin``."
msgstr ""

#: ../../source/Installation/_Windows-Install-Prerequisites.rst:92
msgid "Install dependencies"
msgstr ""

#: ../../source/Installation/_Windows-Install-Prerequisites.rst:94
msgid "There are a few dependencies not available in the Chocolatey package database. In order to ease the manual installation process, we provide the necessary Chocolatey packages."
msgstr ""

#: ../../source/Installation/_Windows-Install-Prerequisites.rst:97
msgid "As some chocolatey packages rely on it, we start by installing CMake"
msgstr ""

#: ../../source/Installation/_Windows-Install-Prerequisites.rst:103
msgid "You will need to append the CMake bin folder ``C:\\Program Files\\CMake\\bin`` to your PATH."
msgstr ""

#: ../../source/Installation/_Windows-Install-Prerequisites.rst:105
msgid "Please download these packages from `this <https://github.com/ros2/choco-packages/releases/latest>`__ GitHub repository."
msgstr ""

#: ../../source/Installation/_Windows-Install-Prerequisites.rst:107
msgid "asio.1.12.1.nupkg"
msgstr ""

#: ../../source/Installation/_Windows-Install-Prerequisites.rst:108
msgid "bullet.3.17.nupkg"
msgstr ""

#: ../../source/Installation/_Windows-Install-Prerequisites.rst:109
msgid "cunit.2.1.3.nupkg"
msgstr ""

#: ../../source/Installation/_Windows-Install-Prerequisites.rst:110
msgid "eigen-3.3.4.nupkg"
msgstr ""

#: ../../source/Installation/_Windows-Install-Prerequisites.rst:111
msgid "tinyxml-usestl.2.6.2.nupkg"
msgstr ""

#: ../../source/Installation/_Windows-Install-Prerequisites.rst:112
msgid "tinyxml2.6.0.0.nupkg"
msgstr ""

#: ../../source/Installation/_Windows-Install-Prerequisites.rst:114
msgid "Once these packages are downloaded, open an administrative shell and execute the following command:"
msgstr ""

#: ../../source/Installation/_Windows-Install-Prerequisites.rst:120
msgid "Please replace ``<PATH\\TO\\DOWNLOADS>`` with the folder you downloaded the packages to."
msgstr ""

#: ../../source/Installation/_Windows-Install-Prerequisites.rst:122
msgid "First upgrade pip and setuptools:"
msgstr ""

#: ../../source/Installation/_Windows-Install-Prerequisites.rst:128
msgid "Now install some additional python dependencies:"
msgstr ""

#: ../../source/Installation/_Windows-Install-Prerequisites.rst:135
msgid "Install Qt5"
msgstr ""

#: ../../source/Installation/_Windows-Install-Prerequisites.rst:137
msgid "Download the `5.12.X offline installer <https://www.qt.io/offline-installers>`_ from Qt's website. Run the installer. Make sure to select the ``MSVC 2017 64-bit`` component under the ``Qt`` -> ``Qt 5.12.12`` tree."
msgstr ""

#: ../../source/Installation/_Windows-Install-Prerequisites.rst:141
msgid "Finally, in an administrator ``cmd.exe`` window set these environment variables. The commands below assume you installed it to the default location of ``C:\\Qt``."
msgstr ""

#: ../../source/Installation/_Windows-Install-Prerequisites.rst:152
msgid "This path might change based on the installed MSVC version, the directory Qt was installed to, and the version of Qt installed."
msgstr ""

#: ../../source/Installation/_Windows-Install-Prerequisites.rst:155
msgid "RQt dependencies"
msgstr ""

#: ../../source/Installation/_Windows-Install-Prerequisites.rst:157
msgid "To run rqt_graph you need to `download <https://graphviz.gitlab.io/_pages/Download/Download_windows.html>`__ and install `Graphviz <https://graphviz.gitlab.io/>`__. The installer will ask if to add graphviz to PATH, choose to either add it to the current user or all users."
msgstr ""

#: ../../source/Installation/_Windows-Install-Prerequisites.rst:163
msgid "If you would like to use another DDS or RTPS vendor besides the default, Fast DDS, you can find instructions `here </Installation/DDS-Implementations>`_."
msgstr ""

#: ../../source/Installation/Alternatives/Windows-Development-Setup.rst:30
msgid "Additional prerequisites"
msgstr ""

#: ../../source/Installation/Alternatives/Windows-Development-Setup.rst:32
msgid "When building from source you'll need a few additional prerequisites installed."
msgstr ""

#: ../../source/Installation/Alternatives/Windows-Development-Setup.rst:35
msgid "Install additional prerequisites from Chocolatey"
msgstr ""

#: ../../source/Installation/Alternatives/Windows-Development-Setup.rst:41
msgid "You will need to append the Git cmd folder ``C:\\Program Files\\Git\\cmd`` to the PATH (you can do this by clicking the Windows icon, typing \"Environment Variables\", then clicking on \"Edit the system environment variables\". In the resulting dialog, click \"Environment Variables\", the click \"Path\" on the bottom pane, then click \"Edit\" and add the path)."
msgstr ""

#: ../../source/Installation/Alternatives/Windows-Development-Setup.rst:46
msgid "Install Python prerequisites"
msgstr ""

#: ../../source/Installation/Alternatives/Windows-Development-Setup.rst:48
msgid "Installing additional Python dependencies:"
msgstr ""

#: ../../source/Installation/Alternatives/Windows-Development-Setup.rst:55
msgid "Install miscellaneous prerequisites"
msgstr ""

#: ../../source/Installation/Alternatives/Windows-Development-Setup.rst:57
msgid "Next install xmllint:"
msgstr ""

#: ../../source/Installation/Alternatives/Windows-Development-Setup.rst:59
msgid "Download the `64 bit binary archives <https://www.zlatkovic.com/pub/libxml/64bit/>`__ of ``libxml2`` (and its dependencies ``iconv`` and ``zlib``) from https://www.zlatkovic.com/projects/libxml/"
msgstr ""

#: ../../source/Installation/Alternatives/Windows-Development-Setup.rst:60
msgid "Unpack all archives into e.g. ``C:\\xmllint``"
msgstr ""

#: ../../source/Installation/Alternatives/Windows-Development-Setup.rst:61
msgid "Add ``C:\\xmllint\\bin`` to the ``PATH``."
msgstr ""

#: ../../source/Installation/Alternatives/Windows-Development-Setup.rst:64 ../../source/Installation/Alternatives/macOS-Development-Setup.rst:112
msgid "Get the ROS 2 code"
msgstr ""

#: ../../source/Installation/Alternatives/Windows-Development-Setup.rst:66
msgid "Now that we have the development tools we can get the ROS 2 source code."
msgstr ""

#: ../../source/Installation/Alternatives/Windows-Development-Setup.rst:68
msgid "First setup a development folder, for example ``C:\\humble``:"
msgstr ""

#: ../../source/Installation/Alternatives/Windows-Development-Setup.rst:72
msgid "It is very important that the chosen path is short, due to the short default Windows path limits (260 characters). To allow longer paths, see https://learn.microsoft.com/en-us/windows/win32/fileio/maximum-file-path-limitation?tabs=registry."
msgstr ""

#: ../../source/Installation/Alternatives/Windows-Development-Setup.rst:80
msgid "Get the ``ros2.repos`` file which defines the repositories to clone from:"
msgstr ""

#: ../../source/Installation/Alternatives/Windows-Development-Setup.rst:89
msgid "Fast DDS is bundled with the ROS 2 source and will always be built unless you put an ``COLCON_IGNORE`` file in the ``src\\eProsima`` folder."
msgstr ""

#: ../../source/Installation/Alternatives/Windows-Development-Setup.rst:94 ../../source/Installation/Alternatives/macOS-Development-Setup.rst:128
msgid "Build the ROS 2 code"
msgstr ""

#: ../../source/Installation/Alternatives/Windows-Development-Setup.rst:98
msgid "To build ROS 2 you will need a Visual Studio Command Prompt (\"x64 Native Tools Command Prompt for VS 2019\") running as Administrator."
msgstr ""

#: ../../source/Installation/Alternatives/Windows-Development-Setup.rst:100
msgid "To build the ``\\humble`` folder tree:"
msgstr ""

#: ../../source/Installation/Alternatives/Windows-Development-Setup.rst:108
msgid "We're using ``--merge-install`` here to avoid a ``PATH`` variable that is too long at the end of the build. If you're adapting these instructions to build a smaller workspace then you might be able to use the default behavior which is isolated install, i.e. where each package is installed to a different folder."
msgstr ""

#: ../../source/Installation/Alternatives/Windows-Development-Setup.rst:113
msgid "If you are doing a debug build use ``python_d path\\to\\colcon_executable`` ``colcon``. See `Extra stuff for debug mode`_ for more info on running Python code in debug builds on Windows."
msgstr ""

#: ../../source/Installation/Alternatives/Windows-Development-Setup.rst:119 ../../source/Installation/Windows-Install-Binary.rst:45
msgid "Start a command shell and source the ROS 2 setup file to set up the workspace:"
msgstr ""

#: ../../source/Installation/Alternatives/Windows-Development-Setup.rst:125 ../../source/Installation/Alternatives/macOS-Development-Setup.rst:149
msgid "This will automatically set up the environment for any DDS vendors that support was built for."
msgstr ""

#: ../../source/Installation/Alternatives/Windows-Development-Setup.rst:127 ../../source/Installation/Windows-Install-Binary.rst:51
msgid "It is normal that the previous command, if nothing else went wrong, outputs \"The system cannot find the path specified.\" exactly once."
msgstr ""

#: ../../source/Installation/Alternatives/Windows-Development-Setup.rst:130
msgid "Test and run"
msgstr ""

#: ../../source/Installation/Alternatives/Windows-Development-Setup.rst:132
msgid "Note that the first time you run any executable you will have to allow access to the network through a Windows Firewall popup."
msgstr ""

#: ../../source/Installation/Alternatives/Windows-Development-Setup.rst:134
msgid "You can run the tests using this command:"
msgstr ""

#: ../../source/Installation/Alternatives/Windows-Development-Setup.rst:142
msgid "``--merge-install`` should only be used if it was also used in the build step."
msgstr ""

#: ../../source/Installation/Alternatives/Windows-Development-Setup.rst:144
msgid "Afterwards you can get a summary of the tests using this command:"
msgstr ""

#: ../../source/Installation/Alternatives/Windows-Development-Setup.rst:150
msgid "To run the examples, first open a clean new ``cmd.exe`` and set up the workspace by sourcing the ``local_setup.bat`` file. Then, run a C++ ``talker``\\ :"
msgstr ""

#: ../../source/Installation/Alternatives/Windows-Development-Setup.rst:158
msgid "In a separate shell you can do the same, but instead run a Python ``listener``\\ :"
msgstr ""

#: ../../source/Installation/Alternatives/Windows-Development-Setup.rst:172
msgid "It is not recommended to build in the same cmd prompt that you've sourced the ``local_setup.bat``."
msgstr ""

#: ../../source/Installation/Alternatives/Windows-Development-Setup.rst:185
msgid "Extra stuff for Debug mode"
msgstr ""

#: ../../source/Installation/Alternatives/Windows-Development-Setup.rst:187
msgid "If you want to be able to run all the tests in Debug mode, you'll need to install a few more things:"
msgstr ""

#: ../../source/Installation/Alternatives/Windows-Development-Setup.rst:190
msgid "To be able to extract the Python source tarball, you can use PeaZip:"
msgstr ""

#: ../../source/Installation/Alternatives/Windows-Development-Setup.rst:197
msgid "You'll also need SVN, since some of the Python source-build dependencies are checked out via SVN:"
msgstr ""

#: ../../source/Installation/Alternatives/Windows-Development-Setup.rst:204
msgid "You'll need to quit and restart the command prompt after installing the above."
msgstr ""

#: ../../source/Installation/Alternatives/Windows-Development-Setup.rst:205
msgid "Get and extract the Python 3.8.3 source from the ``tgz``:"
msgstr ""

#: ../../source/Installation/Alternatives/Windows-Development-Setup.rst:207
msgid "https://www.python.org/ftp/python/3.8.3/Python-3.8.3.tgz"
msgstr ""

#: ../../source/Installation/Alternatives/Windows-Development-Setup.rst:208
msgid "To keep these instructions concise, please extract it to ``C:\\dev\\Python-3.8.3``"
msgstr ""

#: ../../source/Installation/Alternatives/Windows-Development-Setup.rst:210
msgid "Now, build the Python source in debug mode from a Visual Studio command prompt:"
msgstr ""

#: ../../source/Installation/Alternatives/Windows-Development-Setup.rst:219
msgid "Finally, copy the build products into the Python38 installation directories, next to the Release-mode Python executable and DLL's:"
msgstr ""

#: ../../source/Installation/Alternatives/Windows-Development-Setup.rst:233
msgid "Now, from a fresh command prompt, make sure that ``python_d`` works:"
msgstr ""

#: ../../source/Installation/Alternatives/Windows-Development-Setup.rst:239
msgid "Once you have verified the operation of ``python_d``, it is necessary to reinstall a few dependencies with the debug-enabled libraries:"
msgstr ""

#: ../../source/Installation/Alternatives/Windows-Development-Setup.rst:246
msgid "To verify the installation of these dependencies:"
msgstr ""

#: ../../source/Installation/Alternatives/Windows-Development-Setup.rst:252
msgid "When you wish to return to building release binaries, it is necessary to uninstall the debug variants and use the release variants:"
msgstr ""

#: ../../source/Installation/Alternatives/Windows-Development-Setup.rst:259
msgid "To create executables python scripts(.exe), python_d should be used to invoke colcon"
msgstr ""

#: ../../source/Installation/Alternatives/Windows-Development-Setup.rst:265
msgid "Hooray, you're done!"
msgstr ""

#: ../../source/Installation/Alternatives/Windows-Development-Setup.rst:275 ../../source/Installation/Windows-Install-Binary.rst:85
msgid "Troubleshooting techniques can be found :ref:`here <windows-troubleshooting>`."
msgstr ""

#: ../../source/Installation/Alternatives/macOS-Development-Setup.rst:4
msgid "macOS (source)"
msgstr ""

#: ../../source/Installation/Alternatives/macOS-Development-Setup.rst:13
msgid "We currently support macOS Mojave (10.14)."
msgstr ""

#: ../../source/Installation/Alternatives/macOS-Development-Setup.rst:16
msgid "Install prerequisites"
msgstr ""

#: ../../source/Installation/Alternatives/macOS-Development-Setup.rst:18
msgid "You need the following things installed to build ROS 2:"
msgstr ""

#: ../../source/Installation/Alternatives/macOS-Development-Setup.rst:22
msgid "**Xcode**"
msgstr ""

#: ../../source/Installation/Alternatives/macOS-Development-Setup.rst:24
msgid "If you don't already have it installed, install [Xcode](https://apps.apple.com/app/xcode/id497799835)."
msgstr ""

#: ../../source/Installation/Alternatives/macOS-Development-Setup.rst:25
msgid "Note: Versions of Xcode later than 11.3.1 can no longer be installed on macOS Mojave, so you will need to install an older version manually, see: https://stackoverflow.com/a/61046761"
msgstr ""

#: ../../source/Installation/Alternatives/macOS-Development-Setup.rst:26
msgid "Also, if you don't already have it installed, install the Command Line Tools:"
msgstr ""

#: ../../source/Installation/Alternatives/macOS-Development-Setup.rst:38
msgid "**brew** *(needed to install more stuff; you probably already have this)*:"
msgstr ""

#: ../../source/Installation/Alternatives/macOS-Development-Setup.rst:41
msgid "Follow installation instructions at http://brew.sh/"
msgstr ""

#: ../../source/Installation/Alternatives/macOS-Development-Setup.rst:43
msgid "*Optional*: Check that ``brew`` is happy with your system configuration by running:"
msgstr ""

#: ../../source/Installation/Alternatives/macOS-Development-Setup.rst:49
msgid "Fix any problems that it identifies."
msgstr ""

#: ../../source/Installation/Alternatives/macOS-Development-Setup.rst:52
msgid "Use ``brew`` to install more stuff:"
msgstr ""

#: ../../source/Installation/Alternatives/macOS-Development-Setup.rst:61
msgid "Setup some environment variables:"
msgstr ""

#: ../../source/Installation/Alternatives/macOS-Development-Setup.rst:74
msgid "Use ``python3 -m pip`` (just ``pip`` may install Python3 or Python2) to install more stuff:"
msgstr ""

#: ../../source/Installation/Alternatives/macOS-Development-Setup.rst:87
msgid "Please ensure that the ``$PATH`` environment variable contains the install location of the binaries (``$(brew --prefix)/bin``)"
msgstr ""

#: ../../source/Installation/Alternatives/macOS-Development-Setup.rst:90
msgid "*Optional*: if you want to build the ROS 1<->2 bridge, then you must also install ROS 1:"
msgstr ""

#: ../../source/Installation/Alternatives/macOS-Development-Setup.rst:93
msgid "Start with the normal install instructions: http://wiki.ros.org/kinetic/Installation/OSX/Homebrew/Source"
msgstr ""

#: ../../source/Installation/Alternatives/macOS-Development-Setup.rst:95
msgid "When you get to the step where you call ``rosinstall_generator`` to get the source code, here's an alternate invocation that brings in just the minimum required to produce a useful bridge:"
msgstr ""

#: ../../source/Installation/Alternatives/macOS-Development-Setup.rst:103
msgid "Otherwise, just follow the normal instructions, then source the resulting ``install_isolated/setup.bash`` before proceeding here to build ROS 2."
msgstr ""

#: ../../source/Installation/Alternatives/macOS-Development-Setup.rst:106
msgid "Disable System Integrity Protection (SIP)"
msgstr ""

#: ../../source/Installation/Alternatives/macOS-Development-Setup.rst:108
msgid "macOS/OS X versions >=10.11 have System Integrity Protection enabled by default. So that SIP doesn't prevent processes from inheriting dynamic linker environment variables, such as ``DYLD_LIBRARY_PATH``, you'll need to disable it `following these instructions <https://developer.apple.com/library/content/documentation/Security/Conceptual/System_Integrity_Protection_Guide/ConfiguringSystemIntegrityProtection/ConfiguringSystemIntegrityProtection.html>`__."
msgstr ""

#: ../../source/Installation/Alternatives/macOS-Development-Setup.rst:123
msgid "Install additional DDS vendors (optional)"
msgstr ""

#: ../../source/Installation/Alternatives/macOS-Development-Setup.rst:130
msgid "Run the ``colcon`` tool to build everything (more on using ``colcon`` in :doc:`this tutorial <../../Tutorials/Beginner-Client-Libraries/Colcon-Tutorial>`):"
msgstr ""

#: ../../source/Installation/Alternatives/macOS-Development-Setup.rst:137
msgid "Note: due to an unresolved issue with SIP, Qt@5, and PyQt5, we need to disable ``python_qt_binding`` to have the build succeed. This will be removed when the issue is resolved, see: https://github.com/ros-visualization/python_qt_binding/issues/103"
msgstr ""

#: ../../source/Installation/Alternatives/macOS-Development-Setup.rst:143
msgid "Source the ROS 2 setup file:"
msgstr ""

#: ../../source/Installation/Alternatives/macOS-Development-Setup.rst:154
msgid "In one terminal, set up the ROS 2 environment as described above and then run a C++ ``talker``:"
msgstr ""

#: ../../source/Installation/Alternatives/macOS-Development-Setup.rst:172
msgid "Continue with the `tutorials and demos <../../Tutorials>` to configure your environment, create your own workspace and packages, and learn ROS 2 core concepts."
msgstr ""

#: ../../source/Installation/Alternatives/macOS-Development-Setup.rst:191
msgid "Troubleshooting techniques can be found :ref:`here <macOS-troubleshooting>`."
msgstr ""

#: ../../source/Installation/DDS-Implementations.rst:2
msgid "DDS implementations"
msgstr ""

#: ../../source/Installation/DDS-Implementations.rst:4
msgid "By default, ROS 2 uses DDS as its `middleware <https://design.ros2.org/articles/ros_on_dds.html>`__. It is compatible with multiple DDS or RTPS (the DDS wire protocol) vendors. There is currently support for eProsima's Fast DDS, RTI's Connext DDS, Eclipse Cyclone DDS, and GurumNetworks GurumDDS. See https://ros.org/reps/rep-2000.html for supported DDS vendors by distribution."
msgstr ""

#: ../../source/Installation/DDS-Implementations.rst:9
msgid "The default DDS vendor is eProsima's Fast DDS."
msgstr ""

#: ../../source/Installation/DDS-Implementations.rst:11
msgid ":doc:`Working with Eclipse Cyclone DDS <DDS-Implementations/Working-with-Eclipse-CycloneDDS>` explains how to utilize Cyclone DDS."
msgstr ""

#: ../../source/Installation/DDS-Implementations.rst:12
msgid ":doc:`Working with eProsima Fast DDS <DDS-Implementations/Working-with-eProsima-Fast-DDS>` explains how to utilize Fast DDS."
msgstr ""

#: ../../source/Installation/DDS-Implementations.rst:13
msgid ":doc:`Working with GurumNetworks GurumDDS <DDS-Implementations/Working-with-GurumNetworks-GurumDDS>` explains how to utilize GurumDDS."
msgstr ""

#: ../../source/Installation/DDS-Implementations.rst:21
msgid "If you would like to use one of the other vendors you will need to install their software separately before building. The ROS 2 build will automatically build support for vendors that have been installed and sourced correctly."
msgstr ""

#: ../../source/Installation/DDS-Implementations.rst:24
msgid "Once you've installed a new DDS vendor, you can change the vendor used at runtime: :doc:`Working with Multiple RMW Implementations <../How-To-Guides/Working-with-multiple-RMW-implementations>`."
msgstr ""

#: ../../source/Installation/DDS-Implementations.rst:26
msgid "Detailed instructions for installing other DDS vendors are provided below."
msgstr ""

#: ../../source/Installation/DDS-Implementations.rst:30
msgid "Platforms / Installation types"
msgstr ""

#: ../../source/Installation/DDS-Implementations.rst:33
msgid "Ubuntu Linux source install"
msgstr ""

#: ../../source/Installation/DDS-Implementations.rst:36 ../../source/Installation/DDS-Implementations.rst:88
msgid "RTI Connext (version 6.0.1, amd64 only)"
msgstr ""

#: ../../source/Installation/DDS-Implementations.rst:39
msgid "Debian packages provided in the ROS 2 apt repositories"
msgstr ""

#: ../../source/Installation/DDS-Implementations.rst:41
msgid "You can install a Debian package of RTI Connext available on the ROS 2 apt repositories. You will need to accept a license from RTI."
msgstr ""

#: ../../source/Installation/DDS-Implementations.rst:48 ../../source/Installation/DDS-Implementations.rst:76
msgid "Source the setup file to set the ``NDDSHOME`` environment variable."
msgstr ""

#: ../../source/Installation/DDS-Implementations.rst:54
msgid "Note: when using ``zsh`` you need to be in the directory of the script when sourcing it to have it work properly"
msgstr ""

#: ../../source/Installation/DDS-Implementations.rst:56 ../../source/Installation/DDS-Implementations.rst:82
msgid "Now you can build as normal and support for RTI will be built as well."
msgstr ""

#: ../../source/Installation/DDS-Implementations.rst:59
msgid "Official binary packages from RTI"
msgstr ""

#: ../../source/Installation/DDS-Implementations.rst:61
msgid "You can install the Connext 6.0.1 package for Linux provided by RTI, via options available for :doc:`university, purchase or evaluation <DDS-Implementations/Install-Connext-University-Eval>`"
msgstr ""

#: ../../source/Installation/DDS-Implementations.rst:63
msgid "After downloading, use ``chmod +x`` on the ``.run`` executable and then execute it. Note that if you're installing to a system directory use ``sudo`` as well."
msgstr ""

#: ../../source/Installation/DDS-Implementations.rst:66
msgid "The default location is ``~/rti_connext_dds-6.0.1``"
msgstr ""

#: ../../source/Installation/DDS-Implementations.rst:68
msgid "After installation, run RTI launcher and point it to your license file (obtained from RTI)."
msgstr ""

#: ../../source/Installation/DDS-Implementations.rst:70
msgid "Add the following line to your ``.bashrc`` file pointing to your copy of the license."
msgstr ""

#: ../../source/Installation/DDS-Implementations.rst:85
msgid "Ubuntu Linux binary install"
msgstr ""

#: ../../source/Installation/DDS-Implementations.rst:90
msgid "To use RTI Connext DDS there are full-suite install options available for :doc:`university, purchase or evaluation <DDS-Implementations/Install-Connext-University-Eval>` or you can install a libraries-only Debian package of RTI Connext 6.0.1, available from the OSRF Apt repository under a `non-commercial license <https://www.rti.com/ncl>`__."
msgstr ""

#: ../../source/Installation/DDS-Implementations.rst:94
msgid "To install the libs-only Debian package:"
msgstr ""

#: ../../source/Installation/DDS-Implementations.rst:100
msgid "You will need to accept a license agreement from RTI, and will find an 'rti_license.dat file in the installation."
msgstr ""

#: ../../source/Installation/DDS-Implementations.rst:102
msgid "Add the following line to your ``.bashrc`` file pointing to your copy of the license (and source it)."
msgstr ""

#: ../../source/Installation/DDS-Implementations.rst:108
msgid "All options need you to source the setup file to set the ``NDDSHOME`` environment variable:"
msgstr ""

#: ../../source/Installation/DDS-Implementations.rst:114
msgid "Note: the above may need modification to match your RTI installation location"
msgstr ""

#: ../../source/Installation/DDS-Implementations.rst:116 ../../source/Installation/DDS-Implementations.rst:138 ../../source/Installation/DDS-Implementations.rst:159 ../../source/Installation/DDS-Implementations.rst:180 ../../source/Installation/DDS-Implementations.rst:199
msgid "If you want to install the Connext DDS-Security plugins please refer to :doc:`this page <DDS-Implementations/Install-Connext-Security-Plugins>`."
msgstr ""

#: ../../source/Installation/DDS-Implementations.rst:119
msgid "OSX source install"
msgstr ""

#: ../../source/Installation/DDS-Implementations.rst:122
msgid "RTI Connext (6.0.1)"
msgstr ""

#: ../../source/Installation/DDS-Implementations.rst:124 ../../source/Installation/DDS-Implementations.rst:167
msgid "If you would like to also build against RTI Connext DDS there are options available for :doc:`university, purchase or evaluation <DDS-Implementations/Install-Connext-University-Eval>`"
msgstr ""

#: ../../source/Installation/DDS-Implementations.rst:126
msgid "You also need a Java runtime installed to run the RTI code generator, which you can get `here <https://support.apple.com/kb/DL1572?locale=en_US>`__."
msgstr ""

#: ../../source/Installation/DDS-Implementations.rst:128 ../../source/Installation/DDS-Implementations.rst:149 ../../source/Installation/DDS-Implementations.rst:191
msgid "After installing, run RTI launcher and point it to your license file."
msgstr ""

#: ../../source/Installation/DDS-Implementations.rst:130 ../../source/Installation/DDS-Implementations.rst:151
msgid "Source the setup file to set the ``NDDSHOME`` environment variable before building your workspace."
msgstr ""

#: ../../source/Installation/DDS-Implementations.rst:136
msgid "You may need to increase shared memory resources following https://community.rti.com/kb/osx510"
msgstr ""

#: ../../source/Installation/DDS-Implementations.rst:141
msgid "OSX binary install"
msgstr ""

#: ../../source/Installation/DDS-Implementations.rst:145
msgid "Enable Connext support"
msgstr ""

#: ../../source/Installation/DDS-Implementations.rst:147 ../../source/Installation/DDS-Implementations.rst:189
msgid "To use RTI Connext DDS there are options available for :doc:`university, purchase or evaluation <DDS-Implementations/Install-Connext-University-Eval>`"
msgstr ""

#: ../../source/Installation/DDS-Implementations.rst:157
msgid "You may need to increase shared memory resources following https://community.rti.com/kb/osx510."
msgstr ""

#: ../../source/Installation/DDS-Implementations.rst:162
msgid "Windows source install"
msgstr ""

#: ../../source/Installation/DDS-Implementations.rst:165
msgid "RTI Connext 6.0.1"
msgstr ""

#: ../../source/Installation/DDS-Implementations.rst:169
msgid "After installing, use the RTI Launcher to load your license file."
msgstr ""

#: ../../source/Installation/DDS-Implementations.rst:171
msgid "Then before building ROS 2, set up the Connext environment:"
msgstr ""

#: ../../source/Installation/DDS-Implementations.rst:177
msgid "Note that this path might need to be slightly altered depending on where you selected to install RTI Connext DDS, and which version of Visual Studio was selected. The path above is the current default path as of version 6.0.1, but will change as the version numbers increment in the future."
msgstr ""

#: ../../source/Installation/DDS-Implementations.rst:183
msgid "Windows binary install"
msgstr ""

#: ../../source/Installation/DDS-Implementations.rst:187
msgid "RTI Connext"
msgstr ""

#: ../../source/Installation/DDS-Implementations.rst:193
msgid "Then before using ROS 2, set up the Connext environment:"
msgstr ""

#: ../../source/Installation/DDS-Implementations/Install-Connext-Security-Plugins.rst:2
msgid "Connext security plugins"
msgstr ""

#: ../../source/Installation/DDS-Implementations/Install-Connext-Security-Plugins.rst:4
msgid "The Connext DDS Libraries are included with ROS 2 under a `non-commercial license <https://www.rti.com/ncl>`__ and do not include the security plug-in libraries. These libraries are available in the commercial, university and research license versions of RTI Connext DDS Pro, which is bundled with tools for system debugging, monitoring, record/replay, etc."
msgstr ""

#: ../../source/Installation/DDS-Implementations/Install-Connext-Security-Plugins.rst:11
msgid "The Connext DDS Evaluation Version (6.0.1) includes the security plugins, and can be downloaded via options available for :doc:`university, purchase or evaluation <Install-Connext-University-Eval>`."
msgstr ""

#: ../../source/Installation/DDS-Implementations/Install-Connext-Security-Plugins.rst:13
msgid "A video walk-thru of this installation (tools and security plug-ins) is available `here <https://www.rti.com/gettingstarted/installwindows_secure>`__ at the RTI website. The steps are:"
msgstr ""

#: ../../source/Installation/DDS-Implementations/Install-Connext-Security-Plugins.rst:18
msgid "**Install Connext DDS Pro (Host)** This is a host-specific installer application (for Windows, Linux, MacOS) to install a 'Host' bundle which includes the Launcher, tools, and other software services. At the end of the installation, the RTI 'Launcher' program will be started. The Launcher is used to install target libraries, security plugins, and other layered services."
msgstr ""

#: ../../source/Installation/DDS-Implementations/Install-Connext-Security-Plugins.rst:23
msgid "**Use the Package Installer in Launcher**"
msgstr ""

#: ../../source/Installation/DDS-Implementations/Install-Connext-Security-Plugins.rst:28
msgid "Launcher Image"
msgstr ""

#: ../../source/Installation/DDS-Implementations/Install-Connext-Security-Plugins.rst:30
msgid "The 'RTI Package Installer' is used to install '.rtipkg' files -- target libraries, security plug-ins, etc. Open the Package Installer and select all of the .rtipkg files that were included in the Connext DDS Secure bundle for installation:"
msgstr ""

#: ../../source/Installation/DDS-Implementations/Install-Connext-Security-Plugins.rst:35
msgid "Target Libraries - such as: rti\\_connext\\_dds-[version]-pro-target-[toolchain].rtipkg"
msgstr ""

#: ../../source/Installation/DDS-Implementations/Install-Connext-Security-Plugins.rst:36
msgid "Security Plugin Host - such as: rti\\_security\\_plugins-[version]-host-[toolchain].rtipkg"
msgstr ""

#: ../../source/Installation/DDS-Implementations/Install-Connext-Security-Plugins.rst:37
msgid "Security Plugin Target - such as: rti\\_security\\_plugins-[version]-target-[toolchain].rtipkg"
msgstr ""

#: ../../source/Installation/DDS-Implementations/Install-Connext-Security-Plugins.rst:38
msgid "OpenSSL Host - such as: openssl-1.0.2x-[version]-host-[toolchain].rtipkg"
msgstr ""

#: ../../source/Installation/DDS-Implementations/Install-Connext-Security-Plugins.rst:40
msgid "**Extract and Install OpenSSL** This is included as an archive (.zip or otherwise) and can be simply extracted and copied to a convenient location on your host computer. As a suggestion, this could also be installed into the 'rti\\_connext\\_dds-[version]' directory in your home directory space (this was created during installation of the RTI host tools). Note: this directory location may need to be placed in your PATH environment variable. See the `RTI Security Plugins Getting Started Guide <https://community.rti.com/static/documentation/connext-dds/6.0.1/doc/manuals/connext_dds/dds_security/RTI_SecurityPlugins_GettingStarted.pdf>`__ for more information."
msgstr ""

#: ../../source/Installation/DDS-Implementations/Install-Connext-Security-Plugins.rst:50
msgid "Installation complete."
msgstr ""

#: ../../source/Installation/DDS-Implementations/Install-Connext-University-Eval.rst:2
msgid "RTI Connext DDS"
msgstr ""

#: ../../source/Installation/DDS-Implementations/Install-Connext-University-Eval.rst:4
msgid "A libraries-only version of RTI Connext DDS 6.0.1 may be installed per the :doc:`installation instructions <../../Installation>` for Debian/Ubuntu Linux (amd64) platforms only, under a `non-commercial license <https://www.rti.com/ncl>`__."
msgstr ""

#: ../../source/Installation/DDS-Implementations/Install-Connext-University-Eval.rst:7
msgid "A full-suite installation of RTI Connext DDS is available for many additional platforms, for universities, evaluation, or purchase. This installation includes diagnostic tools, layered services, and security.  See below for installation details."
msgstr ""

#: ../../source/Installation/DDS-Implementations/Install-Connext-University-Eval.rst:11
msgid "RTI University Program"
msgstr ""

#: ../../source/Installation/DDS-Implementations/Install-Connext-University-Eval.rst:13
msgid "University researchers and classroom users may be eligible for a free academic license through the `RTI University Program <https://www.rti.com/free-trial/university-program>`__. This includes a one-year (renewable) license to the unabridged version of Connext DDS Secure, which includes diagnostic tools and layered services. The university license application can be found `here <https://www.rti.com/free-trial/university-program>`__."
msgstr ""

#: ../../source/Installation/DDS-Implementations/Install-Connext-University-Eval.rst:19
msgid "RTI Connext DDS Evaluation"
msgstr ""

#: ../../source/Installation/DDS-Implementations/Install-Connext-University-Eval.rst:25
msgid "To install RTI Connext DDS **version 6.0.1** Evalution:"
msgstr ""

#: ../../source/Installation/DDS-Implementations/Install-Connext-University-Eval.rst:22
msgid "Visit the `RTI Free Trial (6.0.1) site <https://www.rti.com/free-trial>`__."
msgstr ""

#: ../../source/Installation/DDS-Implementations/Install-Connext-University-Eval.rst:23
msgid "Download the version(s) to match your environment."
msgstr ""

#: ../../source/Installation/DDS-Implementations/Install-Connext-University-Eval.rst:24
msgid "Contact license@rti.com for an evaluation license."
msgstr ""

#: ../../source/Installation/DDS-Implementations/Install-Connext-University-Eval.rst:25
msgid "Install RTI Connext 6.0.1 by running the installation program.  When finished, it will run the RTI Launcher."
msgstr ""

#: ../../source/Installation/DDS-Implementations/Install-Connext-University-Eval.rst:26
msgid "Use the RTI Launcher to install the license file (rti_license.dat) if needed.  The launcher may also be used to launch the diagnostic tools and services."
msgstr ""

#: ../../source/Installation/DDS-Implementations/Working-with-Eclipse-CycloneDDS.rst:6
msgid "Eclipse Cyclone DDS"
msgstr ""

#: ../../source/Installation/DDS-Implementations/Working-with-Eclipse-CycloneDDS.rst:8
msgid "Eclipse Cyclone DDS is a very performant and robust open-source DDS implementation. Cyclone DDS is developed completely in the open as an Eclipse IoT project. See also: https://projects.eclipse.org/projects/iot.cyclonedds"
msgstr ""

#: ../../source/Installation/DDS-Implementations/Working-with-Eclipse-CycloneDDS.rst:14 ../../source/Installation/DDS-Implementations/Working-with-GurumNetworks-GurumDDS.rst:13 ../../source/Installation/DDS-Implementations/Working-with-eProsima-Fast-DDS.rst:9
msgid "Prerequisites"
msgstr ""

#: ../../source/Installation/DDS-Implementations/Working-with-Eclipse-CycloneDDS.rst:16 ../../source/Installation/DDS-Implementations/Working-with-eProsima-Fast-DDS.rst:11
msgid "Have `rosdep installed  <https://wiki.ros.org/rosdep#Installing_rosdep>`__"
msgstr ""

#: ../../source/Installation/DDS-Implementations/Working-with-Eclipse-CycloneDDS.rst:19 ../../source/Installation/DDS-Implementations/Working-with-GurumNetworks-GurumDDS.rst:38 ../../source/Installation/DDS-Implementations/Working-with-eProsima-Fast-DDS.rst:14
msgid "Install packages"
msgstr ""

#: ../../source/Installation/DDS-Implementations/Working-with-Eclipse-CycloneDDS.rst:21 ../../source/Installation/DDS-Implementations/Working-with-eProsima-Fast-DDS.rst:16
msgid "The easiest way is to install from ROS 2 apt repository."
msgstr ""

#: ../../source/Installation/DDS-Implementations/Working-with-Eclipse-CycloneDDS.rst:28 ../../source/Installation/DDS-Implementations/Working-with-GurumNetworks-GurumDDS.rst:48 ../../source/Installation/DDS-Implementations/Working-with-eProsima-Fast-DDS.rst:23
msgid "Build from source code"
msgstr ""

#: ../../source/Installation/DDS-Implementations/Working-with-Eclipse-CycloneDDS.rst:30 ../../source/Installation/DDS-Implementations/Working-with-GurumNetworks-GurumDDS.rst:50 ../../source/Installation/DDS-Implementations/Working-with-eProsima-Fast-DDS.rst:25
msgid "Building from source code is also another way to install."
msgstr ""

#: ../../source/Installation/DDS-Implementations/Working-with-Eclipse-CycloneDDS.rst:32
msgid "First, clone Cyclone DDS and rmw_cyclonedds in the ROS 2 workspace source directory."
msgstr ""

#: ../../source/Installation/DDS-Implementations/Working-with-Eclipse-CycloneDDS.rst:40
msgid "Then, install necessary packages for Cyclone DDS."
msgstr ""

#: ../../source/Installation/DDS-Implementations/Working-with-Eclipse-CycloneDDS.rst:47 ../../source/Installation/DDS-Implementations/Working-with-GurumNetworks-GurumDDS.rst:66 ../../source/Installation/DDS-Implementations/Working-with-eProsima-Fast-DDS.rst:42
msgid "Finally, run colcon build."
msgstr ""

#: ../../source/Installation/DDS-Implementations/Working-with-Eclipse-CycloneDDS.rst:54
msgid "Switch to rmw_cyclonedds"
msgstr ""

#: ../../source/Installation/DDS-Implementations/Working-with-Eclipse-CycloneDDS.rst:56
msgid "Switch from other rmw to rmw_cyclonedds by specifying the environment variable."
msgstr ""

#: ../../source/Installation/DDS-Implementations/Working-with-Eclipse-CycloneDDS.rst:62 ../../source/Installation/DDS-Implementations/Working-with-GurumNetworks-GurumDDS.rst:81 ../../source/Installation/DDS-Implementations/Working-with-eProsima-Fast-DDS.rst:57
msgid "See also: :doc:`Working with multiple RMW implementations <../../How-To-Guides/Working-with-multiple-RMW-implementations>`"
msgstr ""

#: ../../source/Installation/DDS-Implementations/Working-with-Eclipse-CycloneDDS.rst:65 ../../source/Installation/DDS-Implementations/Working-with-GurumNetworks-GurumDDS.rst:84 ../../source/Installation/DDS-Implementations/Working-with-eProsima-Fast-DDS.rst:60
msgid "Run the talker and listener"
msgstr ""

#: ../../source/Installation/DDS-Implementations/Working-with-Eclipse-CycloneDDS.rst:67
msgid "Now run ``talker`` and ``listener`` to test Cyclone DDS."
msgstr ""

#: ../../source/Installation/DDS-Implementations/Working-with-GurumNetworks-GurumDDS.rst:6
msgid "GurumNetworks GurumDDS"
msgstr ""

#: ../../source/Installation/DDS-Implementations/Working-with-GurumNetworks-GurumDDS.rst:8
msgid "rmw_gurumdds is a implementation of the ROS middleware interface using GurumNetworks GurumDDS. More information about GurumDDS is available on our website: https://gurum.cc/index_eng"
msgstr ""

#: ../../source/Installation/DDS-Implementations/Working-with-GurumNetworks-GurumDDS.rst:15
msgid "The following description assumes that you have completed the 'Environment setup' process from the :doc:`Installing ROS 2 via Debian Packages <../Ubuntu-Install-Debians>` or from the :doc:`Building ROS 2 on Ubuntu Linux <../Alternatives/Ubuntu-Development-Setup>`."
msgstr ""

#: ../../source/Installation/DDS-Implementations/Working-with-GurumNetworks-GurumDDS.rst:19
msgid "rmw_gurumdds requires version of GurumDDS-2.8.x. Debian packages of GurumDDS are provided in the ROS 2 apt repositories on ubuntu. Windows binary installer of GurumDDS will be supported soon."
msgstr ""

#: ../../source/Installation/DDS-Implementations/Working-with-GurumNetworks-GurumDDS.rst:23
msgid "GurumDDS requires a license. See the next page: https://gurum.cc/free_trial_eng.html"
msgstr ""

#: ../../source/Installation/DDS-Implementations/Working-with-GurumNetworks-GurumDDS.rst:25
msgid "After requesting a trial license, please download the license from the license homepage. After getting a license, move it to the following location."
msgstr ""

#: ../../source/Installation/DDS-Implementations/Working-with-GurumNetworks-GurumDDS.rst:29
msgid "DDS Version"
msgstr ""

#: ../../source/Installation/DDS-Implementations/Working-with-GurumNetworks-GurumDDS.rst:29
msgid "License Location"
msgstr ""

#: ../../source/Installation/DDS-Implementations/Working-with-GurumNetworks-GurumDDS.rst:31
msgid "<= 2.7.2860"
msgstr ""

#: ../../source/Installation/DDS-Implementations/Working-with-GurumNetworks-GurumDDS.rst:31
msgid "/etc/flame"
msgstr ""

#: ../../source/Installation/DDS-Implementations/Working-with-GurumNetworks-GurumDDS.rst:32
msgid ">= 2.7.2861"
msgstr ""

#: ../../source/Installation/DDS-Implementations/Working-with-GurumNetworks-GurumDDS.rst:32 ../../source/Installation/DDS-Implementations/Working-with-GurumNetworks-GurumDDS.rst:33
msgid "/etc/gurumnet"
msgstr ""

#: ../../source/Installation/DDS-Implementations/Working-with-GurumNetworks-GurumDDS.rst:33
msgid "2.8.x"
msgstr ""

#: ../../source/Installation/DDS-Implementations/Working-with-GurumNetworks-GurumDDS.rst:40
msgid "The easiest way is to install from ROS 2 apt repository. When ros-humble-rmw-gurumdds-cpp is installed, gurumdds-2.8 is also installed."
msgstr ""

#: ../../source/Installation/DDS-Implementations/Working-with-GurumNetworks-GurumDDS.rst:52
msgid "First, clone rmw_gurumdds in the ROS 2 workspace source directory."
msgstr ""

#: ../../source/Installation/DDS-Implementations/Working-with-GurumNetworks-GurumDDS.rst:59
msgid "Then, install necessary packages for GurumDDS."
msgstr ""

#: ../../source/Installation/DDS-Implementations/Working-with-GurumNetworks-GurumDDS.rst:73
msgid "Switch to rmw_gurumdds"
msgstr ""

#: ../../source/Installation/DDS-Implementations/Working-with-GurumNetworks-GurumDDS.rst:75
msgid "Switch from other rmw to rmw_gurumdds by specifying the environment variable."
msgstr ""

#: ../../source/Installation/DDS-Implementations/Working-with-GurumNetworks-GurumDDS.rst:86
msgid "Now run ``talker`` and ``listener`` to test GurumDDS. Don't forget to set up environment by setup script."
msgstr ""

#: ../../source/Installation/DDS-Implementations/Working-with-eProsima-Fast-DDS.rst:2
msgid "eProsima Fast DDS"
msgstr ""

#: ../../source/Installation/DDS-Implementations/Working-with-eProsima-Fast-DDS.rst:4
msgid "eProsima Fast DDS is a complete open-source DDS implementation for real time embedded architectures and operating systems. See also: https://www.eprosima.com/index.php/products-all/eprosima-fast-dds"
msgstr ""

#: ../../source/Installation/DDS-Implementations/Working-with-eProsima-Fast-DDS.rst:27
msgid "First, clone Fast DDS and rmw_fastrtps in the ROS 2 workspace source directory."
msgstr ""

#: ../../source/Installation/DDS-Implementations/Working-with-eProsima-Fast-DDS.rst:35
msgid "Then, install necessary packages for Fast DDS."
msgstr ""

#: ../../source/Installation/DDS-Implementations/Working-with-eProsima-Fast-DDS.rst:49
msgid "Switch to rmw_fastrtps"
msgstr ""

#: ../../source/Installation/DDS-Implementations/Working-with-eProsima-Fast-DDS.rst:51
msgid "The eProsima Fast DDS RMW can be selected by specifying the environment variable:"
msgstr ""

#: ../../source/Installation/DDS-Implementations/Working-with-eProsima-Fast-DDS.rst:62
msgid "Now run ``talker`` and ``listener`` to test Fast DDS."
msgstr ""

#: ../../source/Installation/Maintaining-a-Source-Checkout.rst:4
msgid "Maintain source checkout"
msgstr ""

#: ../../source/Installation/Maintaining-a-Source-Checkout.rst:10
msgid "For instructions on maintaining a source checkout of the **latest development version** of ROS 2, refer to `Maintaining a source checkout of ROS 2 Rolling <../../rolling/Installation/Maintaining-a-Source-Checkout.html>`__"
msgstr ""

#: ../../source/Installation/Maintaining-a-Source-Checkout.rst:17
msgid "If you have installed ROS 2 from source, there may have been changes made to the source code since the time that you checked it out. To keep your source checkout up to date, you will have to periodically update your ``ros2.repos`` file, download the latest sources, and rebuild your workspace."
msgstr ""

#: ../../source/Installation/Maintaining-a-Source-Checkout.rst:21
msgid "Update your repository list"
msgstr ""

#: ../../source/Installation/Maintaining-a-Source-Checkout.rst:23
msgid "Each ROS 2 release includes a ``ros2.repos`` file that contains the list of repositories and their version for that release."
msgstr ""

#: ../../source/Installation/Maintaining-a-Source-Checkout.rst:27
msgid "Latest ROS 2 Humble branches"
msgstr ""

#: ../../source/Installation/Maintaining-a-Source-Checkout.rst:29
msgid "If you wish to checkout the latest code for ROS 2 Humble, you can get the relevant repository list by running:"
msgstr ""

#: ../../source/Installation/Maintaining-a-Source-Checkout.rst:33 ../../source/Installation/Maintaining-a-Source-Checkout.rst:80 ../../source/Installation/Maintaining-a-Source-Checkout.rst:123
msgid "Linux"
msgstr ""

#: ../../source/Installation/Maintaining-a-Source-Checkout.rst:41 ../../source/Installation/Maintaining-a-Source-Checkout.rst:87 ../../source/Installation/Maintaining-a-Source-Checkout.rst:130
msgid "macOS"
msgstr ""

#: ../../source/Installation/Maintaining-a-Source-Checkout.rst:49 ../../source/Installation/Maintaining-a-Source-Checkout.rst:94 ../../source/Installation/Maintaining-a-Source-Checkout.rst:137 ../../source/Installation/Testing.rst:92
msgid "Windows"
msgstr ""

#: ../../source/Installation/Maintaining-a-Source-Checkout.rst:63
msgid "Update your repositories"
msgstr ""

#: ../../source/Installation/Maintaining-a-Source-Checkout.rst:65
msgid "You will notice that in the `ros2.repos <https://raw.githubusercontent.com/ros2/ros2/humble/ros2.repos>`__ file, each repository has a ``version`` associated with it that points to a particular commit hash, tag, or branch name. It is possible that these versions refer to new tags/branches that your local copy of the repositories will not recognize as they are out-of-date. Because of this, you should update the repositories that you have already checked out with the following command:"
msgstr ""

#: ../../source/Installation/Maintaining-a-Source-Checkout.rst:74
msgid "Download the new source code"
msgstr ""

#: ../../source/Installation/Maintaining-a-Source-Checkout.rst:76
msgid "You should now be able to download the sources associated with the new repository list with:"
msgstr ""

#: ../../source/Installation/Maintaining-a-Source-Checkout.rst:107
msgid "Rebuild your workspace"
msgstr ""

#: ../../source/Installation/Maintaining-a-Source-Checkout.rst:109
msgid "Now that the workspace is up to date with the latest sources, remove your previous install and rebuild your workspace with, for example:"
msgstr ""

#: ../../source/Installation/Maintaining-a-Source-Checkout.rst:116
msgid "Inspect your source checkout"
msgstr ""

#: ../../source/Installation/Maintaining-a-Source-Checkout.rst:118
msgid "During your development you may have deviated from the original state of your workspace from when you imported the repository list. If you wish to know the versions of the set of repositories in your workspace, you can export the information using the following command:"
msgstr ""

#: ../../source/Installation/Maintaining-a-Source-Checkout.rst:144
msgid "This ``my_ros2.repos`` file can then be shared with others so that they can reproduce the state of the repositories in your workspace."
msgstr ""

#: ../../source/Installation/RHEL-Install-RPMs.rst:2
msgid "RHEL (RPM packages)"
msgstr ""

#: ../../source/Installation/RHEL-Install-RPMs.rst:8
msgid "RPM packages for ROS 2 Humble Hawksbill are currently available for RHEL 8."
msgstr ""

#: ../../source/Installation/RHEL-Install-RPMs.rst:11 ../../source/Installation/Ubuntu-Install-Debians.rst:15
msgid "Resources"
msgstr ""

#: ../../source/Installation/RHEL-Install-RPMs.rst:13 ../../source/Installation/Ubuntu-Install-Debians.rst:17
msgid "Status Page:"
msgstr ""

#: ../../source/Installation/RHEL-Install-RPMs.rst:15
msgid "ROS 2 Humble (RHEL 8): `amd64 <http://repo.ros2.org/status_page/ros_humble_rhel.html>`__"
msgstr ""

#: ../../source/Installation/RHEL-Install-RPMs.rst:16 ../../source/Installation/Ubuntu-Install-Debians.rst:20
msgid "`Jenkins Instance <http://build.ros2.org/>`__"
msgstr ""

#: ../../source/Installation/RHEL-Install-RPMs.rst:17 ../../source/Installation/Ubuntu-Install-Debians.rst:21
msgid "`Repositories <http://repo.ros2.org>`__"
msgstr ""

#: ../../source/Installation/RHEL-Install-RPMs.rst:28 ../../source/Installation/Ubuntu-Install-Debians.rst:32
msgid "Setup Sources"
msgstr ""

#: ../../source/Installation/RHEL-Install-RPMs.rst:30
msgid "You will need to enable the EPEL repositories and the PowerTools repository:"
msgstr ""

#: ../../source/Installation/RHEL-Install-RPMs.rst:39
msgid "Next, download the ROS 2 .repo file:"
msgstr ""

#: ../../source/Installation/RHEL-Install-RPMs.rst:46
msgid "Then, update your metadata cache. DNF may prompt you to verify the GPG key, which should match the location ``https://raw.githubusercontent.com/ros/rosdistro/master/ros.asc``."
msgstr ""

#: ../../source/Installation/RHEL-Install-RPMs.rst:56 ../../source/Installation/Ubuntu-Install-Debians.rst:39
msgid "Install ROS 2 packages"
msgstr ""

#: ../../source/Installation/RHEL-Install-RPMs.rst:60 ../../source/Installation/Ubuntu-Install-Debians.rst:56
msgid "Desktop Install (Recommended): ROS, RViz, demos, tutorials."
msgstr ""

#: ../../source/Installation/RHEL-Install-RPMs.rst:66 ../../source/Installation/Ubuntu-Install-Debians.rst:62
msgid "ROS-Base Install (Bare Bones): Communication libraries, message packages, command line tools. No GUI tools."
msgstr ""

#: ../../source/Installation/RHEL-Install-RPMs.rst:77 ../../source/Installation/Ubuntu-Install-Debians.rst:79
msgid "Sourcing the setup script"
msgstr ""

#: ../../source/Installation/RHEL-Install-RPMs.rst:90 ../../source/Installation/Ubuntu-Install-Debians.rst:95
msgid "If you installed ``ros-humble-desktop`` above you can try some examples."
msgstr ""

#: ../../source/Installation/RHEL-Install-RPMs.rst:116 ../../source/Installation/Ubuntu-Install-Debians.rst:125 ../../source/Installation/Windows-Install-Binary.rst:79
msgid "The default middleware that ROS 2 uses is ``Fast DDS``, but the middleware (RMW) can be replaced at runtime. See the :doc:`guide <../How-To-Guides/Working-with-multiple-RMW-implementations>` on how to work with multiple RMWs."
msgstr ""

#: ../../source/Installation/RHEL-Install-RPMs.rst:122 ../../source/Installation/Ubuntu-Install-Debians.rst:131
msgid "Troubleshooting techniques can be found :doc:`here <../How-To-Guides/Installation-Troubleshooting>`."
msgstr ""

#: ../../source/Installation/RHEL-Install-RPMs.rst:127 ../../source/Installation/Ubuntu-Install-Debians.rst:136
msgid "If you need to uninstall ROS 2 or switch to a source-based install once you have already installed from binaries, run the following command:"
msgstr ""

#: ../../source/Installation/Testing.rst:6
msgid "Testing with pre-release binaries"
msgstr ""

#: ../../source/Installation/Testing.rst:8
msgid "Many ROS packages are provided as pre-built binaries. Usually, you will get the released version of binaries when following :doc:`../Installation`. There are also pre-released versions of binaries that are useful for testing before making an official release. This article describes several options if you would like to try out pre-released versions of ROS binaries."
msgstr ""

#: ../../source/Installation/Testing.rst:14
msgid "Debian testing repository"
msgstr ""

#: ../../source/Installation/Testing.rst:16
msgid "When packages are released into a ROS distribution (using bloom), the buildfarm builds them into debian packages which are stored temporarily in the **building** apt repository. As dependent packages are rebuilt, an automatic process periodically synchronizes the packages in **building** to a secondary repository called **ros-testing**. **ros-testing** is intended as a soaking area where developers and bleeding-edge users may give the packages extra testing, before they are manually synced into the public ros repository from which users typically install packages."
msgstr ""

#: ../../source/Installation/Testing.rst:20
msgid "Approximately every two weeks, the rosdistro's release manager manually synchronizes the contents of **ros-testing** into the **main** ROS repository."
msgstr ""

#: ../../source/Installation/Testing.rst:22
msgid "For Debian-based operating systems, you can install binary packages from the **ros-testing** repository."
msgstr ""

#: ../../source/Installation/Testing.rst:24
msgid "Make sure you have a working ROS 2 installation from Debian packages (see :doc:`../Installation`)."
msgstr ""

#: ../../source/Installation/Testing.rst:26
msgid "Edit (with sudo) the file ``/etc/apt/sources.list.d/ros2.list`` and change ``ros2`` with ``ros2-testing``. For example, on Ubuntu Jammy the contents should look like the following:"
msgstr ""

#: ../../source/Installation/Testing.rst:34
msgid "Update the ``apt`` index:"
msgstr ""

#: ../../source/Installation/Testing.rst:40
msgid "You can now install individual packages from the testing repository, for example:"
msgstr ""

#: ../../source/Installation/Testing.rst:46
msgid "Alternatively, you can move your entire ROS 2 installation to the testing repository:"
msgstr ""

#: ../../source/Installation/Testing.rst:52
msgid "Once you are finished testing, you can switch back to the normal repository by changing back the contents of ``/etc/apt/sources.list.d/ros2.list``:"
msgstr ""

#: ../../source/Installation/Testing.rst:59
msgid "and doing an update and upgrade:"
msgstr ""

#: ../../source/Installation/Testing.rst:69
msgid "Fat binaries"
msgstr ""

#: ../../source/Installation/Testing.rst:71
msgid "For core packages, we run nightly packaging jobs for Ubuntu Linux, RHEL, and Windows. These packaging jobs produce archives with pre-built binaries that can be downloaded and extracted to your filesystem."
msgstr ""

#: ../../source/Installation/Testing.rst:74
msgid "Make sure you have all dependencies installed according to the :doc:`latest development setup <Alternatives/Latest-Development-Setup>` for your platform."
msgstr ""

#: ../../source/Installation/Testing.rst:76
msgid "Go to https://ci.ros2.org/view/packaging/ and select a packaging job from the list corresponding to your platform."
msgstr ""

#: ../../source/Installation/Testing.rst:78
msgid "Under the heading \"Last Successful Artifacts\" you should see a download link (e.g. for Windows, ``ros2-package-windows-AMD64.zip``)."
msgstr ""

#: ../../source/Installation/Testing.rst:80
msgid "Download and extract the archive to your file system."
msgstr ""

#: ../../source/Installation/Testing.rst:82
msgid "To use the fat binary installation, source the ``setup.*`` file that can be found in the root of the archive."
msgstr ""

#: ../../source/Installation/Testing.rst:86
msgid "Ubuntu Linux and RHEL"
msgstr ""

#: ../../source/Installation/Testing.rst:99
msgid "Docker"
msgstr ""

#: ../../source/Installation/Testing.rst:101
msgid "For Ubuntu Linux, there is also a nightly Docker image based on the nightly fat archive."
msgstr ""

#: ../../source/Installation/Testing.rst:103
msgid "Pull the Docker image:"
msgstr ""

#: ../../source/Installation/Testing.rst:109
msgid "Start an interactive container:"
msgstr ""

#: ../../source/Installation/Testing.rst:115
msgid "For support on running GUI applications in Docker, take a look at the tutorial `User GUI's with Docker <https://wiki.ros.org/docker/Tutorials/GUI>`_ or the tool `rocker <https://github.com/osrf/rocker>`_."
msgstr ""

#: ../../source/Installation/Ubuntu-Install-Debians.rst:6
msgid "Ubuntu (Debian packages)"
msgstr ""

#: ../../source/Installation/Ubuntu-Install-Debians.rst:12
msgid "Debian packages for ROS 2 Humble Hawksbill are currently available for Ubuntu Jammy."
msgstr ""

#: ../../source/Installation/Ubuntu-Install-Debians.rst:19
msgid "ROS 2 Humble (Ubuntu Jammy): `amd64 <http://repo.ros2.org/status_page/ros_humble_default.html>`__\\ , `arm64 <http://repo.ros2.org/status_page/ros_humble_ujv8.html>`__"
msgstr ""

#: ../../source/Installation/Ubuntu-Install-Debians.rst:41
msgid "Update your apt repository caches after setting up the repositories."
msgstr ""

#: ../../source/Installation/Ubuntu-Install-Debians.rst:51
msgid "Due to early updates in Ubuntu 22.04 it is important that ``systemd`` and ``udev``-related packages are updated before installing ROS 2. The installation of ROS 2's dependencies on a freshly installed system without upgrading can trigger the **removal of critical system packages**."
msgstr ""

#: ../../source/Installation/Ubuntu-Install-Debians.rst:54
msgid "Please refer to `ros2/ros2#1272 <https://github.com/ros2/ros2/issues/1272>`_ and `Launchpad #1974196 <https://bugs.launchpad.net/ubuntu/+source/systemd/+bug/1974196>`_ for more information."
msgstr ""

#: ../../source/Installation/Ubuntu-Install-Debians.rst:69
msgid "Development tools: Compilers and other tools to build ROS packages"
msgstr ""

#: ../../source/Installation/Ubuntu-Install-Debians.rst:93
msgid "Talker-listener"
msgstr ""

#: ../../source/Installation/Ubuntu-Install-Debians.rst:143
msgid "You may also want to remove the repository:"
msgstr ""

#: ../../source/Installation/Windows-Install-Binary.rst:2
msgid "Windows (binary)"
msgstr ""

#: ../../source/Installation/Windows-Install-Binary.rst:8
msgid "This page explains how to install ROS 2 on Windows from a pre-built binary package."
msgstr ""

#: ../../source/Installation/Windows-Install-Binary.rst:28
msgid "Go to the releases page: https://github.com/ros2/ros2/releases"
msgstr ""

#: ../../source/Installation/Windows-Install-Binary.rst:29
msgid "Download the latest package for Windows, e.g., ``ros2-humble-*-windows-release-amd64.zip``."
msgstr ""

#: ../../source/Installation/Windows-Install-Binary.rst:33
msgid "There may be more than one binary download option which might cause the file name to differ."
msgstr ""

#: ../../source/Installation/Windows-Install-Binary.rst:37
msgid "To install debug libraries for ROS 2, see `Extra Stuff for Debug`_. Then continue on with downloading ``ros2-package-windows-debug-AMD64.zip``."
msgstr ""

#: ../../source/Installation/Windows-Install-Binary.rst:40
msgid "Unpack the zip file somewhere (we'll assume ``C:\\dev\\ros2_humble``\\ )."
msgstr ""

#: ../../source/Installation/Windows-Install-Binary.rst:56
msgid "In a command shell, set up the ROS 2 environment as described above and then run a C++ ``talker``\\ :"
msgstr ""

#: ../../source/Installation/Windows-Install-Binary.rst:62
msgid "Start another command shell and run a Python ``listener``\\ :"
msgstr ""

#: ../../source/Installation/Windows-Install-Binary.rst:100
msgid "Extra Stuff for Debug"
msgstr ""

#: ../../source/Installation/Windows-Install-Binary.rst:102
msgid "To download the ROS 2 debug libraries you'll need to download ``ros2-humble-*-windows-debug-AMD64.zip``. Please note that debug libraries require some more additional configuration/setup to work as given below."
msgstr ""

#: ../../source/Installation/Windows-Install-Binary.rst:105
msgid "Python installation may require modification to enable debugging symbols and debug binaries:"
msgstr ""

#: ../../source/Installation/Windows-Install-Binary.rst:107
msgid "Search in windows **Search Bar** and open **Apps and Features**."
msgstr ""

#: ../../source/Installation/Windows-Install-Binary.rst:108
msgid "Search for the installed Python version."
msgstr ""

#: ../../source/Installation/Windows-Install-Binary.rst:110
msgid "Click Modify."
msgstr ""

#: ../../source/Installation/Windows-Install-Binary.rst:115
msgid "Click Next to go to **Advanced Options**."
msgstr ""

#: ../../source/Installation/Windows-Install-Binary.rst:120
msgid "Make sure **Download debugging symbols** and **Download debug binaries** are checked."
msgstr ""

#: ../../source/Installation/Windows-Install-Binary.rst:125
msgid "Click Install."
msgstr ""

#: ../../source/Installation/Windows-Install-Binary.rst:128
msgid "(Alternative) ROS 2 Build Installation from aka.ms/ros"
msgstr ""

#: ../../source/Installation/Windows-Install-Binary.rst:130
msgid "https://aka.ms/ros project hosts ROS 2 builds against the release snapshots. This section explains how to install ROS 2 from this channel."
msgstr ""

#: ../../source/Installation/Windows-Install-Binary.rst:134
msgid "Install ROS 2 builds"
msgstr ""

#: ../../source/Installation/Windows-Install-Binary.rst:136
msgid "In an administrative command prompt, run the following commands."
msgstr ""

#: ../../source/Installation/Windows-Install-Binary.rst:149
msgid "Start an administrative command prompt and source the ROS 2 setup file to set up the workspace:"
msgstr ""

#: ../../source/Installation/Windows-Install-Binary.rst:156
msgid "Stay up-to-date"
msgstr ""

#: ../../source/Installation/Windows-Install-Binary.rst:158
msgid "To keep up-to-date with the latest builds, run:"
msgstr ""

#: ../../source/Installation/Windows-Install-Binary.rst:168
msgid "If you want to completely remove the environment downloaded above, run this command:"
msgstr ""

